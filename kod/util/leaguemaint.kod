% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
LeagueMaintenance is UtilityFunctions

constants:

   include blakston.khd
   include protocol.khd

   ONE_HUNDRED_MILLION = 100000000

resources:

   you_have_donated_to_league = \
      "You have now donated a sum total of %i shillings to our expansion projects. "
      "We thank you deeply for your contributions!"
   
   you_have_donated_to_league_over_one_hundred_million = \
      "You have now donated a sum total of %i%i shillings to our expansion projects. "
      "Thank you for your incredible contributions!"

   top_donator_is = \
      "The current top donor is %q, with a generous grand total of %i shillings."
   top_donator_is_hundred_million = \
      "The current top donor is %q, with a generous grand total of %i%i shillings."

   next_level_jailer = \
      "The next expansion in our plan is a monster jailer and reseller. "
      "For that, we need a sum total of ten million. "
      "The current total we have reach is %i shillings."

classvars:

properties:

   % form of [player object, shilling count, hundred millions count]
   plShillingContributors = $
   
   piHundredMillions = 0
   piTotalDonatedShillings = 0
   piFundingLevel = 0

messages:

   Constructor()
   {
      Send(self,@Recreate);

      return;
   }

   Recreate()
   {
      return;
   }

   NewDay()
   {
      return;
   }

   NewGameHour()
   {
      return;
   }
   
   GetContributors()
   {
      return plShillingContributors;
   }

   DonatedMoneyToLeague(who=$,iAmount=0)
   {
      local i, iPlayerAmount;

      % Amount is limited to 5 million at the donation boxes.
      if piTotalDonatedShillings + iAmount <= 0
      {
         % Oops, we rolled over!
         piTotalDonatedShillings = piTotalDonatedShillings - 100000000;
         piHundredMillions++;
      }
      
      % Save from rollover, we can now add.
      piTotalDonatedShillings = piTotalDonatedShillings + iAmount;

      Post(self,@CheckForNextFundingLevel);

      foreach i in plShillingContributors
      {
         if First(i) = who
         {
            if Nth(i,2) + iAmount <= 0
            {
               % Oops, we rolled over!
               % There is a legacy system involved in this. Some entries may only be two values long.
               if Length(i) < 3
               {
                  % Let's upgrade this to 3 values.
                  iPlayerAmount = Nth(i,2) - ONE_HUNDRED_MILLION;
                  plShillingContributors = DelListElem(plShillingContributors,i);
                  plShillingContributors = Cons([who,iPlayerAmount+iAmount,1],plShillingContributors);
                  Send(who,@MsgSendUser,#message_rsc=you_have_donated_to_league_over_one_hundred_million,#parm1=1,#parm2=iPlayerAmount+iAmount);
                  return;
               }
               else
               {
                  SetNth(i,2,Nth(i,2) - ONE_HUNDRED_MILLION);
                  SetNth(i,3,Nth(i,3)+1);
                  SetNth(i,2,Nth(i,2) + iAmount);
                  Send(who,@MsgSendUser,#message_rsc=you_have_donated_to_league_over_one_hundred_million,#parm1=Nth(i,3),#parm2=Nth(i,2));
               }
            }
            else
            {
               SetNth(i,2,Nth(i,2)+iAmount);
               
               if Nth(i,3) > 0
               {
                  Send(who,@MsgSendUser,#message_rsc=you_have_donated_to_league_over_one_hundred_million,#parm1=Nth(i,3),#parm2=Nth(i,2));
               }
               else
               {
                  Send(who,@MsgSendUser,#message_rsc=you_have_donated_to_league,#parm1=Nth(i,2));
               }
            }
            Post(self,@AnnounceTopDonator);
            return;
         }
      }
      
      plShillingContributors = Cons([who,iAmount, 0],plShillingContributors);
      Send(who,@MsgSendUser,#message_rsc=you_have_donated_to_league,#parm1=iAmount);
      
      Post(self,@AnnounceTopDonator);
      return;
   }

   AnnounceTopDonator()
   {
      local iTopDonator, i, oTopDonator, iHighestAmount, iHighestHundredMillions;
      
      oTopDonator = $;
      iHighestAmount = 0;
      iHighestHundredMillions = 0;
      foreach i in plShillingContributors
      {
         if Length(i) > 2
            AND Nth(i,3) > iHighestHundredMillions
         {
            iHighestHundredMillions = Nth(i,3);
            iHighestAmount = Nth(i,2);
            oTopDonator = Nth(i,1);
         }
         else if Length(i) > 2
            AND Nth(i,3) = iHighestHundredMillions
            AND Nth(i,2) > iHighestAmount
         {
            iHighestHundredMillions = Nth(i,3);
            iHighestAmount = Nth(i,2);
            oTopDonator = Nth(i,1);
         }
         else if iHighestHundredMillions = 0
            AND Nth(i,2) > iHighestAmount
         {
            iHighestHundredMillions = 0;
            iHighestAmount = Nth(i,2);
            oTopDonator = Nth(i,1);
         }
      }
      
      if oTopDonator <> $
      {
         foreach i in Send(Send(SYS,@FindRoomByNum,#num=RID_ADVENTURERS_GUILD),@GetHolderActive)
         {
            if IsClass(First(i),&Player)
            {
               if iHighestHundredMillions = 0
               {
                  Send(First(i),@MsgSendUser,#message_rsc=top_donator_is,#type1=STRING_RESOURCE,
                                                                         #parm1=Send(oTopDonator,@GetTrueName),
                                                                         #parm2=iHighestAmount);
               }
               else
               {
                  Send(First(i),@MsgSendUser,#message_rsc=top_donator_is_hundred_million,#type1=STRING_RESOURCE,
                                                                         #parm1=Send(oTopDonator,@GetTrueName),
                                                                         #parm2=iHighestHundredMillions,
                                                                         #parm3=iHighestAmount);
               }
            }
         }
      }
      
      return;
   }

   CheckForNextFundingLevel()
   {
      % 200 million for Morgue
      % 100 million for seer
      if piFundingLevel = 3
         AND piHundredMillions >= 2
      {
         piFundingLevel = 4;
         Send(Send(SYS,@FindRoomByNum,#num=RID_ADVENTURERS_GUILD),@UpgradeBuilding);
         return;
      }
      % 100 million for seer
      if piFundingLevel = 2
         AND piHundredMillions >= 1
      {
         piFundingLevel = 3;
         Send(Send(SYS,@FindRoomByNum,#num=RID_ADVENTURERS_GUILD),@UpgradeBuilding);
         return;
      }
      % 50 million for hangout room
      if piFundingLevel = 1
         AND (piTotalDonatedShillings >= 50000000
            OR piHundredMillions > 0)
      {
         piFundingLevel = 2;
         Send(Send(SYS,@FindRoomByNum,#num=RID_ADVENTURERS_GUILD),@UpgradeBuilding);
         return;
      }
      % 20 million for jailer
      if piFundingLevel = 0
         AND (piTotalDonatedShillings >= 20000000
            OR piHundredMillions > 0)
      {
         piFundingLevel = 1;
         Send(Send(SYS,@FindRoomByNum,#num=RID_ADVENTURERS_GUILD),@UpgradeBuilding);
         return;
      }
      return;
   }
   
   GetFundingLevel()
   {
      return piFundingLevel;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
