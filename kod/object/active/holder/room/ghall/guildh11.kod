% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
GuildHall11 is GuildHall

   % FoF is a classic. It's rarely visited but close to a councilor and to BQ.
   %    FoF has the strongest connection to nature of any hall,
   %    and as a result has strong spell totems.
   %    It also has a great meditation ratio.
   %
   % 

constants:

   MAINDOOR  = 1
   MAINDOOR2 = 3
   SECRETDOOR = 2
   
   DOOR_DELAY = 5000
       
   include blakston.khd

resources:

   include guildh11.lkod

   room_name_guildh11 = "The home of the Friends of the Forest"
   room_guildh11 = guildh11.roo

   guildh11_forest_sound = ambcntry.wav
   
   guildh11_portal_one_desc = \
      "Through this portal, you can see the Deep Forest of Farol."

   guildh11_portal_two_desc = \
      "The Vale of Sorrows shimmers through this portal."

classvars:

   vrName = room_name_guildh11

   viTeleport_row = 5
   viTeleport_col = 16

   viNews_row = 18
   viNews_col = 6
   viNews_finerow = 48
   viNews_finecol = 48

   viFoyer_north = 2
   viFoyer_south = 7
   viFoyer_west = 11
   viFoyer_east = 20

   viLever_row = 26
   viLever_col = 2
   viLever_fine_row = 48
   viLever_fine_col = 32

   viInner_teleport_row = 22
   viInner_teleport_col = 5

   viQuality = 5
   viTerrain_type = TERRAIN_FOREST | TERRAIN_GUILDHALL | TERRAIN_RESIDENCE
   viSeconds_til_close = 8

   viWeatherZone = WEATHER_ZONE_MARION
   
   viPortalOneRow = 20
   viPortalOneCol = 27
   viPortalOneFineRow = 58
   viPortalOneFineCol = 49
   viPortalOneAngle = ANGLE_SOUTH_WEST
   viPortalOneDestRID = RID_E6
   viPortalOneDestRow = 36
   viPortalOneDestCol = 60
   viPortalOneDestFineRow = 5
   viPortalOneDestFineCol = 16
   viPortalOneDestAngle = ANGLE_NORTH_WEST
   vsPortalOneDesc = guildh11_portal_one_desc
   
   viPortalTwoRow = 24
   viPortalTwoCol = 27
   viPortalTwoFineRow = 5
   viPortalTwoFineCol = 50
   viPortalTwoAngle = ANGLE_NORTH_WEST
   viPortalTwoDestRID = RID_C2
   viPortalTwoDestRow = 25
   viPortalTwoDestCol = 6
   viPortalTwoDestFineRow = 40
   viPortalTwoDestFineCol = 52
   viPortalTwoDestAngle = ANGLE_EAST
   vsPortalTwoDesc = guildh11_portal_two_desc
   
   viReliquaryOneRow = 11
   viReliquaryOneCol = 24
   viReliquaryOneFineRow = 28
   viReliquaryOneFineCol = 57
   
   % Fusing device rates go from 8 (worst) to 4 (best) 
   viShardFusingDeviceRow = 11
   viShardFusingDeviceCol = 24
   viShardFusingDeviceFineRow = 7
   viShardFusingDeviceFineCol = 24
   viShardFusingDeviceRate = 6
   
   % Shattering device rates go from 2 (worst) to 4 (best) 
   viShardShatteringDeviceRow = 11
   viShardShatteringDeviceCol = 25
   viShardShatteringDeviceFineRow = 63
   viShardShatteringDeviceFineCol = 15
   viShardShatteringDeviceRate = 2
   
   viFociOneRow = 11
   viFociOneCol = 7
   viFociOneFineRow = 47
   viFociOneFineCol = 17
   viFociOnePower = 297
   viFociOneRange = 5
   viFociOneSpellNum = SID_REJUVENATE
   
   viFociTwoRow = 11
   viFociTwoCol = 7
   viFociTwoFineRow = 47
   viFociTwoFineCol = 17
   viFociTwoPower = 297
   viFociTwoRange = 5
   viFociTwoSpellNum = SID_RESTORATE

   viBartenderRow = 22
   viBartenderCol = 3
   viBartenderFineRow = 49
   viBartenderFineCol = 31
   viBartenderRate = 100
   
   viMarketRow = 16
   viMarketCol = 23
   viMarketFineRow = 10
   viMarketFineCol = 61
   viMarketRate = 100

properties:

   prRoom = room_guildh11
   piRoom_num = RID_GUILDH11

   piBaseLight = LIGHT_NICE
   piOutside_factor = OUTDOORS_5

   pbSnowGroundTexture = TRUE

   ptSecret = $
   ptEntrance = $
   
   piGuildHallMeditateEffiency = 100
   % FoF boosts Faren, Shal, and Jala by 15%
   piSpecialGuildHallMeditateEfficiency = 115

messages:

   Constructor()
   {
      plGuild_doors = [ [7,16] ];

      % This is a box containing the guild door, used
      % for removing players from it when it closes.
      plEntrance = [ 787, 812, 1600, 1700 ];

      propagate;
   }

   Constructed()
   {
      % Each sound is [wave_file, row, col, cutoff radius, maximum volume]
      % We have a special looping sound here because we don't want the forest
      %  sound to play in the foyer.
      plLooping_sounds = [ [ guildh11_forest_sound, 25, 16, 20, 100 ] ];

      propagate;
   }

   CreateStandardExits()
   {
      plExits = $;

      plExits = Cons([ 2, 17, RID_F3, 30, 23, ROTATE_NONE ],plExits);
      plExits = Cons([ 2, 18, RID_F3, 30, 23, ROTATE_NONE ],plExits);

      propagate;
   }

   Delete()
   {
      if ptSecret <> $
      {
         DeleteTimer(ptSecret);
         ptSecret=$;
      }
      if ptEntrance <> $
      {
         DeleteTimer(ptEntrance);
         ptEntrance = $;
      }

      propagate;
   }

   SomethingTryGo(what=$, row=$, col=$)
   {
      if row = 8 AND col = 16
      {
         Send(self,@OpenEntranceDoor);

         return TRUE;
      }

      propagate;
   }

   OpenEntranceDoor()
   {
      if ptEntrance = $
      {
         Send(self,@TimeStampDoor);
         Send(self,@SetSector,#sector=MAINDOOR,#animation=ANIMATE_FLOOR_LIFT,
               #height=48,#speed=50);
         Send(self,@SetSector,#sector=MAINDOOR2,#animation=ANIMATE_FLOOR_LIFT,
               #height=48,#speed=50);
         ptEntrance = CreateTimer(self,@CloseEntranceDoor,DOOR_DELAY);
         Send(self,@OpenEntranceDoorSound);
      }

      return;
   }

   CloseEntranceDoor()
   {
       Send(self,@SetSector,#sector=MAINDOOR,#animation=ANIMATE_FLOOR_LIFT,
            #height=128,#speed=50);
       Send(self,@SetSector,#sector=MAINDOOR2,#animation=ANIMATE_FLOOR_LIFT,
            #height=118,#speed=50);
       Send(self,@CloseEntranceDoorSound);
       
      % We now propagate this to handle removing players from the door,
      % and so the door can still be entered while it is closing.
      propagate;
   }

   OpenSecretDoor()
   {
      if ptSecret = $
      {
         Send(self,@SetSector,#sector=SECRETDOOR,#animation=ANIMATE_FLOOR_LIFT,
               #height=4,#speed=80);
         ptSecret = CreateTimer(self,@CloseSecretDoor,DOOR_DELAY);
         Send(self,@OpenSecretDoorSound);
      }

      return;
   }

   CloseSecretDoor()
   {
      ptSecret = $;
      Send(self,@SetSector,#sector=SECRETDOOR,#animation=ANIMATE_FLOOR_LIFT,
            #height=45,#speed=80);
      Send(self,@CloseSecretDoorSound);

      return;
   }

   CreateStandardObjects()
   {
      Send(self,@NewHold,#what=Create(&WoodenBox),#new_row=29,#new_col=29,
            #fine_col=32,#fine_row=16,#new_angle=ANGLE_NORTH);
      Send(self,@NewHold,#what=Create(&WoodenBox),#new_row=29,#new_col=30,
            #fine_col=0,#fine_row=0,#new_angle=ANGLE_SOUTH_WEST);

      Send(self,@NewHold,#what=Create(&Table),#new_row=25,#new_col=8,
            #fine_col=16,#fine_row=0);
      Send(self,@NewHold,#what=Create(&Table),#new_row=23,#new_col=10,
            #fine_col=0,#fine_row=48);
      Send(self,@NewHold,#what=Create(&Table),#new_row=23,#new_col=6,
            #fine_col=32,#fine_row=48);
      Send(self,@NewHold,#what=Create(&Table),#new_row=4,#new_col=19,
            #fine_col=40,#fine_row=16);

      Send(self,@NewHold,#what=Create(&Firepit),#new_row=11,#new_col=7,
            #fine_col=16,#fine_row=48);
      Send(self,@NewHold,#what=Create(&Firepit,#iSoundRadius=8),
            #new_row=7,#new_col=19,#fine_col=56,#fine_row=24);

      propagate;
   }

   GetTotemLightIntensity(what=$)
   {
      return 0;
   }

   GetTotemLightColor(what=$)
   {
      return LIGHT_ORANGE;
   }
   
   DoesPlayerQualifyForSpecialMeditateRatio(who=$,oSpell=$,oSkill=$)
   {
      if (oSpell <> $
         AND Send(oSpell,@GetSchool) = SS_FAREN)
         OR (oSpell <> $
         AND Send(oSpell,@GetSchool) = SS_SHALILLE)
         OR (oSpell <> $
         AND Send(oSpell,@GetSchool) = SS_JALA)
      {
         return TRUE;
      }
      return FALSE;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
