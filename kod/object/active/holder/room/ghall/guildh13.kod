% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
GuildHall13 is GuildHall

   % Massive reliquary focus, since this is a hall showing reverence for those lost in the line of duty.
   %    Small number of portals, but awesome destinations.

constants:

   MAIN_DOOR  = 4
   MAIN_DOOR_OPEN = 500
   MAIN_DOOR_CLOSED = 360
   SECRET_DOOR = 5
   SECRET_DOOR_OPEN = 480
   SECRET_DOOR_CLOSED = 380
   
   DOOR_DELAY = 5000
       
   include blakston.khd

resources:

   include guildh13.lkod

   room_name_guildh13 = "The Hall of the Slaughtered Command"
   room_guildh13 = guildh13.roo

   guildh13_locked = "The door is firmly locked."

   guildh13_gong = pdeath.wav
   guildh13_ocean_sound = ocean.wav
   
   gh13_trading_post_portal_desc = \
      "You see a warm jungle trading post beyond."
   gh13_abandoned_building_desc = \
      "You see garbage and dung beyond."
   gh13_old_schoolhouse_desc = \
      "You see a dusty abandoned schoolhouse beyond."

classvars:

   vrName = room_name_guildh13

   viTeleport_row = 9
   viTeleport_col = 3

   viNews_row = 2
   viNews_col = 12
   viNews_finerow = 24
   viNews_finecol = 0

   % Foyer is L-shaped
   viFoyer_north = 1     %outer bounding box
   viFoyer_south = 13 
   viFoyer_west = 1
   viFoyer_east = 7
   viFoyer2_south = 4    %inner elbow of L (inside is N and/or W of this point)
   viFoyer2_east = 4

   viLever_row = 15
   viLever_col = 17
   viLever_fine_row = 24
   viLever_fine_col = 40

   viInner_teleport_row = 5
   viInner_teleport_col = 28

   viQuality = 8
   viSeconds_til_close = 9

   viWeatherZone = WEATHER_ZONE_KOC_TOWN
   viWeatherMask = WEATHER_MASK_JUNGLE_NS
   
   viPortalOneRow = 13
   viPortalOneCol = 17
   viPortalOneFineRow = 53
   viPortalOneFineCol = 20
   viPortalOneAngle = ANGLE_SOUTH_EAST
   viPortalOneDestRID = RID_JUNGLE_TRADING_POST
   viPortalOneDestRow = 12
   viPortalOneDestCol = 13
   viPortalOneDestFineRow = 44
   viPortalOneDestFineCol = 14
   viPortalOneDestAngle = ANGLE_NORTH
   vsPortalOneDesc = gh13_trading_post_portal_desc
   
   viPortalTwoRow = 14
   viPortalTwoCol = 30
   viPortalTwoFineRow = 47
   viPortalTwoFineCol = 47
   viPortalTwoAngle = ANGLE_NORTH_WEST
   viPortalTwoDestRID = RID_TOS_GREY
   viPortalTwoDestRow = 7
   viPortalTwoDestCol = 2
   viPortalTwoDestFineRow = 47
   viPortalTwoDestFineCol = 15
   viPortalTwoDestAngle = ANGLE_NORTH_EAST
   vsPortalTwoDesc = gh13_abandoned_building_desc
   
   viPortalThreeRow = 14
   viPortalThreeCol = 23
   viPortalThreeFineRow = 48
   viPortalThreeFineCol = 16
   viPortalThreeAngle = ANGLE_NORTH_EAST
   viPortalThreeDestRID = RID_JAS_AB3
   viPortalThreeDestRow = 17
   viPortalThreeDestCol = 11
   viPortalThreeDestFineRow = 20
   viPortalThreeDestFineCol = 29
   viPortalThreeDestAngle = ANGLE_NORTH_WEST
   vsPortalThreeDesc = gh13_old_schoolhouse_desc
   
   viReliquaryOneRow = 2
   viReliquaryOneCol = 23
   viReliquaryOneFineRow = 16
   viReliquaryOneFineCol = 15
   
   viReliquaryTwoRow = 8
   viReliquaryTwoCol = 23
   viReliquaryTwoFineRow = 52
   viReliquaryTwoFineCol = 15
   
   viReliquaryThreeRow = 2
   viReliquaryThreeCol = 15
   viReliquaryThreeFineRow = 17
   viReliquaryThreeFineCol = 31
   
   viReliquaryFourRow = 2
   viReliquaryFourCol = 19
   viReliquaryFourFineRow = 17
   viReliquaryFourFineCol = 32
   
   viReliquaryFiveRow = 13
   viReliquaryFiveCol = 9
   viReliquaryFiveFineRow = 54
   viReliquaryFiveFineCol = 34
   
   viReliquarySixRow = 13
   viReliquarySixCol = 6
   viReliquarySixFineRow = 52
   viReliquarySixFineCol = 37
   
   % Fusing device rates go from 8 (worst) to 4 (best) 
   viShardFusingDeviceRow = 10
   viShardFusingDeviceCol = 18
   viShardFusingDeviceFineRow = 21
   viShardFusingDeviceFineCol = 3
   viShardFusingDeviceRate = 4
   
   % Shattering device rates go from 2 (worst) to 4 (best) 
   viShardShatteringDeviceRow = 11
   viShardShatteringDeviceCol = 16
   viShardShatteringDeviceFineRow = 40
   viShardShatteringDeviceFineCol = 50
   viShardShatteringDeviceRate = 4
   
   viFociOneRow = 7
   viFociOneCol = 7
   viFociOneFineRow = 35
   viFociOneFineCol = 56
   viFociOnePower = 198
   viFociOneRange = 2
   viFociOneSpellNum = SID_REJUVENATE
   
   viFociTwoRow = 7
   viFociTwoCol = 7
   viFociTwoFineRow = 35
   viFociTwoFineCol = 56
   viFociTwoPower = 198
   viFociTwoRange = 2
   viFociTwoSpellNum = SID_INVIGORATE

   viBartenderRow = 4
   viBartenderCol = 17
   viBartenderFineRow = 2
   viBartenderFineCol = 44
   viBartenderRate = 100
   
   viMarketRow = 10
   viMarketCol = 17
   viMarketFineRow = 63
   viMarketFineCol = 24
   viMarketRate = 100

properties:

   prRoom = room_guildh13
   piRoom_num = RID_GUILDH13

   piBaseLight = LIGHT_NICE
   piOutside_factor = OUTDOORS_5

   pbSnowGroundTexture = TRUE

   ptSecret = $
   ptEntrance = $

messages:

   Constructor()
   {
      plGuild_doors = [ [2,7], [3,7], [4,7] ];

      % This is a box containing the guild door, used
      % for removing players from it when it closes.
      plEntrance = [ 175, 475, 775, 825 ];

      % Each sound is [wave_file, row, col, cutoff radius, maximum volume]
      plLooping_sounds = [ [ guildh13_ocean_sound, 13, 7, 10, 10 ],
                           [ guildh13_ocean_sound, 11, 2, 10, 10 ],
                           [ guildh13_ocean_sound, 5, 38, 30, 100 ]
                         ];

      propagate;
   }

   CreateStandardExits()
   {
      plExits = $;

      plExits = Cons([ 9, 4, ROOM_LOCKED_DOOR, guildh13_locked ],plExits);

      plExits = Cons([ 9, 5, RID_GUILDH13, 9, 3, ROTATE_NONE ],plExits);

      %% teleport in to (11, 3) -- main entrance
      plExits = Cons([ 11, 2, RID_KOC_SOUTH, 43, 38, ROTATE_NONE ],plExits);
      plExits = Cons([ 10, 2, RID_KOC_SOUTH, 43, 38, ROTATE_NONE ],plExits);

      %% teleport in to (12, 7) -- to secure porch
      plExits = Cons([ 13, 7, RID_KOC_SOUTH, 47, 43, ROTATE_NONE ],plExits);
      plExits = Cons([ 13, 8, RID_KOC_SOUTH, 47, 43, ROTATE_NONE ],plExits);

      propagate;
   }

   SomethingTryGo(what=$,row=$,col=$)
   "Opens the guild outer doors from the inside"
   {
      if (row >= 2 AND row <= 4) AND col = 8
      {
         Send(self,@OpenEntranceDoor);

         return TRUE;
      }

      propagate;
   }

   SomeoneSaid(what=$,type=$,string=$,parm1=$,parm2=$,parm3=$,
            parm4=$,parm5=$,parm6=$,parm7=$,parm8=$)
   {
      local i, each_obj;

      if type = SAY_YELL or not IsClass(what,&player)
      {
         % Stolen from Holder, since we can't just
         % propagate to GuildHall's version.
         foreach i in plActive
         {
            each_obj = Send(self,@HolderExtractObject,#data=i);
            if Send(self,@SayRangeCheck,#talker=what,#hearer=each_obj)
            {
               Send(each_obj,@SomeoneSaid,#what=what,#type=type,#string=string,
                    #parm1=parm1,#parm2=parm2,#parm3=parm3,#parm4=parm4,
                    #parm5=parm5,#parm6=parm6,#parm7=parm7,#parm8=parm8);
            }
         }

         return;
      }

      % Say to people inside or outside the guild hall only.
      foreach i in plActive
      {
         each_obj = Send(self,@HolderExtractObject,#data=i);
         if Send(self,@SayRangeCheck,#talker=what,#hearer=each_obj)
         {
            if Send(self,@InFoyer,#who=what)
                     = Send(self,@InFoyer,#who=each_obj)
            {
               Send(each_obj,@SomeoneSaid,#what=what,#type=type,#string=string,
                     #parm1=parm1,#parm2=parm2,#parm3=parm3,#parm4=parm4,
                     #parm5=parm5,#parm6=parm6,#parm7=parm7,#parm8=parm8);
            }
            else
            {
               Send(each_obj,@MsgSendUser,#message_rsc=guildhall_muffled);
            }
         }
      }

      if poGuild_owner <> $
         AND StringEqual(string,Send(poGuild_owner,@GetPassword))
         AND NOT Send(self,@InFoyer,#who=what)
         AND type <> SAY_EMOTE
      {
         Send(self,@WalkThroughSecretWall,#who=what);
      }

      return;
   }

   WalkThroughSecretWall(who=$)
   {
      local iRow, iCol;

      if who = $
         OR Send(who,@GetOwner) <> self
      {
         return FALSE;
      }

      iRow = Send(who,@GetRow);
      iCol = Send(who,@GetCol);

      if (iCol = 26) OR (iCol = 27)
      {
         if (iRow = 8)
         {
            Send(SYS,@UtilGoNearSquare,#what=who,#where=self,
                  #new_row=10,#new_col=iCol);
         }

         if (iRow = 9)
         {
            Send(SYS,@UtilGoNearSquare,#what=who,#where=self,
                  #new_row=7,#new_col=iCol);
         }
      }

      return;
   }

   InFoyer(who=$,iRow=$,iCol=$,iFineRow=$,iFineCol=$)
   {
      if who <> $
      {
         if Send(who,@GetOwner) <> self
         {
            return FALSE;
         }

         iRow = Send(who,@GetRow);
         iCol = Send(who,@GetCol);
         iFineCol = Send(who,@GetFineCol);
         iFineRow = Send(who,@GetFineRow);
      }

      if iRow >= viFoyer_north AND iRow <= viFoyer_south
         AND iCol <= viFoyer_east AND iCol >= viFoyer_west
         AND (iRow <= viFoyer2_south OR iCol <= viFoyer2_east)
      {
         return TRUE;
      }

      return FALSE;
   }

   Delete()
   {
      if ptSecret <> $
      {
         DeleteTimer(ptSecret);
         ptSecret=$;
      }

      if ptEntrance <> $
      {
         DeleteTimer(ptEntrance);
         ptEntrance = $;
      }

      propagate;
   }

   OpenEntranceDoor()
   {
      if ptEntrance = $
      {
         Send(self,@TimeStampDoor);
         Send(self,@SetSector,#sector=MAIN_DOOR,
               #animation=ANIMATE_CEILING_LIFT,
               #height=MAIN_DOOR_OPEN,#speed=80);
         ptEntrance=CreateTimer(self,@CloseEntranceDoor,DOOR_DELAY);
         Send(self,@OpenEntranceDoorSound);
      }

      return;
   }

   CloseEntranceDoor()
   {
      Send(self,@SetSector,#sector=MAIN_DOOR,#animation=ANIMATE_CEILING_LIFT,
            #height=MAIN_DOOR_CLOSED,#speed=100);
      Send(self,@CloseEntranceDoorSound);

      % We now propagate this to handle removing players from the door,
      % and so the door can still be entered while it is closing.
      propagate;
   }

   OpenSecretDoor()
   {
      return;
   }

   CloseSecretDoor()
   {
      ptSecret = $;

      return;
   }

   CreateStandardObjects()
   {
      local lObjCoords1;
      lObjCoords1 = [ [02,01,24,56,OO_JUG], [08,10,16,56,OO_JUG],
                      [10,05,32,16,OO_JUG], [02,17,08,24,OO_DECORATIVE_POT],
                      [08,18,48,24,OO_GOLD_BOTTLE], [08,19,48,32,OO_BLUE_BOTTLE],
                      [10,06,48,32,OO_POISON],
                      [06,04,48,40,OO_tallurn], [08,22,32,16,OO_tallurn],
                      [13,14,40,32,OO_bigurn]
                    ];
      Send(self,@CreateOrnObjFromList,#lObjlist=lObjCoords1);

      % labelled as guild hall 13?
      Send(self,@NewHold,#what=Create(&TableLamp),#new_row=05,#new_col=16,
            #fine_col=24,#fine_row=16);
      Send(self,@NewHold,#what=Create(&TableLamp),#new_row=05,#new_col=18,
            #fine_col=24,#fine_row=16);
      Send(self,@NewHold,#what=Create(&TableLamp),#new_row=13,#new_col=13,
            #fine_col=40,#fine_row=32);

      Send(self,@NewHold,#what=Create(&Chest),
            #new_row=12,#new_col=24,#fine_col=00,#fine_row=48,
            #new_angle=ANGLE_WEST);
      Send(self,@NewHold,#what=Create(&Chest),
            #new_row=13,#new_col=24,#fine_col=48,#fine_row=48,
            #new_angle=ANGLE_WEST);
      Send(self,@NewHold,#what=Create(&Chest),
            #new_row=12,#new_col=29,#fine_col=40,#fine_row=08,
            #new_angle=ANGLE_WEST);
      Send(self,@NewHold,#what=Create(&Chest),
            #new_row=13,#new_col=29,#fine_col=56,#fine_row=08,
            #new_angle=ANGLE_WEST);

      propagate;
   }

   DefensesDown()
   {
      Send(self,@SomethingWaveRoom,#what=poShield_Lever,
            #wave_rsc=guildh13_gong);

      propagate;
   }

   GetRegion()
   {
      return RID_KOCATAN;
   }

   StartSnow(bOnGround=TRUE)
   {
      % Check if we can have weather effects here.
      if NOT pbWeatherEffects
      {
         return;
      }

      % If there's a sandstorm weather effect here, clear it.
      if Send(self,@CheckRoomFlag,#flag=ROOM_SANDSTORM)
      {
         Send(self,@EndSandstorm);
      }

      if bOnGround
      {
         if pbSnowGroundTexture
         {
            % We just want to show snow in the outside area.
            Send(self,@ChangeTexture,#id=1,#new_texture=61015,#flags=CTF_FLOOR);

            % Also, there's water here.
            Send(self,@ChangeTexture,#id=10,#new_texture=61017,
                  #flags=CTF_FLOOR);
            % Stop water scroll effect and remove depth.
            Send(self,@SetSectorFlags,#sector=10,#depth=SF_DEPTH0,
                  #scrollSpeed=SCROLL_NONE);
         }
      }

      Send(self,@SetRoomFlag,#flag=ROOM_SNOWING,#value=TRUE);
      Send(self,@WeatherChanged);

      return;
   }

   EndSnow(override=FALSE)
   "Use override if rooms have manually placed textures."
   {
      if Send(self,@CheckRoomFlag,#flag=ROOM_SNOWING)
      {
         Send(self,@SetRoomFlag,#flag=ROOM_SNOWING,#value=FALSE);
         Send(self,@WeatherChanged);
      }

      if pbSnowGroundTexture
         OR override
      {
         Send(self,@RemoveTextureChange,#id=1);
         Send(self,@RemoveTextureChange,#id=10);
         Send(self,@RemoveSectorFlagChange,#id=10);
      }

      return;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
