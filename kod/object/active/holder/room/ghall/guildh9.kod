% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
GuildHall9 is GuildHall

% The Abandoned Warehouse is extremely basic. Its portal goes to Jasper vaults.
%    Crate layout allows for more dynamic combat.
%    Blink spot is on top of some crates for height advantage.

constants:

   MAINDOOR = 1
   SECRETDOOR = 2
   
   DOOR_DELAY = 5000
       
   include blakston.khd

resources:

   include guildh9.lkod

   room_name_guildh9 = "The Abandoned Warehouse"
   room_guildh9 = guildh9.roo
   
   room_guildh9_portal_desc = \
      "This portal flickers with the logistical energies of vaults and tabulation. "
      "A shimmering view of The Vault of Jasper can be seen in its inner distance."

classvars:

   vrName = room_name_guildh9

   viTeleport_row = 9
   viTeleport_col = 19

   viNews_row = 25
   viNews_col = 24
   viNews_finerow = 32
   viNews_finecol = 32

   viFoyer_north = 5
   viFoyer_south = 11
   viFoyer_west = 15
   viFoyer_east = 24

   viLever_row = 16
   viLever_col = 10
   viLever_fine_row = 32
   viLever_fine_col = 32

   viInner_teleport_row = 24
   viInner_teleport_col = 17

   viQuality = 1
   viTerrain_type = TERRAIN_CITY | TERRAIN_GUILDHALL
   viSeconds_til_close = 7
   
   viPortalOneRow = 25
   viPortalOneCol = 19
   viPortalOneFineRow = 32
   viPortalOneFineCol = 32
   viPortalOneAngle = ANGLE_NORTH
   viPortalOneDestRID = RID_JAS_VAULT
   viPortalOneDestRow = 3
   viPortalOneDestCol = 9
   viPortalOneDestFineRow = 38
   viPortalOneDestFineCol = 17
   viPortalOneDestAngle = ANGLE_SOUTH_WEST
   vsPortalOneDesc = room_guildh9_portal_desc
   
   viReliquaryOneRow = 25
   viReliquaryOneCol = 5
   viReliquaryOneFineRow = 47
   viReliquaryOneFineCol = 15
   
   % Fusing device rates go from 8 (worst) to 4 (best) 
   viShardFusingDeviceRow = 12
   viShardFusingDeviceCol = 24
   viShardFusingDeviceFineRow = 32
   viShardFusingDeviceFineCol = 47
   viShardFusingDeviceRate = 8
   
   % Fusing device rates go from 2 (worst) to 4 (best) 
   viShardShatteringDeviceRow = 15
   viShardShatteringDeviceCol = 24
   viShardShatteringDeviceFineRow = 32
   viShardShatteringDeviceFineCol = 47
   viShardShatteringDeviceRate = 2
   
   viFociOneRow = 12
   viFociOneCol = 5
   viFociOneFineRow = 23
   viFociOneFineCol = 15
   viFociOnePower = 99
   viFociOneRange = 2
   viFociOneSpellNum = SID_REJUVENATE

properties:

   prRoom = room_guildh9
   piRoom_num = RID_GUILDH9

   piBaseLight = LIGHT_NICE
   piOutside_factor = OUTDOORS_5

   ptSecret = $
   ptEntrance = $
   
   piTotemSpellNum = SID_REJUVENATE
   poTotemOne = $
   
   % The Abandoned Warehouse boosts all skill and spell meditation by a tiny amount.
   piGuildHallMeditateEffiency = 105
   % This hall also boosts meditation of the spell Seduce by 4x for reasons beyond anyone's understanding.
   piSpecialGuildHallMeditateEfficiency = 400

messages:

   Constructor()
   {
      plGuild_doors = [ [11,19] ];

      % This is a box containing the guild door, used
      % for removing players from it when it closes.
      plEntrance = [ 1175, 1225, 1900, 2000 ];

      propagate;
   }

   CreateStandardExits()
   {
      plExits = $;

      %% TO TOWN
      plExits = Cons([ 9, 24, RID_BAR_PORT, 22, 6, ROTATE_NONE ],plExits);
      plExits = Cons([ 10, 24, RID_BAR_PORT, 22, 6, ROTATE_NONE ],plExits);

      propagate;
   }

   Delete()
   {
      local oSpell;

      if ptSecret <> $
      {
         DeleteTimer(ptSecret);
         ptSecret = $;
      }

      if ptEntrance <> $
      {
         DeleteTimer(ptEntrance);
         ptEntrance = $;
      }

      propagate;
   }

   SomethingTryGo(what=$, row=$, col = $)
   {
      if row = 12 AND col = 19
      {
         Send(self,@OpenEntrancedoor);

         return TRUE;
      }

      propagate;
   }

   OpenEntranceDoor()
   {
      if ptEntrance = $
      {
         Send(self,@TimeStampDoor);
         Send(self,@SetSector,#sector=MAINDOOR,#animation=ANIMATE_FLOOR_LIFT,
               #height=128,#speed=100);
         Send(self,@OpenEntranceDoorSound);
         ptEntrance = CreateTimer(self,@CloseEntranceDoor,DOOR_DELAY);
      }

      return;
   }

   CloseEntranceDoor()
   {
      Send(self,@SetSector,#sector=MAINDOOR,#animation=ANIMATE_FLOOR_LIFT,
            #height=224,#speed=50);
      Send(self,@CloseEntranceDoorSound);

      % We now propagate this to handle removing players from the door,
      % and so the door can still be entered while it is closing.
      propagate;
   }

   OpenSecretDoor()
   {
      if ptSecret = $
      {
         Send(self,@SetSector,#sector=SECRETDOOR,#animation=ANIMATE_FLOOR_LIFT,
               #height=128,#speed=100);
         Send(self,@OpenSecretDoorSound);
         ptSecret = CreateTimer(self,@CloseSecretDoor,DOOR_DELAY);
      }

      return;
   }

   CloseSecretDoor()
   {
      ptSecret = $;
      Send(self,@SetSector,#sector=SECRETDOOR,#animation=ANIMATE_FLOOR_LIFT,
            #height=224,#speed=100);
      Send(self,@CloseSecretDoorSound);

      return;
   }

   CreateStandardObjects()
   {
      Send(self,@NewHold,#what=Create(&WoodenBox),
            #new_row=6,#new_col=5,#fine_col=24,#new_angle=ANGLE_SOUTH_EAST);

      propagate;
   }

   GetTotemLightIntensity(what=$)
   {
      if poTotemOne <> $
         AND what = poTotemOne
      {
         return 30;
      }

      return 0;
   }

   GetTotemLightColor(what=$)
   {
      if poTotemOne <> $
         AND what = poTotemOne
      {
         return LIGHT_BLUE;
      }
      return LIGHT_GREEN;
   }
   
   DoesPlayerQualifyForSpecialMeditateRatio(who=$,oSpell=$,oSkill=$)
   {
      if oSpell <> $
         AND Send(oSpell,@GetSpellNum) = SID_SEDUCE
      {
         return TRUE;
      }
      return FALSE;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
