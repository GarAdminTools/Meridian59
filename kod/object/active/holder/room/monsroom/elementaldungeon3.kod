% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
ElementalDungeon3 is MonsterRoom

constants:

   include blakston.khd

resources:

   room_name_elementaldungeon3 = "Prism of Ice"
   room_elementaldungeon3 = elementaldungeon3.roo
   elementaldungeon3_music = cave.mp3
   
   ice_prism_phase_out = \
      "You phase out of the elemental plane of ice, and are drawn along "
      "the natural curvature of the region's mana flows. Chilled, but alive, "
      "you find yourself at a familiar oasis."

   killed_ice_boss_msg = \
      "~B%s has slain %s%s! Quiet solitude and darkness fall across this place "
      "as the spark of life fades."

   prism_of_ice_entry_msg = \
      "This place is eerily quiet, and what motion does exist is purely the "
      "result of the living heat the mortal realm has brought with it. Otherwise, "
      "this entire plane is deathly cold and frozen solid. It would be wise "
      "not to linger too long."

classvars:

   vrName = room_name_elementaldungeon3

   viTeleport_row = 3
   viTeleport_col = 3


properties:

   prRoom = room_elementaldungeon3
   piRoom_num = RID_ELEMENTAL_DUNGEON3

   piBaseLight = LIGHT_MIN
   piOutside_factor = 0

   prMusic = elementaldungeon3_music

   piGen_time = 5000
   piGen_percent = 100

   piInit_count_min = 4
   piInit_count_max = 6

   piMonster_count_max = 25
   
   plBossCoordinates = $

   ptVictoryTimer = $

messages:

   Constructed()
   {
      plMonsters = [ [&XeoWater, 100] ];

      plGenerators = [ [22, 24], [61, 20], [47, 68], [15, 37], [12,61],
                       [31, 52], [64, 46], [33, 34], [35, 18] ];

      plBossCoordinates = [27, 74, 20, 27];

      propagate;
   }
   
   FirstUserEntered()
   {
      local i;
      Post(self,@StartThreat,#cClasses=[&IcewaterThreat]);
      
      foreach i in Send(self,@GetHolderActive)
      {
         if IsClass(First(i),&XeoBossWater)
         {
            propagate;
         }
      }
      Post(self,@NewHold,#what=Create(&XeoBossWater),#new_row=27,#new_col=74,#fine_row=20,#fine_col=27);
      Post(self,@NewHold,#what=Create(&IceElementalChampion),#new_row=24,#new_col=73,#fine_row=34,#fine_col=63);
      Post(self,@NewHold,#what=Create(&IceElementalChampion),#new_row=30,#new_col=72,#fine_row=32,#fine_col=5);
      propagate;
   }

   StartThreat(cClasses=$,report=FALSE)
   {
      local i;

      % Don't start same threat if one already exists.
      % Don't start threats with no players present.
      if pbUser_in_room
         AND cClasses <> $
      {
         foreach i in cClasses
         {
            if NOT Send(self,@HasObjectAttribute,#cClass=i)
            {
               Create(i,#host_object=self,#iDuration=$,#report=report);
            }
         }
      }

      return;
   }
   
   LastUserLeft()
   {
      local i;
      
      foreach i in Send(self,@GetHolderActive)
      {
         if IsClass(First(i),&XeoBossWater)
            OR IsClass(First(i),&IceElementalChampion)
         {
            Send(First(i),@Delete);
         }
      }
      Post(self,@EndAllThreats);

      propagate;
   }
   
   EndAllThreats()
   {
      local i;
      
      foreach i in plObject_attributes
      {
         if IsClass(i,&RoomThreat)
            OR IsClass(i,&RoomStorm)
         {
            Send(i,@Delete);
         }
      }

      return;
   }

   ReqSpellCast(who = $, oSpell = $)
   {
      local iQflags, iRflags, iHeightF, iHeightFWD, iHeightC, iServerID;

      if IsClass(oSpell,&Phase)
      {
         if NOT IsClass(who,&Player)
         {
            propagate;
         }

         Post(who,@MsgSendUser,#message_rsc=ice_prism_phase_out);
         Post(Send(SYS,@FindRoomByNum,#num=RID_WAYLAYOASIS),
               @Teleport,#what=who);
         return FALSE;
      }

      propagate;
   }

   SomethingKilled(what=$,victim=$)
   {
      local i;

      if victim <> $
         AND IsClass(victim,&Monster)
      {
         if IsClass(victim,&XeoBossWater)
         {
            foreach i in Send(self,@GetHolderActive)
            {
               if IsClass(First(i),&Player)
               {
                  Send(First(i),@MsgSendUser,#message_rsc=killed_ice_boss_msg,
                     #parm1=Send(what,@GetName),#parm2=Send(victim,@GetDef),#parm3=Send(victim,@GetName));
               }
            }
            Send(self,@BossKilled);
            propagate;
         }
      }

      propagate;
   }

   BossKilled()
   {
      local i;

      Send(self,@Rumble,#duration=20000);
      
      ptVictoryTimer = CreateTimer(self,@ClosePrismOfIce,20000);

      foreach i in Send(self,@GetHolderActive)
      {
         if IsClass(First(i),&Monster)
         {
            Send(First(i),@Killed);
         }
      }
      return;
   }

   ClosePrismOfIce()
   {
      local i, oSandbar;
      
      ptVictoryTimer = $;

      oSandbar = Send(SYS,@FindRoomByNum,#num=RID_DESERTSANDBAR);
      foreach i in Send(self,@GetHolderActive)
      {
         if IsClass(First(i),&Player)
         {
            Send(oSandbar,@Teleport,#what=First(i));
         }
      }
      
      Post(oSandbar,@PrismOfIceDefeated);
      
      return;
   }

   NewHold(what = $,new_row=$,new_col=$)
   "Prevents anyone from logging on into a special zone"
   {
      % If players log on, send them elsewhere.
      if IsClass(what,&User)
      {
         if Send(what,@GetOwner) = $
         {
            Post(Send(SYS,@FindRoomByNum,#num=RID_DESERTSANDBAR),@Teleport,#what=what);
         }
         else
         {
            Post(what,@MsgSendUser,#message_rsc=prism_of_ice_entry_msg);
         }
      }

      propagate;
   }

   Delete()
   {
      if ptVictoryTimer <> $
      {
         DeleteTimer(ptVictoryTimer);
         ptVictoryTimer = $;
      }
      propagate;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
