% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
OutdoorsG5 is MonsterRoom

constants:

   include blakston.khd

   LOWLAND_AREAS = 30
   LOWLAND_SIDES = 31
   
   BASE_RIVER_AREAS = 33
   RIVER_FALLS = 34

   CLOCK_FACE = 90
   
   GRASS_WALL_TEXTURE = 02311
   RIVER_WATER_TEXTURE = 08912
   MUD_TEXTURE = 09082
   BRACKISH_WATER_TEXTURE = 01807

resources:

   include g5.lkod
   waterfall_soundg5 = wfall2.wav
   room_OutdoorsG5 = g5.roo
   room_name_OutdoorsG5 ="Outskirts of Cor Noth"
   OutdoorsG5_music = walk1.mp3

classvars:

   vrName = room_name_OutdoorsG5

   viTeleport_row = 35
   viTeleport_col = 34

   viLongitude = 20
   viLatitude = 29

   viTerrain_type = TERRAIN_FOREST | TERRAIN_RIVER | TERRAIN_ROAD | TERRAIN_WATERFALL

   viFlag_Row = 16
   viFlag_Col = 28

   viWeatherZone = WEATHER_ZONE_CORNOTH

properties:

   prRoom = room_OutdoorsG5
   prMusic = OutdoorsG5_music
   piRoom_num = RID_G5

   piBaseLight = LIGHT_NICE
   piOutside_factor = 8
   piGen_time = 20000
   piGen_percent = 70

   piDirectional_percent = DIRECTIONAL_PERCENT_OUTDOORS

   pbSnowGroundTexture = TRUE

   piInit_count_min = 1
   piInit_count_max = 3

   piMonster_count_max = 15

messages:

   Constructed()
   {
      plMonsters = [ [&SpiderBaby, 50], [&GiantRat, 50] ];

      plGenerators = [ [30, 14], [30, 26], [23, 32], [33, 31], [33, 37],
		      [30, 44], [36, 23], [38, 16], [45, 19], [47, 22]];
      plLooping_sounds = [[ waterfall_soundg5, 26, 10, 100, 100 ]];

      Send(self,@SetSectorFlags,#sector=LOWLAND_AREAS,#depth=SF_DEPTH0,
            #scrollSpeed=SCROLL_NONE);
      Send(self,@ChangeTexture,#id=LOWLAND_SIDES,
            #new_texture=GRASS_WALL_TEXTURE,#flags=CTF_BELOWWALL);
      Send(self,@AnimateWall,#wall=LOWLAND_SIDES,#animation=ANIMATE_NONE,
            #first_group=1,#second_group=1,#end_group=1);

      propagate;
   }

   CreateStandardExits()
   {
      plExits = $;

      plExits = Cons([ 6, 18, RID_CORNOTH, 30, 68, ROTATE_NONE ],plExits);
      plExits = Cons([ 7, 18, RID_CORNOTH, 31, 68, ROTATE_NONE ],plExits);

      plEdge_exits = $;
%      plEdge_Exits = Cons([LEAVE_NORTH, RID_CORNOTH, 31, 67, ROTATE_NONE], plEdge_exits);
      plEdge_Exits = Cons([LEAVE_WEST, RID_CORNOTH, 49, 49, ROTATE_NONE], plEdge_exits);
      plEdge_Exits = Cons([LEAVE_SOUTH, RID_G6, 2, 36, ROTATE_NONE, COL_IS_LESS_THAN,31], plEdge_exits);
      plEdge_Exits = Cons([LEAVE_SOUTH, RID_G6, 2, 69, ROTATE_NONE, COL_IS_GREATER_THAN,30], plEdge_exits);        
 
      propagate;
   }

   RecalcLightAndWeather()
   {
      local iHour,iGroup;

      iHour = Send(SYS,@GetHour);

      iGroup = 1 + (iHour mod 12);

      Send(self,@AnimateWall,#wall=CLOCK_FACE,#animation=ANIMATE_NONE,
            #first_group=iGroup);
      
      propagate;
   }

   StartSnow(bOnGround=TRUE)
   {
      if NOT pbWeatherEffects
      {
         return;
      }

      if bOnGround
      {
         if pbSnowGroundTexture
         {
            Send(self,@RemoveLoopingSound,#sound_rsc=waterfall_soundg5);

            % Add snow to land areas.
            Send(self,@ChangeTexture,#id=LOWLAND_AREAS,#new_texture=61015,
                  #flags=CTF_FLOOR);
            Send(self,@ChangeTexture,#id=LOWLAND_SIDES,#new_texture=61016,
                  #flags=CTF_BELOWWALL);

            % Turn special water to ice.
            Send(self,@ChangeTexture,#id=BASE_RIVER_AREAS,
                  #new_texture=61017,#flags=CTF_FLOOR);

            Send(self,@SetSectorFlags,#sector=BASE_RIVER_AREAS,
                  #depth=SF_DEPTH0,#scrollSpeed=SCROLL_NONE);

            % Stop vertically scrolling water from animating.
            Send(self,@AnimateWall,#wall=RIVER_FALLS,
                  #animation=ANIMATE_NONE,#first_group=1,#second_group=1,
                  #end_group=1);
            Send(self,@ChangeTexture,#id=RIVER_FALLS,#new_texture=61017,
                  #flags=CTF_BELOWWALL);
         }
      }

      propagate;
   }

   EndSnow(override=FALSE)
   {
      if pbSnowGroundTexture
         OR override
      {
         plLooping_sounds = [[ waterfall_soundg5, 26, 10, 100, 100 ]];

         % Remove snow/ice from special areas.
         Send(self,@RemoveTextureChange,#id=LOWLAND_AREAS);
         Send(self,@RemoveTextureChange,#id=BASE_RIVER_AREAS);
         Send(self,@RemoveTextureChange,#id=RIVER_FALLS);

         Send(self,@RemoveSectorFlagChange,#id=BASE_RIVER_AREAS);

         Send(self,@RemoveAnimateWallChange,#wall=RIVER_FALLS);
         Send(self,@ChangeTexture,#id=LOWLAND_SIDES,
               #new_texture=GRASS_WALL_TEXTURE,#flags=CTF_BELOWWALL);
         Send(self,@AnimateWall,#wall=LOWLAND_SIDES,#animation=ANIMATE_NONE,
               #first_group=1,#second_group=1,#end_group=1);
      }

      propagate;
   }

   StartDrought()
   {
      Send(self,@RemoveLoopingSound,#sound_rsc=waterfall_soundg5);

      Send(self,@ChangeTexture,#id=BASE_RIVER_AREAS,
            #new_texture=MUD_TEXTURE,#flags=CTF_FLOOR);
      Send(self,@ChangeTexture,#id=RIVER_FALLS,
            #new_texture=MUD_TEXTURE,#flags=CTF_BELOWWALL);

      Send(self,@SetSectorFlags,#sector=BASE_RIVER_AREAS,#depth=SF_DEPTH0,
            #scrollSpeed=SCROLL_NONE);
      Send(self,@AnimateWall,#wall=RIVER_FALLS,#animation=ANIMATE_NONE,
            #first_group=1,#second_group=1,#end_group=1);
      return;
   }

   EndDrought()
   {
      plLooping_sounds = [[ waterfall_soundg5, 26, 10, 100, 100 ]];

      Send(self,@RemoveSectorFlagChange,#id=BASE_RIVER_AREAS);
      Send(self,@RemoveTextureChange,#id=BASE_RIVER_AREAS);
      Send(self,@RemoveTextureChange,#id=RIVER_FALLS);
      Send(self,@RemoveAnimateWallChange,#wall=RIVER_FALLS);
      return;
   }

   StartRain()
   {
      Send(self,@StartFlood);
      propagate;
   }

   EndRain()
   {
      Send(self,@EndFlood);
      propagate;
   }

   StartFlood()
   {
      Send(self,@SetSectorFlags,#sector=LOWLAND_AREAS,#depth=SF_DEPTH1,
            #scrollSpeed=SCROLL_FAST);
      Send(self,@ChangeTexture,#id=LOWLAND_AREAS,
            #new_texture=RIVER_WATER_TEXTURE,#flags=CTF_FLOOR);
      Send(self,@RemoveTextureChange,#id=LOWLAND_SIDES);
      Send(self,@RemoveAnimateWallChange,#wall=LOWLAND_SIDES);
      return;
   }
   
   EndFlood()
   {
      Send(self,@SetSectorFlags,#sector=LOWLAND_AREAS,#depth=SF_DEPTH0,
            #scrollSpeed=SCROLL_NONE);
      Send(self,@RemoveTextureChange,#id=LOWLAND_AREAS);
      Send(self,@ChangeTexture,#id=LOWLAND_SIDES,
            #new_texture=GRASS_WALL_TEXTURE,#flags=CTF_BELOWWALL);
      Send(self,@AnimateWall,#wall=LOWLAND_SIDES,#animation=ANIMATE_NONE,
            #first_group=1,#second_group=1,#end_group=1);
      return;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
