% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
OutdoorsKD4 is KCForest

constants:

   include blakston.khd
   
   CLOSED_GATE_SECTOR = 50
   OPEN_GATE_SECTOR = 51
   
   GROUND_TEXTURE = 09271
   WOOD_TEXTURE = 09248
   
   GATE_UP_HEIGHT = 405
   GATE_DOWN_HEIGHT = 300

resources:

   include kd4.lkod

   room_name_OutdoorsKD4 = "The Clearing of the Trading Post"
   room_OutdoorsKD4 = kd4door.roo
   OutdoorsKD4_music = boneprst.mp3

   OutdoorsKD4_outbuilding_locked = "You may not enter the outbuilding."
   OutdoorsKD4_smokehouse_locked = "The smokehouse is locked."
   OutdoorsKD4_guardshack_locked = "The guard shack is locked."
   
   OutdoorsKD4_gate_closes = \
      "The Trading Post gate swings closed for the night."
   OutdoorsKD4_gate_opens = \
      "As the morning dawns, the Trading Post gate swings open."
   OutdoorsKD4_gate_closed_for_the_night_msg = \
      "The Trading Post gate is secured for the night, and will not reopen until dawn."

   OutdoorsKD4_gate_open_sound = woodup1.wav
   OutdoorsKD4_gate_close_sound = wooddn1.wav
   OutdoorsKD_sound_locked = doorlck.wav

classvars:

   vrName = room_name_OutdoorsKD4

   viTeleport_row = 55
   viTeleport_col = 44
   viTerrain_type = TERRAIN_JUNGLE

   viWeatherZone = WEATHER_ZONE_KOC_OUTP
   viWeatherMask = WEATHER_MASK_JUNGLE

   viLongitude = 37
   viLatitude = 53

properties:

   prRoom = room_OutdoorsKD4
   prMusic = OutdoorsKD4_music
   piRoom_num = RID_KD4

   piBaseLight = LIGHT_NICE
   piOutside_factor = 8

   piDirectional_percent = DIRECTIONAL_PERCENT_OUTDOORS

   piGen_time = 120000
   piGen_percent = 50

   piInit_count_min = 2
   piInit_count_max = 4

   piMonster_count_max = 3

   pbSnowGroundTexture = TRUE
   
   piPreviousPhase = 0
   pbGateClosed = FALSE

messages:

   Constructed()
   {
      plMonsters = [[ &Avar, 80], [&AvarShaman, 10], [&AvarChieftain,10]];
      plGenerators = [ [16,21], [14,36], [13,58], [50,45], [43,17] ];

      propagate;
   }

   CreateJungleItemCoords()
   {      
      plItem_coords = [ [&RainbowFern,20,4], [&RainbowFern,54,44],
                        [&RainbowFern,10,62] ];

      % Do not propagate
      return;
   }

   CreateStandardExits()
   {
      plExits = $;

      plExits = Cons([ 24, 38, ROOM_LOCKED_DOOR, OutdoorsKD4_outbuilding_locked ],plExits);
      plExits = Cons([ 25, 38, ROOM_LOCKED_DOOR, OutdoorsKD4_outbuilding_locked ],plExits);
      plExits = Cons([ 39, 41, ROOM_LOCKED_DOOR, OutdoorsKD4_smokehouse_locked ],plExits);
      plExits = Cons([ 39, 42, ROOM_LOCKED_DOOR, OutdoorsKD4_smokehouse_locked ],plExits);
      plExits = Cons([ 32, 33, ROOM_LOCKED_DOOR, OutdoorsKD4_guardshack_locked ],plExits);
      plExits = Cons([ 33, 33, ROOM_LOCKED_DOOR, OutdoorsKD4_guardshack_locked ],plExits);

      % Teleport to tpost2:
      plExits = Cons([ 33, 42, RID_JUNGLE_TRADING_POST_CELLAR, 06, 03, ROTATE_NONE ],plExits);
      plExits = Cons([ 34, 42, RID_JUNGLE_TRADING_POST_CELLAR, 06, 03, ROTATE_NONE ],plExits);
      % Teleport to tpost1 (front door):
      plExits = Cons([ 30, 39, RID_JUNGLE_TRADING_POST, 05, 03, ROTATE_NONE ],plExits);
      plExits = Cons([ 31, 39, RID_JUNGLE_TRADING_POST, 05, 03, ROTATE_NONE ],plExits);
      plExits = Cons([ 30, 40, RID_JUNGLE_TRADING_POST, 05, 03, ROTATE_NONE ],plExits);
      plExits = Cons([ 31, 40, RID_JUNGLE_TRADING_POST, 05, 03, ROTATE_NONE ],plExits);
      % Teleport to tpost1 (lower right door):
      plExits = Cons([ 37, 49, RID_JUNGLE_TRADING_POST, 12, 13, ROTATE_NONE ],plExits);
      plExits = Cons([ 38, 49, RID_JUNGLE_TRADING_POST, 12, 13, ROTATE_NONE ],plExits);
      % Teleport to tpost1 (upper right door):
      plExits = Cons([ 28, 49, RID_JUNGLE_TRADING_POST, 03, 13, ROTATE_NONE ],plExits);
      plExits = Cons([ 27, 49, RID_JUNGLE_TRADING_POST, 03, 13, ROTATE_NONE ],plExits);

      plEdge_Exits = $;
      plEdge_Exits = Cons([LEAVE_NORTH, RID_KD3, 59, 32, ROTATE_NONE], plEdge_exits);
      plEdge_Exits = Cons([LEAVE_EAST, RID_KE4, 16, 1, ROTATE_NONE], plEdge_exits);

      propagate;
   }

   CloseGate()
   {
      local i;
      
      foreach i in Send(self,@GetPlayersInRoom)
      {
         Send(i,@MsgSendUser,#message_rsc=OutdoorsKD4_gate_closes);
      }

      Send(self,@SetSector,#sector=OPEN_GATE_SECTOR,#animation=ANIMATE_FLOOR_LIFT,#height=GATE_DOWN_HEIGHT,#speed=0);
      Send(self,@ChangeTexture,#id=OPEN_GATE_SECTOR,#new_texture=GROUND_TEXTURE,#flags=CTF_FLOOR);

      Send(self,@SetSector,#sector=CLOSED_GATE_SECTOR,#animation=ANIMATE_FLOOR_LIFT,#height=GATE_UP_HEIGHT,#speed=0);
      Send(self,@ChangeTexture,#id=CLOSED_GATE_SECTOR,#new_texture=WOOD_TEXTURE,#flags=CTF_FLOOR);
      
      Send(self,@SomethingWaveRoomCoords,#wave_rsc=OutdoorsKD4_gate_close_sound,#row=34,#col=31);
      
      pbGateClosed = TRUE;
      return;
   }

   OpenGate()
   {
      local i;
      
      foreach i in Send(self,@GetPlayersInRoom)
      {
         Send(i,@MsgSendUser,#message_rsc=OutdoorsKD4_gate_opens);
      }

      Send(self,@SetSector,#sector=OPEN_GATE_SECTOR,#animation=ANIMATE_FLOOR_LIFT,#height=GATE_UP_HEIGHT,#speed=0);
      Send(self,@ChangeTexture,#id=OPEN_GATE_SECTOR,#new_texture=WOOD_TEXTURE,#flags=CTF_FLOOR);
      
      Send(self,@SetSector,#sector=CLOSED_GATE_SECTOR,#animation=ANIMATE_FLOOR_LIFT,#height=GATE_DOWN_HEIGHT,#speed=0);
      Send(self,@ChangeTexture,#id=CLOSED_GATE_SECTOR,#new_texture=GROUND_TEXTURE,#flags=CTF_FLOOR);
      
      Send(self,@SomethingWaveRoomCoords,#wave_rsc=OutdoorsKD4_gate_open_sound,#row=34,#col=31);
      
      pbGateClosed = FALSE;
      return;
   }

   RecalcLightAndWeather()
   {
      local SysDayPhase;

      SysDayPhase = Send(SYS,@GetDayPhase);

      % We're crossing over into a new quarter.
      if piPreviousPhase <> SysDayPhase
      {
         switch(Send(SYS,@GetDayPhase))
         {
            case DAY_PHASE_DAWN:
               Post(self,@OpenGate);
               break;
            case DAY_PHASE_NIGHT:
               Post(self,@CloseGate);
               break;
         }
      }

      % Previous phase is updated in parent class

      propagate;
   }

   SomethingTryGo(what = $,row = $,col = $)
   {
      if IsClass(what,&Player)
         AND row >= 33
         AND row <= 36
         AND col = 31
         AND Send(what,@GetHeightAtObject) = GATE_DOWN_HEIGHT
         AND pbGateClosed
      {
         Send(what,@MsgSendUser,#message_rsc=OutdoorsKD4_gate_closed_for_the_night_msg);
         Send(what,@WaveSendUser,#wave_rsc=OutdoorsKD_sound_locked);
         return TRUE;
      }

      propagate;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
