% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
OutdoorsG4 is MonsterRoom

constants:

   include blakston.khd

   CLOCK_FACE = 90

   VERY_DEEP_RIVER_AREAS = 30
   DEEP_RIVER_AREAS = 31
   SHALLOW_RIVER_AREAS = 32
   BRIDGE_AREAS = 33
   RIVER_AREAS = 34
   WATERFALL_SIDES = 35
   DRAINAGE_AREAS = 36

   RIVER_WATER_TEXTURE = 08912
   MUD_TEXTURE = 09082
   BRACKISH_WATER_TEXTURE = 01807

resources:

   include g4.lkod

   room_name_OutdoorsG4 ="Main gate to Cor Noth"
   room_OutdoorsG4 = g4.roo
   OutdoorsG4_music = walk1.mp3

   waterfall_soundg4 = wfall2.wav

classvars:

   vrName = room_name_OutdoorsG4

   viTeleport_row = 42
   viTeleport_col = 15

   viLongitude = 17
   viLatitude = 23

   viTerrain_type = TERRAIN_FOREST | TERRAIN_RIVER | TERRAIN_LAKE | TERRAIN_ROAD | TERRAIN_WATERFALL

   viFlag_Row = 27
   viFlag_Col = 9

   viWeatherZone = WEATHER_ZONE_CORNOTH

properties:

   prRoom = room_OutdoorsG4
   prMusic = OutdoorsG4_music
   piRoom_num = RID_G4

   piBaseLight = LIGHT_NICE
   piOutside_factor = 8

   piDirectional_percent = DIRECTIONAL_PERCENT_OUTDOORS

   pbSnowGroundTexture = TRUE

   piGen_percent = 90

   piInit_count_min = 2
   piInit_count_max = 5

messages:

   Constructed()
   {
      plMonsters = [ [&SpiderBaby, 75], [&Centipede, 25] ];
      plGenerators = [ [ 5, 42], [15, 16], [22,  7], [21, 44], [30, 43],
                       [47, 47], [45, 33], [35, 32], [46, 11], [38,  6]
                     ];

      plLooping_sounds = [[ waterfall_soundg4, 13, 49, 40, 100 ]];

      propagate;
   }

   CreateStandardExits()
   {
      plExits = $;

      % TO TOWN
      plExits = Cons([ 55, 24, RID_CORNOTH, 2, 39, ROTATE_NONE ],plExits);
      plExits = Cons([ 55, 25, RID_CORNOTH, 2, 39, ROTATE_NONE ],plExits);

      plEdge_exits = $;
      plEdge_Exits = Cons([LEAVE_EAST, RID_H4, 32, 3, ROTATE_NONE], plEdge_exits);
%      plEdge_Exits = Cons([LEAVE_NORTH, RID_F3, 31, 66, ROTATE_NONE], plEdge_exits);       
      plEdge_Exits = Cons([LEAVE_WEST, RID_F4, 28, 48, ROTATE_NONE, ROW_IS_GREATER_THAN,37], plEdge_exits);
      plEdge_Exits = Cons([LEAVE_WEST, RID_F4, 18, 48, ROTATE_NONE, ROW_IS_LESS_THAN,38], plEdge_exits);        

      propagate;
   }

   RecalcLightAndWeather()
   {
      local iHour,iGroup;

      iHour = Send(SYS,@GetHour);

      iGroup = 1 + (iHour mod 12);

      Send(self,@AnimateWall,#wall=CLOCK_FACE,#animation=ANIMATE_NONE,
            #first_group=iGroup);
      
      propagate;
   }

   StartSnow(bOnGround=TRUE)
   {
      if NOT pbWeatherEffects
      {
         return;
      }

      if bOnGround
      {
         if pbSnowGroundTexture
         {
            Send(self,@RemoveLoopingSound,#sound_rsc=waterfall_soundg4);

            % Add snow to bridge areas.
            Send(self,@ChangeTexture,#id=BRIDGE_AREAS,#new_texture=61015,
                  #flags=CTF_FLOOR);

            % Turn special water to ice.
            Send(self,@ChangeTexture,#id=VERY_DEEP_RIVER_AREAS,
                  #new_texture=61017,#flags=CTF_FLOOR);
            Send(self,@ChangeTexture,#id=DEEP_RIVER_AREAS,#new_texture=61017,
                  #flags=CTF_FLOOR);
            Send(self,@ChangeTexture,#id=SHALLOW_RIVER_AREAS,
                  #new_texture=61017,#flags=CTF_FLOOR);
            Send(self,@ChangeTexture,#id=RIVER_AREAS,
                  #new_texture=61017,#flags=CTF_FLOOR);
            Send(self,@ChangeTexture,#id=DRAINAGE_AREAS,
                  #new_texture=61017,#flags=CTF_FLOOR);

            Send(self,@SetSectorFlags,#sector=VERY_DEEP_RIVER_AREAS,
                  #depth=SF_DEPTH0,#scrollSpeed=SCROLL_NONE);
            Send(self,@SetSectorFlags,#sector=DEEP_RIVER_AREAS,
                  #depth=SF_DEPTH0,#scrollSpeed=SCROLL_NONE);
            Send(self,@SetSectorFlags,#sector=SHALLOW_RIVER_AREAS,
                  #depth=SF_DEPTH0,#scrollSpeed=SCROLL_NONE);
            Send(self,@SetSectorFlags,#sector=RIVER_AREAS,
                  #depth=SF_DEPTH0,#scrollSpeed=SCROLL_NONE);
            Send(self,@SetSectorFlags,#sector=DRAINAGE_AREAS,
                  #depth=SF_DEPTH0,#scrollSpeed=SCROLL_NONE);

            % Stop vertically scrolling water from animating.
            Send(self,@AnimateWall,#wall=WATERFALL_SIDES,
                  #animation=ANIMATE_NONE,#first_group=1,#second_group=1,
                  #end_group=1);
            Send(self,@ChangeTexture,#id=WATERFALL_SIDES,#new_texture=61017,
                  #flags=CTF_BELOWWALL);
         }
      }

      propagate;
   }
   
   EndSnow(override=FALSE)
   {
      if pbSnowGroundTexture
         OR override
      {
         plLooping_sounds = [[ waterfall_soundg4, 13, 49, 40, 100 ]];

         % Remove snow/ice from special areas.
         Send(self,@RemoveTextureChange,#id=BRIDGE_AREAS);
         Send(self,@RemoveTextureChange,#id=SHALLOW_RIVER_AREAS);
         Send(self,@RemoveTextureChange,#id=DEEP_RIVER_AREAS);
         Send(self,@RemoveTextureChange,#id=VERY_DEEP_RIVER_AREAS);
         Send(self,@RemoveTextureChange,#id=RIVER_AREAS);
         Send(self,@RemoveTextureChange,#id=DRAINAGE_AREAS);

         Send(self,@RemoveSectorFlagChange,#id=VERY_DEEP_RIVER_AREAS);
         Send(self,@RemoveSectorFlagChange,#id=DEEP_RIVER_AREAS);
         Send(self,@RemoveSectorFlagChange,#id=SHALLOW_RIVER_AREAS);
         Send(self,@RemoveSectorFlagChange,#id=RIVER_AREAS);
         Send(self,@RemoveSectorFlagChange,#id=DRAINAGE_AREAS);

         Send(self,@RemoveAnimateWallChange,#wall=WATERFALL_SIDES);
         Send(self,@RemoveTextureChange,#id=WATERFALL_SIDES);
      }

      propagate;
   }

   StartDrought()
   {
      Send(self,@RemoveLoopingSound,#sound_rsc=waterfall_soundg4);

      Send(self,@ChangeTexture,#id=SHALLOW_RIVER_AREAS,
            #new_texture=MUD_TEXTURE,#flags=CTF_FLOOR);
      Send(self,@ChangeTexture,#id=DEEP_RIVER_AREAS,
            #new_texture=MUD_TEXTURE,#flags=CTF_FLOOR);
      Send(self,@ChangeTexture,#id=DRAINAGE_AREAS,
            #new_texture=MUD_TEXTURE,#flags=CTF_FLOOR);
      Send(self,@ChangeTexture,#id=VERY_DEEP_RIVER_AREAS,
            #new_texture=BRACKISH_WATER_TEXTURE,#flags=CTF_FLOOR);

      Send(self,@ChangeTexture,#id=WATERFALL_SIDES,#new_texture=MUD_TEXTURE,
           #flags=CTF_BELOWWALL);
      Send(self,@AnimateWall,#wall=WATERFALL_SIDES,#animation=ANIMATE_NONE,
            #first_group=1,#second_group=1,#end_group=1);

      Send(self,@SetSector,#sector=VERY_DEEP_RIVER_AREAS,
            #animation=ANIMATE_FLOOR_LIFT,#height=120,#speed=0);
      Send(self,@SetSector,#sector=DEEP_RIVER_AREAS,
            #animation=ANIMATE_FLOOR_LIFT,#height=125,#speed=0);

      Send(self,@SetSectorFlags,#sector=DRAINAGE_AREAS,#depth=SF_DEPTH0,
            #scrollSpeed=SCROLL_NONE);
      Send(self,@SetSectorFlags,#sector=SHALLOW_RIVER_AREAS,#depth=SF_DEPTH0,
            #scrollSpeed=SCROLL_NONE);
      Send(self,@SetSectorFlags,#sector=DEEP_RIVER_AREAS,#depth=SF_DEPTH0,
            #scrollSpeed=SCROLL_NONE);
      Send(self,@SetSectorFlags,#sector=VERY_DEEP_RIVER_AREAS,#depth=SF_DEPTH1,
            #scrollSpeed=SCROLL_SLOW);
      return;
   }
   
   EndDrought()
   {
      plLooping_sounds = [[ waterfall_soundg4, 13, 49, 40, 100 ]];

      Send(self,@RemoveTextureChange,#id=SHALLOW_RIVER_AREAS);
      Send(self,@RemoveTextureChange,#id=DEEP_RIVER_AREAS);
      Send(self,@RemoveTextureChange,#id=VERY_DEEP_RIVER_AREAS);
      Send(self,@RemoveTextureChange,#id=DRAINAGE_AREAS);

      Send(self,@RemoveTextureChange,#id=WATERFALL_SIDES);
      Send(self,@RemoveAnimateWallChange,#wall=WATERFALL_SIDES);

      Send(self,@SetSector,#sector=DEEP_RIVER_AREAS,
            #animation=ANIMATE_FLOOR_LIFT,#height=134,#speed=0);
      Send(self,@SetSector,#sector=VERY_DEEP_RIVER_AREAS,
            #animation=ANIMATE_FLOOR_LIFT,#height=134,#speed=0);

      Send(self,@RemoveSectorFlagChange,#id=SHALLOW_RIVER_AREAS);
      Send(self,@RemoveSectorFlagChange,#id=DEEP_RIVER_AREAS);
      Send(self,@RemoveSectorFlagChange,#id=VERY_DEEP_RIVER_AREAS);
      Send(self,@RemoveSectorFlagChange,#id=DRAINAGE_AREAS);
      return;
   }

   StartFlood()
   {
      % No configuration of flood changes looks good.
      return;
   }
   
   EndFlood()
   {
      return;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
