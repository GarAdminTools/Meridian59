% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

MockersRoom is Room

constants:

   include blakston.khd

resources:

   include mockers.lkod
   waterfall_soundmockers = wfall2.wav
   room_mockers = mockers.roo
   room_name_mockers = "Chamber of the Mocker"

   mockers_music = castle.mp3

   mockers_lockdoor = "You lock the door, barring others from entry."
   mockers_unlockdoor = "You unlock the door."

classvars:

   vrName = room_name_mockers

   viTeleport_row = 8
   viTeleport_col = 13
   viTerrain_type = TERRAIN_CASTLE | TERRAIN_RESIDENCE | TERRAIN_MYSTICAL | TERRAIN_FOUNTAIN

   viWeatherZone = WEATHER_ZONE_BARLOQUE

   viLongitude = 24
   viLatitude = 13

properties:

   prMusic = mockers_music

   piBaseLight = LIGHT_DARK
   piOutside_factor = OUTDOORS_3 

   piDirectional_percent = DIRECTIONAL_PERCENT_OUTDOORS

   pbSnowGroundTexture = TRUE

   prRoom = room_mockers
   piRoom_num = RID_MOCKERS_ROOM

   pbLocked = FALSE

   pbPortalOn = FALSE

messages:

   Constructed()
   {
      plLooping_sounds = [[ waterfall_soundmockers, 8, 8, 15, 50  ]];

      propagate;
   }

   SomeoneSaid(what = $,type = $,string = $,parm1 = $,parm2 = $,parm3 = $,
               parm4 = $, parm5 = $,parm6 = $,parm7 = $,parm8 = $)                       
   {
      local object;

      if isClass(what,&DM) AND StringEqual(string,"lock")
      {
         if NOT pbLocked
         {
            pbLocked = TRUE;
            Send(what,@MsgSendUser,#message_rsc = mockers_lockdoor);
         }
         else
         {
           pbLocked = FALSE;
           Send(what,@MsgSendUser,#message_rsc = mockers_unlockdoor);
         }

         return;
       }

      if StringEqual(string,"Mocker, in your greatness, reform me in your image! #2341")
         AND (StringEqual(send(what,@GetName),"Mocker"))
         AND IsClass(what,&DM)
      {
         object = create(&GuildShield);
         send(object,@ChangeGuildShieldColor,#color1=XLAT_TO_SKIN1,#shape=SHIELDSHAPE_CHECKER,#override=1);
         send(object,@ChangeGuildInsignia,#insignia=8);
         send(what,@NewHold,#what=object);
         send(what,@NewHold,#what=create(&LeatherArmor));
         send(what,@NewHold,#what=create(&Gauntlet));
         send(what,@NewHold,#what=create(&PantsC));
         send(what,@NewHold,#what=create(&Hammer));
         send(what,@NewHold,#what=create(&Shirt));

         return;    
      }

      propagate;
   }

   CheckLock()
   {
      return pbLocked; 
   }


   CreateStandardExits()
   {
      plExits = $;

      plExits = Cons([ 12, 10, RID_CASTLE2D, 31, 20, ROTATE_NONE ],plExits);


      propagate;
   }

   CreateStandardObjects()
   {
   %   local oBook;

   %   Send(self,@NewHold,#what=Create(&PrincessGuard),
   %        #new_row=7,#new_col=13);
   %   Send(self,@NewHold,#what=Create(&PrincessGuard),
   %        #new_row=4,#new_col=11);

  %   Send(self,@NewHold,#what=Create(&PrincessGuard),
  %         #new_row=12,#new_col=6);
      propagate;
   }

   OpenPortalToBiskalane()
   {
      % Portal has moved to basement
      return;
      if NOT pbPortalOn
      {
         Send(self,@NewHold,#what=Create(&Portal,#dest_room_num=RID_DESERTSHORE2,
                                              #dest_row=57,
                                              #dest_col=30,
                                              #dest_fine_row=48,
                                              #dest_fine_col=60,
                                              #dest_angle=ANGLE_EAST),
              #new_row=5,#new_col=12,#fine_row=49,#fine_col=48,#new_angle=ANGLE_SOUTH_WEST);
         pbPortalOn = TRUE;
      }
   
      return;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

