% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
ZigguratAltar is DesertRoom

constants:


   include blakston.khd

resources:

   ziggurat_altar_room = ziggurataltar.roo
   ziggurat_altar_room_name = "Apex of the Ziggurat"
   ziggurat_altar_music = aamusic3.mp3

classvars:

   vrName = ziggurat_altar_room_name

   viTeleport_row = 53
   viTeleport_col = 30

   viTerrain_type = TERRAIN_MYSTICAL
   
   vbSpawnMonsters = TRUE

properties:

   prRoom = ziggurat_altar_room
   prMusic = ziggurat_altar_music
   piRoom_num = RID_ZIGGURAT_ALTAR

   piBaseLight = LIGHT_NICE

messages:

   GetRegion()
   {
      return RID_DESERT;
   }

   GetPhaseMusic()
   {
      return ziggurat_altar_music;
   }

   RecalcBackgroundSkyGraphic(iSkyBox=0)
   {
      prBackground = background_chaos_night;

      return;
   }
   
   GetPhaseThreats()
   {
      switch(Send(SYS,@GetDayPhase))
      {
         case DAY_PHASE_DAWN:
            return [&ShockStorm, &ChaosThreat];
         case DAY_PHASE_DAY:
            if Send(Send(SYS,@FindRoomByNum,#num=RID_DESERTRIVER2),
                     @GetPrismOfFireDefeated)
            {
               return [&HeatStorm, &ChaosThreat];
            }
            return [&HeatThreat, &ChaosThreat];
         case DAY_PHASE_DUSK:
            if Send(Send(SYS,@FindRoomByNum,#num=RID_ACIDPATH),
                     @GetPrismOfAcidDefeated)
            {
               return [&AcidStorm, &RainThreat, &ChaosThreat];
            }
            return [&AcidThreat,&RainThreat, &ChaosThreat];
         case DAY_PHASE_NIGHT:
            if Send(Send(SYS,@FindRoomByNum,#num=RID_DESERTSANDBAR),@GetPrismOfIceDefeated)
            {
               return [&ColdStorm, &SnowThreat, &ChaosThreat];
            }
            return [&ColdThreat,&SnowThreat, &ChaosThreat];
      }
      return [&ShockStorm, &ChaosThreat];
   }

   PopulateArea()
   {
      local i, iNumMonsters, oMonster, lMonsters, lClasses, iMinRow, iMinCol, iMaxRow, iMaxCol, iChosenAngle;

      lMonsters = [&HighSorcererFire,
                   &HighSorcererCold,
                   &HighSorcererLightning,
                   &HighSorcererAcid,
                   &HighSorcererDeath,
                   &HighSorcererLife];
      
      iMinRow = 13;
      iMaxRow = 17;
      iMinCol = 25;
      iMaxCol = 35;

      iChosenAngle = ANGLE_SOUTH;

      foreach i in lMonsters
      {
         Send(self,@NewHold,#what=Create(i),
               #new_row=Random(iMinRow,iMaxRow),
               #new_col=Random(iMinCol,iMaxCol),
               #new_angle=iChosenAngle);
      }

      return;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
