% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
AcidPath is DesertRoom

constants:

   include blakston.khd
   
   PRISM_ENTRANCE = 101
   PRISM_WHITE = 07702
   RAFT_TWO = 102
   RAFT_ONE = 103

   RAFT_TEXTURE = 09074
   WATER_TEXTURE = 08968
   ACID_TEXTURE = 08912

resources:

   room_acidpath = acidpath.roo
   room_name_acidpath = "Poison Wellspring"
   acidpath_music = main.mp3

   acid_prism_opened_msg = \
      "~g~BThe acidic waters surge as the plane of acid moves closer to the mortal realm."
   acid_prism_closed_msg = \
      "~g~BThe flow of acidic waters ebb as the plane of acid moves further from the mortal realm."

classvars:

   vrName = room_name_acidpath

   viTeleport_row = 205
   viTeleport_col = 152

   viTerrain_type = TERRAIN_CAVES

   vbSpawnMonsters = FALSE

properties:

   prRoom = room_acidpath
   prMusic = acidpath_music
   piRoom_num = RID_ACIDPATH

   piBaseLight = LIGHT_NICE

   pbPrismOfAcidDefeated = FALSE
   pbPrismOpen = FALSE

   pbRaftOneUp = FALSE
   pbRaftTwoUp = FALSE

messages:

   Constructed()
   {
      Send(self,@PlaceAcidLights);
      propagate;
   }

   RecalcLightAndWeather()
   {
      local SysDayPhase, i;

      SysDayPhase = Send(SYS,@GetDayPhase);

      % We're crossing over into a new quarter.
      if piPreviousPhase <> SysDayPhase
      {
         % Simulate weather.
         % It's always raining here.
         if pbPrismOfAcidDefeated
         {
            Send(self,@DoPhaseWeather);
         }

         if SysDayPhase = DAY_PHASE_DUSK
            AND NOT pbPrismOfAcidDefeated
         {
            Send(self,@OpenPrismOfAcidEntrance);
            foreach i in plActive
            {
               if IsClass(First(i),&User)
               {
                  Send(First(i),@MsgSendUser,#message_rsc=acid_prism_opened_msg);
               }
            }
         }
         if SysDayPhase = DAY_PHASE_NIGHT
            and pbPrismOpen
         {
            Send(self,@ClosePrismOfAcidEntrance);
            foreach i in plActive
            {
               if IsClass(First(i),&User)
               {
                  Send(First(i),@MsgSendUser,#message_rsc=acid_prism_closed_msg);
               }
            }
         }
      }

      propagate;
   }

   DoPhaseWeather()
   "Called to simulate weather by some rooms."
   {
      switch(Send(SYS,@GetDayPhase))
      {
         case DAY_PHASE_DAWN:
            if NOT Send(self,@CheckRoomFlag,#flag=ROOM_RAINING)
            {
               Send(self,@StartRain);
            }
            break;
         case DAY_PHASE_DAY:
            if NOT Send(self,@CheckRoomFlag,#flag=ROOM_RAINING)
            {
               Send(self,@StartRain);
            }
            break;
         case DAY_PHASE_DUSK:
            if NOT Send(self,@CheckRoomFlag,#flag=ROOM_RAINING)
            {
               Send(self,@StartRain);
            }
            break;
         case DAY_PHASE_NIGHT:
            if NOT Send(self,@CheckRoomFlag,#flag=ROOM_RAINING)
            {
               Send(self,@StartRain);
            }
            break;
      }
      return;
   }

   GetPhaseThreats()
   {
      if pbPrismOfAcidDefeated
      {
         return [&AcidStorm];
      }

      return [&AcidThreat];
   }

   PlaceAcidLights()
   {
      Send(self,@NewHold,#what=Create(&DynamicLight,#iColor=LIGHT_GREEN,
           #iIntensity=85),#new_row=83,#new_col=140,#fine_row=32,#fine_col=6);
      Send(self,@NewHold,#what=Create(&DynamicLight,#iColor=LIGHT_GREEN,
           #iIntensity=85),#new_row=85,#new_col=140,#fine_row=29,#fine_col=9);
      Send(self,@NewHold,#what=Create(&DynamicLight,#iColor=LIGHT_GREEN,
           #iIntensity=85),#new_row=87,#new_col=141,#fine_row=2,#fine_col=29);
      Send(self,@NewHold,#what=Create(&DynamicLight,#iColor=LIGHT_GREEN,
           #iIntensity=85),#new_row=86,#new_col=143,#fine_row=61,#fine_col=34);
      Send(self,@NewHold,#what=Create(&DynamicLight,#iColor=LIGHT_GREEN,
           #iIntensity=85),#new_row=85,#new_col=145,#fine_row=36,#fine_col=1);
      Send(self,@NewHold,#what=Create(&DynamicLight,#iColor=LIGHT_GREEN,
           #iIntensity=85),#new_row=83,#new_col=145,#fine_row=25,#fine_col=6);
      Send(self,@NewHold,#what=Create(&DynamicLight,#iColor=LIGHT_GREEN,
           #iIntensity=85),#new_row=81,#new_col=143,#fine_row=56,#fine_col=37);
      Send(self,@NewHold,#what=Create(&DynamicLight,#iColor=LIGHT_GREEN,
           #iIntensity=85),#new_row=81,#new_col=141,#fine_row=56,#fine_col=27);
      return;
   }

   RaiseRaftOne()
   {
      Send(self,@SetSector,#sector=RAFT_ONE,#animation=ANIMATE_FLOOR_LIFT,#height=1005,#speed=0);
      Send(self,@ChangeTexture,#id=RAFT_ONE,#new_texture=RAFT_TEXTURE,#flags=CTF_FLOOR);
      Send(self,@SetSectorFlags,#sector=RAFT_ONE,#depth=SF_DEPTH0,#scrollSpeed=SCROLL_NONE);
      pbRaftOneUp = TRUE;
      return;
   }

   LowerRaftOne()
   {
      Send(self,@SetSector,#sector=RAFT_ONE,#animation=ANIMATE_FLOOR_LIFT,#height=1000,#speed=0);
      Send(self,@RemoveTextureChange,#id=RAFT_ONE);
      Send(self,@RemoveSectorFlagChange,#id=RAFT_ONE);
      pbRaftOneUp = FALSE;
      return;
   }

   RaiseRaftTwo()
   {
      Send(self,@SetSector,#sector=RAFT_TWO,#animation=ANIMATE_FLOOR_LIFT,#height=1005,#speed=0);
      Send(self,@ChangeTexture,#id=RAFT_TWO,#new_texture=RAFT_TEXTURE,#flags=CTF_FLOOR);
      Send(self,@SetSectorFlags,#sector=RAFT_TWO,#depth=SF_DEPTH0,#scrollSpeed=SCROLL_NONE);
      pbRaftTwoUp = TRUE;
      return;
   }

   LowerRaftTwo()
   {
      Send(self,@SetSector,#sector=RAFT_TWO,#animation=ANIMATE_FLOOR_LIFT,#height=1000,#speed=0);
      Send(self,@RemoveTextureChange,#id=RAFT_TWO);
      Send(self,@RemoveSectorFlagChange,#id=RAFT_TWO);
      pbRaftTwoUp = FALSE;
      return;
   }

   OpenPrismOfAcidEntrance()
   {
      if NOT pbPrismOfAcidDefeated
      {
         Send(self,@SetSector,#sector=PRISM_ENTRANCE,#animation=ANIMATE_FLOOR_LIFT,#height=1300,#speed=0);
         Send(self,@ChangeTexture,#id=PRISM_ENTRANCE,#new_texture=PRISM_WHITE,#flags=CTF_FLOOR);
         pbPrismOpen = TRUE;
      }
      return;
   }

   ClosePrismOfAcidEntrance()
   {
      Send(self,@RemoveTextureChange,#id=PRISM_ENTRANCE);
      Send(self,@SetSector,#sector=PRISM_ENTRANCE,#animation=ANIMATE_FLOOR_LIFT,#height=1305,#speed=0);
      pbPrismOpen = FALSE;
      return;
   }

   CreateRandomFogCloud()
   {
      local iRandomRow, iRandomCol, oElement, i, iQflags, iRflags, iHeightF, 
            iHeightFWD, iHeightC, iServerID, iRandomFineRow, iRandomFineCol;
      
      iRandomRow = Random(0,piRows);
      iRandomCol = Random(0,piCols);
      iRandomFineRow = Random(0,63);
      iRandomFineCol = Random(0,63);

      iQflags = LIQ_GET_SECTORINFO;

      if GetLocationInfoBSP(
                prmRoom, iQflags, iRandomRow, iRandomCol, iRandomFineRow,
                iRandomFineCol, *iRflags, *iHeightF, *iHeightFWD,
                *iHeightC, *iServerID)
      {
         % only place in lava
         if iServerID = 44
         {
            Send(self,@NewHold,#what=Create(&FogCloud,#Duration=10,
                  #Caster=self),
                  #new_row=iRandomRow,#new_col=iRandomCol,
                  #fine_row=iRandomFineRow,#fine_col=iRandomFineCol);
         }
      }

      return;
   }
   
   CreateFogClouds()
   {
      % North waterfall
      Send(self,@NewHold,#what=Create(&FogCloud,#Duration=$),#new_row=12,
            #new_col=16,#fine_row=43,#fine_col=20);
      Send(self,@NewHold,#what=Create(&FogCloud,#Duration=$),#new_row=12,
            #new_col=16,#fine_row=0,#fine_col=0);
      Send(self,@NewHold,#what=Create(&FogCloud,#Duration=$),#new_row=12,
            #new_col=16,#fine_row=63,#fine_col=63);
      Send(self,@NewHold,#what=Create(&FogCloud,#Duration=$),#new_row=12,
            #new_col=16,#fine_row=56,#fine_col=12);
      Send(self,@NewHold,#what=Create(&FogCloud,#Duration=$),#new_row=14,
            #new_col=19,#fine_row=44,#fine_col=36);
      Send(self,@NewHold,#what=Create(&FogCloud,#Duration=$),#new_row=14,
            #new_col=19,#fine_row=63,#fine_col=63);
      Send(self,@NewHold,#what=Create(&FogCloud,#Duration=$),#new_row=14,
            #new_col=19,#fine_row=0,#fine_col=0);
      Send(self,@NewHold,#what=Create(&FogCloud,#Duration=$),#new_row=14,
            #new_col=19,#fine_row=56,#fine_col=12);
      Send(self,@NewHold,#what=Create(&FogCloud,#Duration=$),#new_row=14,
            #new_col=17,#fine_row=43,#fine_col=18);

      % South waterfall
      Send(self,@NewHold,#what=Create(&FogCloud,#Duration=$),#new_row=46,
            #new_col=26,#fine_row=57,#fine_col=31);
      Send(self,@NewHold,#what=Create(&FogCloud,#Duration=$),#new_row=47,
            #new_col=27,#fine_row=62,#fine_col=21);
      Send(self,@NewHold,#what=Create(&FogCloud,#Duration=$),#new_row=46,
            #new_col=28,#fine_row=27,#fine_col=1);
      Send(self,@NewHold,#what=Create(&FogCloud,#Duration=$),#new_row=46,
            #new_col=28,#fine_row=49,#fine_col=62);

      return;
   }
   
   DeleteFogClouds()
   {
      local i;
      
      foreach i in plPassive
      {
         if IsClass(First(i),&FogCloud)
         {
            Send(First(i),@Delete);
         }
      }
      
      return;
   }

   DeleteLights()
   {
      local i;
      
      foreach i in plPassive
      {
         if IsClass(First(i),&DynamicLight)
         {
            Send(First(i),@Delete);
         }
      }

      return;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
