% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
DesertRiver1 is DesertRoom

constants:

   include blakston.khd

resources:

   include desertriver1.lkod

   room_desertriver1 = desertriver1.roo
   room_name_desertriver1 = "Cliffbound River"

classvars:

   vrName = room_name_desertriver1

   viTeleport_row = 5
   viTeleport_col = 7

properties:

   piBaseLight = LIGHT_DARK
   piOutside_factor = OUTDOORS_5 

   piDirectional_percent = DIRECTIONAL_PERCENT_OUTDOORS

   prRoom = room_desertriver1
   piRoom_num = RID_DESERTRIVER1

messages:

   Constructed()
   {
      % Natural state of Sector Group 31 is flowing and depth.
      % We hide this most of the time.
      % Group 33 is similar, but outside, so gets snow sometimes.
      Send(self,@SetSectorFlags,#sector=31,#depth=SF_DEPTH0,
            #scrollSpeed=SCROLL_NONE);
      Send(self,@SetSectorFlags,#sector=33,#depth=SF_DEPTH0,
            #scrollSpeed=SCROLL_NONE);
      % We also hide our waterfalls.
      Send(self,@AnimateWall,#wall=32,#animation=ANIMATE_NONE,
            #first_group=1,#second_group=1,#end_group=1);
   
      propagate;
   }

   CreateStandardExits()
   {
      plEdge_Exits = $;

      propagate;
   }
   
   GetPhaseThreats()
   {
      switch(Send(SYS,@GetDayPhase))
      {
         case DAY_PHASE_DAWN:
            return [&ShockStorm,&DesertRiver1Storm];
         case DAY_PHASE_DAY:
            if Send(Send(SYS,@FindRoomByNum,#num=RID_DESERTRIVER2),
                     @GetPrismOfFireDefeated)
            {
               return [&HeatStorm,&DesertRiver1Storm];
            }
            return [&HeatThreat,&DesertRiver1Storm];
         case DAY_PHASE_DUSK:
            if Send(Send(SYS,@FindRoomByNum,#num=RID_ACIDPATH),
                     @GetPrismOfAcidDefeated)
            {
               return [&AcidStorm,&DesertRiver1Storm];
            }
            return [&AcidThreat,&DesertRiver1Storm];
         case DAY_PHASE_NIGHT:
            if Send(Send(SYS,@FindRoomByNum,#num=RID_DESERTSANDBAR),@GetPrismOfIceDefeated)
            {
               return [&ColdStorm,&DesertRiver1Storm];
            }
            return [&ColdThreat,&DesertRiver1Storm];
      }
      return [&ShockStorm,&DesertRiver1Storm];
   }

   GetDangerPoints()
   {
      return [[37,18,42,12],
              [35,17,24,44],
              [33,17,48,23],
              [31,16,26,46],
              [28,16,31,20],
              [25,15,1,39],
              [21,14,47,56], %this one is the center?
              [19,14,55,29],
              [17,13,21,57],
              [14,13,32,17],
              [11,12,48,19],
              [10,11,51,18],
              [9,9,27,33]
             ];
   }

   SomethingMoved(what = $,new_row = $, new_col = $)
   {
      if new_row < 2 and (new_col < 15)
      {
         Send(SYS,@UtilGoNearSquare,#what=what,
              #where=Send(SYS,@FindRoomByNum,#num=RID_WAYLAYOASIS),
              #new_row=96,#new_col=4,
              #new_angle=ANGLE_NORTH);
         return;
      }

      if new_row < 2 and (new_col > 20)
      {
         Send(SYS,@UtilGoNearSquare,#what=what,
              #where=Send(SYS,@FindRoomByNum,#num=RID_WAYLAYOASIS),
              #new_row=96,#new_col=73,
              #new_angle=ANGLE_NORTH);
              
         return;
      }

      if new_row > Send(self,@GetRoomRows)-2 and (new_col < 10)
      {
         Send(SYS,@UtilGoNearSquare,#what=what,
              #where=Send(SYS,@FindRoomByNum,#num=RID_DESERTRIVER2),
              #new_row=2,#new_col=6,#fine_row=14,#fine_col=36,
              #new_angle=ANGLE_SOUTH);
              
         return;
      }

      if new_row > Send(self,@GetRoomRows)-2 and (new_col > 10)
      {
         Send(SYS,@UtilGoNearSquare,#what=what,
              #where=Send(SYS,@FindRoomByNum,#num=RID_DESERTRIVER2),
              #new_row=4,#new_col=17,#fine_row=11,#fine_col=23,
              #new_angle=ANGLE_SOUTH);
              
         return;
      }

      propagate;
   }

   StartSnow(bOnGround=TRUE)
   {
      if bOnGround
      {
         if pbSnowGroundTexture
         {
            % Add snow to floor regions that are also sometimes water.
            Send(self,@ChangeTexture,#id=33,#new_texture=61015,
                  #flags=CTF_FLOOR);
         }
      }

      propagate;
   }

   EndSnow(override=FALSE)
   {
      local i;

      if pbSnowGroundTexture
         OR override
      {
         % Remove snow from sand/rain floors.
         Send(self,@RemoveTextureChange,#id=33);
      }

      propagate;
   }

   StartRain()
   {
      % This area has special tunnels that overflow.
      % ID 31 covers a group of sectors that are naturally flowing
      % but most of the time we cover that up.
      
      % Reveal the sectors!
      Send(self,@RemoveSectorFlagChange,#id=31);
      Send(self,@RemoveSectorFlagChange,#id=33);

      % Make those sectors into gross water!
      Send(self,@ChangeTexture,#id=31,#new_texture=09363,
            #flags=CTF_FLOOR);
      Send(self,@ChangeTexture,#id=33,#new_texture=09363,
            #flags=CTF_FLOOR);

      % Gross acid rain pours into tunnels.
      % Again, natural state is animated, and we are revealing that
      % by removing the stoppage.
      Send(self,@ChangeTexture,#id=32,#new_texture=09363,
            #flags=CTF_BELOWWALL);
      Send(self,@RemoveAnimateWallChange,#wall=32);

      propagate;
   }
   
   EndRain()
   {
      % Stop water scroll effect and remove depth to hide flow behavior.
      Send(self,@SetSectorFlags,#sector=31,#depth=SF_DEPTH0,
            #scrollSpeed=SCROLL_NONE);
      % Stop water scroll effect and remove depth to hide flow behavior.
      Send(self,@SetSectorFlags,#sector=33,#depth=SF_DEPTH0,
            #scrollSpeed=SCROLL_NONE);

      % Go back to normal textures, groups 31 and 33.
      Send(self,@RemoveTextureChange,#id=31);
      Send(self,@RemoveTextureChange,#id=33);
      
      % No more waterfall animation.
      Send(self,@AnimateWall,#wall=32,#animation=ANIMATE_NONE,
            #first_group=1,#second_group=1,#end_group=1);
      % Remove sludge waterfalls.
      Send(self,@RemoveTextureChange,#id=32);

      propagate;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
