% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
DesertShore2 is DesertRoom

constants:

   include blakston.khd

resources:

   include desertshore2.lkod

   room_desertshore2 = desertshore2.roo
   room_name_desertshore2 = "Solitary Shoreline"

   no_travel_into_sea2 = \
      "If something interesting once existed out there, it's certainly "
      "been gone for a long time."

classvars:

   vrName = room_name_desertshore2

   viTeleport_row = 60
   viTeleport_col = 102

properties:

   piBaseLight = LIGHT_DARK
   piOutside_factor = OUTDOORS_5 

   piDirectional_percent = DIRECTIONAL_PERCENT_OUTDOORS

   prRoom = room_desertshore2
   piRoom_num = RID_DESERTSHORE2

messages:

   FirstUserEntered()
   {
      Post(self,@PopulateArea);

      propagate;
   }
   
   LastUserLeft()
   {
      Send(self,@DepopulateArea);
      propagate;
   }

   PopulateArea()
   {
      local i, iNumMonsters, oMonster, lMonsters, lClasses;

      switch(Send(SYS,@GetDayPhase))
      {
         case DAY_PHASE_DAWN:
            lClasses = [&XeoAir, &EvilEnt];
            break;
         case DAY_PHASE_DAY:
            lClasses = [&FireElemental,&XeoFire,&Ghost];
            break;
         case DAY_PHASE_DUSK:
            lClasses = [&EarthElemental,&XeoAcid,&DaemonSkeleton];
            break;
         case DAY_PHASE_NIGHT:
            lClasses = [&IceElemental,&XeoWater,&Iceperson];
            break;
      }

      iNumMonsters = Random(5,60);
      lMonsters = $;

      while iNumMonsters > 0
      {
         lMonsters = Cons(Nth(lClasses,Random(1,Length(lClasses))),lMonsters);
         --iNumMonsters;
      }

      foreach i in lMonsters
      {
         Send(self,@NewHold,#what=Create(i),
               #new_row=Random(1,Send(self,@GetRoomRows)-1),
               #new_col=Random(49,Send(self,@GetRoomCols)-1));
      }

      return;
   }
   
   DepopulateArea()
   {
      local i, each_obj;
      
      foreach i in Send(self,@GetHolderActive)
      {
         each_obj = Send(self,@HolderExtractObject,#data=i);
         if IsClass(each_obj,&Monster)
         {
            Send(each_obj,@Delete);
         }
      }
      
      return;
   }

   SomethingMoved(what = $,new_row = $, new_col = $)
   {
      if new_col > (Send(self,@GetRoomCols)-2)
      {
         Send(SYS,@UtilGoNearSquare,#what=what,
              #where=Send(SYS,@FindRoomByNum,#num=RID_DESERTDUNES),
              #new_row=Send(what,@GetRow),
              #new_col=3,
              #fine_row=Send(what,@GetFineRow),
              #fine_col=0,
              #new_angle=Send(what,@GetAngle));
         return;
      }

      if new_col < 2
      {
         if IsClass(what,&User)
         {
            Send(what,@MsgSendUser,#message_rsc=no_travel_into_sea2);
         }
         return;
      }

      if new_row < 2
      {
         Send(SYS,@UtilGoNearSquare,#what=what,
              #where=Send(SYS,@FindRoomByNum,#num=RID_DESERTSHORE3),
              #new_row=Send(self,@GetRoomRows)-3,
              #new_col=Send(what,@GetCol),
              #fine_row=0,
              #fine_col=Send(what,@GetFineCol),
              #new_angle=Send(what,@GetAngle));
         return;
      }

      if new_row > (Send(self,@GetRoomRows)-2)
      {
         Send(SYS,@UtilGoNearSquare,#what=what,
              #where=Send(SYS,@FindRoomByNum,#num=RID_DESERTSHORE1),
              #new_row=3,
              #new_col=Send(what,@GetCol),
              #fine_row=0,
              #fine_col=Send(what,@GetFineCol),
              #new_angle=Send(what,@GetAngle));
         return;
      }

      propagate;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
