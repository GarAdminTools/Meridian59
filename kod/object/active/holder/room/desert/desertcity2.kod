% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
DesertCity2 is DesertRoom

constants:

   include blakston.khd

resources:

   room_desertcity2 = desertcity2.roo
   room_name_desertcity2 = "Western Watergate"

   room_desertcity2_winds_air_elementals = \
      "The air elementals are carried away on the strong winds!"

classvars:

   vrName = room_name_desertcity2

   viTeleport_row = 74
   viTeleport_col = 3
   
   vbSpawnMonsters = TRUE

properties:

   piBaseLight = LIGHT_DARK
   piOutside_factor = OUTDOORS_5 

   piDirectional_percent = DIRECTIONAL_PERCENT_OUTDOORS

   prRoom = room_desertcity2
   piRoom_num = RID_DESERTCITY2

messages:
 
   CreateStandardExits()
   {
      plEdge_Exits = $;
      plEdge_Exits = Cons([ LEAVE_WEST, RID_DESERTRIVER3, 37, 17, ROTATE_NONE ],plEdge_Exits);
      plEdge_Exits = Cons([ LEAVE_EAST, RID_DESERTCANAL, 10, 5, ROTATE_NONE ],plEdge_Exits);

      propagate;
   }

   CreateStandardObjects()
   {
      propagate;
   }

   RecalcBackgroundSkyGraphic(iSkyBox=0)
   {
      prBackground = background_chaos_night;

      return;
   }

   PopulateArea()
   {
      local i, iNumMonsters, oMonster, lMonsters, lClasses, iMinRow, iMinCol, iMaxRow, iMaxCol, iChosenAngle;

      lClasses = [&AirElemental];

      iNumMonsters = Random(5,15);
      lMonsters = $;

      while iNumMonsters > 0
      {
         lMonsters = Cons(Nth(lClasses,Random(1,Length(lClasses))),lMonsters);
         --iNumMonsters;
      }

      if viMaxSpawnRow = 0
      {
         iMaxRow = Send(self,@GetRoomRows)-1;
      }
      else
      {
         iMaxRow = viMaxSpawnRow;
      }

      if viMaxSpawnCol = 0
      {
         iMaxCol = Send(self,@GetRoomCols)-1;
      }
      else
      {
         iMaxCol = viMaxSpawnCol;
      }

      iChosenAngle = ANGLE_EAST;
      switch(Random(1,4))
      {
         case 1:
            iChosenAngle = ANGLE_WEST;
            break;
         case 2:
            iChosenAngle = ANGLE_NORTH;
            break;
         case 3:
            iChosenAngle = ANGLE_SOUTH;
            break;
         case 4:
            iChosenAngle = ANGLE_EAST;
            break;
      }

      foreach i in lMonsters
      {
         Send(self,@NewHold,#what=Create(i,#piSurvivalLevel=Send(Send(SYS,@GetDesertRoomMaintenance),@GetBoostDesertLevel)),
               #new_row=Random(viMinSpawnRow,iMaxRow),
               #new_col=Random(viMinSpawnCol,iMaxCol),
               #new_angle=iChosenAngle);
      }

      return;
   }
   
   GetPhaseThreats()
   {
      switch(Send(SYS,@GetDayPhase))
      {
         case DAY_PHASE_DAWN:
            return [&ShockStorm, &ChaosThreat];
         case DAY_PHASE_DAY:
            if Send(Send(SYS,@FindRoomByNum,#num=RID_DESERTRIVER2),
                     @GetPrismOfFireDefeated)
            {
               return [&HeatStorm, &ChaosThreat];
            }
            return [&HeatThreat, &ChaosThreat];
         case DAY_PHASE_DUSK:
            if Send(Send(SYS,@FindRoomByNum,#num=RID_ACIDPATH),
                     @GetPrismOfAcidDefeated)
            {
               return [&AcidStorm, &RainThreat, &ChaosThreat];
            }
            return [&AcidThreat,&RainThreat, &ChaosThreat];
         case DAY_PHASE_NIGHT:
            if Send(Send(SYS,@FindRoomByNum,#num=RID_DESERTSANDBAR),@GetPrismOfIceDefeated)
            {
               return [&ColdStorm, &SnowThreat, &ChaosThreat];
            }
            return [&ColdThreat,&SnowThreat, &ChaosThreat];
      }
      return [&ShockStorm, &ChaosThreat];
   }

   SpellCast(who = $,oSpell = $,lItems = $,bItemCast = FALSE)
   {
      local i, each_obj;

      if oSpell <> $
         AND (IsClass(oSpell,&Winds)
            OR IsClass(oSpell,&Sandstorm))
      {
         foreach i in Send(self,@GetHolderActive)
         {
            each_obj = Send(self,@HolderExtractObject,#data=i);
            if IsClass(each_obj,&Player)
            {
               Send(each_obj,@MsgSendUser,#message_rsc=room_desertcity2_winds_air_elementals);
            }
         }
      }

      propagate;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
