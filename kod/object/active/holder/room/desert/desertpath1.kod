% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
DesertPath1 is DesertRoom

constants:

   include blakston.khd

resources:

   include desertpath1.lkod

   room_desertpath1 = desertpath1.roo
   room_name_desertpath1 = "A harrowing cleft"

classvars:

   vrName = room_name_desertpath1

   viTeleport_row = 15
   viTeleport_col = 35

properties:

   piBaseLight = LIGHT_DARK
   piOutside_factor = OUTDOORS_5 

   piDirectional_percent = DIRECTIONAL_PERCENT_OUTDOORS

   prRoom = room_desertpath1
   piRoom_num = RID_DESERTPATH1

messages:
   
   GetPhaseThreats()
   {
      switch(Send(SYS,@GetDayPhase))
      {
         case DAY_PHASE_DAWN:
            return [&ShockStorm,&DesertPath1Storm];
         case DAY_PHASE_DAY:
            if Send(Send(SYS,@FindRoomByNum,#num=RID_DESERTRIVER2),
                     @GetPrismOfFireDefeated)
            {
               return [&HeatStorm,&DesertPath1Storm];
            }
            return [&HeatThreat,&DesertPath1Storm];
         case DAY_PHASE_DUSK:
            if Send(Send(SYS,@FindRoomByNum,#num=RID_WAYLAYOASIS),
                     @GetPrismOfAcidDefeated)
            {
               return [&AcidStorm,&DesertPath1Storm];
            }
            return [&AcidThreat,&DesertPath1Storm];
         case DAY_PHASE_NIGHT:
            if Send(Send(SYS,@FindRoomByNum,#num=RID_DESERTSANDBAR),@GetPrismOfIceDefeated)
            {
               return [&ColdStorm,&DesertPath1Storm];
            }
            return [&ColdThreat,&DesertPath1Storm];
      }
      return [&ShockStorm,&DesertPath1Storm];
   }

   GetDangerPoints()
   {
      return [[11,66,40,59],
              [11,65,54,24],
              [11,64,56,32],
              [11,63,39,33],
              [11,62,44,13],
              [12,59,18,20],
              [12,58,24,49],
              [11,58,27,46],
              [10,57,40,34],
              [12,56,25,46],
              [12,55,10,15],
              [10,54,45,45],
              [9,53,48,34],
              [8,52,60,11],
              [9,50,23,8],
              [8,48,43,3],
              [9,46,33,8],
              [8,43,23,56],
              [9,41,61,9],
              [11,39,28,10],
              [14,36,10,59],
              [17,33,1,40],
              [19,30,4,63],   % outside small cleft
              [20,27,18,54],
              [20,23,20,62],
              [19,20,4,6],
              [16,17,43,28],
              [14,15,34,6],
              [11,15,39,11],
              [9,12,33,62],
              [9,10,57,44],
              [12,7,2,15],
              [12,3,27,60]              
             ];
   }
   
   CreateStandardExits()
   {
      plEdge_Exits = $;
      plEdge_Exits = Cons([ LEAVE_EAST, RID_WAYLAYOASIS, 8, 2, ROTATE_NONE ],plEdge_Exits);
      plEdge_Exits = Cons([ LEAVE_WEST, RID_DESERTCLIFFACCESS, 58, 68, ROTATE_NONE ],plEdge_Exits);

      propagate;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

