% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
TrappedLootBox is LootBox

%
% ID trap spell
% minor magical unlock
% major magical unlock
%
%
%
% Trap types:
%  * Explosion - aoe fire damage + brief firewalls
%  * Discharge - high shock damage to one
%  * Blast of Frost - apply large amounts of chilled
%  * Fright - aoe weaken minion loyalty
%  * Teleporter - Send player to a random room in the same region
%  * Poison Gas - poison gas
%  * Enfeeble - enfeeble
%  * Disease - dement
%  * Purge - remove buffs of thief
%  * Fate - randomize hp / mana
%  * Guardian - summon a stronger monster
%  * Life Drain - lose a max HP
%  * Petrifying - turn to stone
%  * Shattering Blast - destroy a random item on thief
%  * Siren - all monsters in room aggro on thief
%  * Curse - random Raumlar hex

constants:

   LOOT_BOX_ITEMS_MAX = 150

   include blakston.khd

resources:

   loot_box_name_rsc = "treasure box"
   loot_box_icon_small_rsc = lootbox3.bgf
   loot_box_icon_medium_rsc = lootbox2.bgf
   loot_box_icon_large_rsc = lootbox1.bgf
   loot_box_icon_chest_small = lootbox6.bgf
   loot_box_icon_chest_medium = lootbox5.bgf
   loot_box_icon_chest_large = lootbox4.bgf

   loot_box_desc_rsc = \
      "This treasure box was used to store the valuables of a fallen monster."

classvars:

   vrName = loot_box_name_rsc
   vrDesc = loot_box_desc_rsc

   viBulk_hold_max = $
   viWeight_hold_max = $

properties:

   vrIcon = loot_box_icon_small_rsc

messages:

   Constructor(iLootSize=0)
   {
      if iLootSize = 0
      {
         iLootSize = Random(1,6);
      }
      switch(iLootSize)
      {
         case 1:
            vrIcon = loot_box_icon_small_rsc;
            break;
         case 2:
            vrIcon = loot_box_icon_medium_rsc;
            break;
         case 3:
            vrIcon = loot_box_icon_large_rsc;
            break;
         case 4:
            vrIcon = loot_box_icon_chest_small;
            break;
         case 5:
            vrIcon = loot_box_icon_chest_medium;
            break;
         case 6:
            vrIcon = loot_box_icon_chest_large;
            break;
      }
      propagate;
   }

   ReqNewHold(what = $, who = $)
   {
      if NOT Send(self,@CanDepositItems,#lItems=[what])
      {
         return FALSE;
      }

      propagate;
   }

   CanDepositItems(lItems = $)
   {
      local plItemsStored;

      if lItems = $
      {
         return FALSE;
      }

      plItemsStored = Send(self,@GetHolderPassive);
      if plItemsStored <> $
         AND (Length(plItemsStored) + Length(lItems)) > LOOT_BOX_ITEMS_MAX
         AND NOT (Length(lItems) = 1
            AND IsClass(First(lItems),&NumberItem))
      {
         return FALSE;
      }

      return TRUE;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
