% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
XeoBossWater is Xeochicatl

constants:

   include blakston.khd

   ANIM_CAST = 2     %% Cast spell animation.

resources:

   XeoBossWater_name_rsc = "vix'ma'xeochicatl"
   XeoBossWater_koc_name_rsc = "vix'ma'xeo'chicatl"
   XeoBossWater_icon_rsc = Xeo.bgf
   XeoBossWater_desc_rsc = \
      "Before you is a vix'ma'xeochicatl, a being from near the heart of the "
      "elemental plane of ice. This is no minor xeochicatl; the vix are "
      "far too strong to grace the mortal plane without visiting tremendous "
      "destruction. This beast is an elemental incarnation of ice itself."

   XeoBossWater_sound_aware = xeo1awr.wav

   enter_phase_two_msg = \
      "~BEnraged by your assault, the vix'ma'xeochicatl phases further into "
      "your mortal plane, bringing greater forces to bear!"

   enter_phase_three_msg = \
      "~BThe vix'ma'xeochicatl roars with the fury of a thousand blizzards!"

classvars:

   vrName = XeoBossWater_name_rsc
   vrDesc = XeoBossWater_desc_rsc
   vrKocName = XeoBossWater_koc_name_rsc

   viAttack_type = ATCK_WEAP_MAGIC
   vrSound_aware = XeoBossWater_sound_aware

   viTreasure_type = TID_XEO_BOSS_WATER

properties:

   piAnimation = ANIM_NONE

   % percent of victim's max mana it will try to drain, double normal rate.
   piDrainAmount = 10

   piDrawfx = DRAWFX_TRANSLUCENT_25
   piMinDamage = 10
   piMaxDamage = 30

   piMax_Mana = 300

   viLevel = 180
   viDifficulty = 8
   viSpeed = SPEED_FASTER

   vrIcon = Xeochicatl_icon_rsc
   vrDead_icon = Xeochicatl_dead_icon_rsc
   
   piPhase = 1

   % 5 minute hurt me recently for reward purposes
   piHurtMeTime = 300000

messages:

   Constructed()
   {
      plResistances = [ [-ATCK_SPELL_COLD, 70 ],
                        [-ATCK_SPELL_FIRE, -20 ],
                        [ATCK_WEAP_MAGIC, -10 ],
                        [-ATCK_SPELL_QUAKE, 100 ]
                      ];

      piColor_Translation = Send(SYS,@EncodeTwoColorXLAT,#color1=XLAT_TO_BLUE);

      plSpellBook = [ [SID_ICE_NOVA,5,30], [SID_HOLD,5,60],
                      [SID_EXPLOSIVE_FROST,10,100] ];

      Post(self,@AddChampionAbility,#ability=3,#value=90);

      propagate;
   }

   GetBaseEmpowerments()
   {
      return [[-ATCK_SPELL_COLD,100]];
   }

   GoPhaseTwo()
   {
      local i;

      piMinDamage = 20;
      piMaxDamage = 40;
      piDrawfx = DRAWFX_TRANSLUCENT_50;
      piLevel = 190;
      viDifficulty = 9;
      Post(self,@AddChampionAbility,#ability=4,#value=90);

      plResistances = [ [-ATCK_SPELL_COLD, 110 ],
                        [-ATCK_SPELL_FIRE, 20 ],
                        [-ATCK_SPELL_HOLY, 30 ],
                        [-ATCK_SPELL_UNHOLY, 30 ],
                        [ATCK_WEAP_MAGIC, 30 ],
                        [-ATCK_SPELL_QUAKE, 100 ]
                      ];

      vrIcon = bigger_Xeochicatl_icon_rsc;
      vrDead_icon = bigger_Xeochicatl_dead_icon_rsc;
      piPhase = 2;
      Post(poOwner,@SomethingChanged,#what=self);

      foreach i in Send(poOwner,@GetHolderActive)
      {
         if IsClass(First(i),&Player)
         {
            Send(First(i),@MsgSendUser,#message_rsc=enter_phase_two_msg);
         }
      }
      Send(poOwner,@Rumble,#duration=4000);

      return;
   }

   GoPhaseThree()
   {
      local i;

      piMinDamage = 30;
      piMaxDamage = 50;
      piDrawfx = DRAWFX_TRANSLUCENT_75;
      piLevel = 200;
      viDifficulty = 10;
      viSpeed = SPEED_VERY_FAST;
      Post(self,@AddChampionAbility,#ability=6,#value=30);

      plResistances = [ [-ATCK_SPELL_COLD, 150 ],
                        [-ATCK_SPELL_FIRE, 60 ],
                        [ATCK_WEAP_MAGIC, 70 ],
                        [-ATCK_SPELL_HOLY, 70 ],
                        [-ATCK_SPELL_UNHOLY, 70 ],
                        [-ATCK_SPELL_QUAKE, 100 ]
                      ];

      vrIcon = biggest_Xeochicatl_icon_rsc;
      vrDead_icon = biggest_Xeochicatl_dead_icon_rsc;
      piPhase = 3;
      Post(poOwner,@SomethingChanged,#what=self);

      foreach i in Send(poOwner,@GetHolderActive)
      {
         if IsClass(First(i),&Player)
         {
            Send(First(i),@MsgSendUser,#message_rsc=enter_phase_three_msg);
         }
      }
      Send(poOwner,@Rumble,#duration=4000);

      return;
   }

   GetMaxHitPoints()
   {
      return 20000;
   }

   GetBossStatus()
   {
      return TRUE;
   }

   HitPointThresholdDamage()
   {
      local iThreshold;

      iThreshold = piHit_points / (piMax_hit_points * 20);

      if iThreshold >= 4
      {
         propagate;
      }
      else if iThreshold = 3
      {
         propagate;
      }
      else if iThreshold = 2
      {
         Send(self,@GoPhaseTwo);
         propagate;
      }
      else if iThreshold = 1
      {
         propagate;
      }
      else
      {
         Send(self,@GoPhaseThree);
         propagate;
      }

      propagate;
   }

   IsAlly(target = $, regroup = FALSE)
   {
      if IsClass(target,&XeoBossWater)
         OR IsClass(target,&XeoWater)
         OR IsClass(target,&IceElemental)
         OR IsClass(target,&IceElementalChampion)
      {
         return TRUE;
      }

      propagate;
   }

   SendLightingInformation()
   {
      if piPhase = 1
      {
         AddPacket(2,(LIGHT_FLAG_ON | LIGHT_FLAG_DYNAMIC));
         % 255 out of 255 intensity of light
         AddPacket(1,60);
         AddPacket(2,LIGHT_BBLUE);
      }
      if piPhase = 2
      {
         AddPacket(2,(LIGHT_FLAG_ON | LIGHT_FLAG_DYNAMIC));
         % 255 out of 255 intensity of light
         AddPacket(1,145);
         AddPacket(2,LIGHT_BBLUE);
      }
      if piPhase = 3
      {
         AddPacket(2,(LIGHT_FLAG_ON | LIGHT_FLAG_DYNAMIC));
         % 255 out of 255 intensity of light
         AddPacket(1,255);
         AddPacket(2,LIGHT_BBLUE);
      }

      return;
   }

   Killed()
   {
      local i;
      
      foreach i in plHurtMeRecently
      {
         if IsClass(First(i),&Player)
         {
            Send(First(i),@SetPrismDefeated,#num=NTH_ICE_PRISM,#value=1);
         }
      }
      propagate;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
