% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
FarenPriestess is Temples

constants:

   include blakston.khd

resources:

   include farnprst.lkod

   farenpriestess_name_rsc = "Priestess Tenuv'vyal"
   farenpriestess_icon_rsc = farnprst.bgf
   farenpriestess_desc_rsc = \
      "Hair unkempt and anger barely checked.  Some say she is on the brink "
      "of madness, others say she is a terrible menace waiting to be released "
      "like a raging storm.  She despises civilization and feels humans must "
      "return to the ways of the wilds."

   Faren_forget_potion_sale = \
      "~B~gYou chose to abandon Lord Faren? So be it, %s%s is yours if you "
      "wish to buy one.  Beware though, the powers of the amnesiac are "
      "permanent.~n~k"
   faren_teach = \
      "From Faren's fire, you can learn %s%s%s%s%s%s%s%s%s%s%s%s "
      "at that level."
   FarenPriestess_wc_needed = \
      "~B~gYou are not in tune with your own strength. How can you hope to master "
      "the power of nature? Return when you have learned the skills of a "
      "warrior."
   FarenPriestess_already_have_spell = \
      "~B~gYou already know %s. Begone, fool!"

classvars:

   vrTeach_message = faren_teach
   vrName = farenpriestess_name_rsc
   vrIcon = farenpriestess_icon_rsc
   vrDesc = farenpriestess_desc_rsc

   viQuestID = QST_ID_FAREN_DISCIPLE
   viAttributes = \
      MOB_NOFIGHT | MOB_LISTEN | MOB_RANDOM | MOB_RECEIVE \
      | MOB_TEACHER | MOB_COND_SELLER | MOB_NOMOVE | MOB_PERM_QUESTER
   viOccupation = MOB_ROLE_PRIESTESS

messages:

   HasDoneLearnQuest(who=$)
   {
      return TRUE;
   }

   InitCondSale()
   {
      local oObj;

      oObj=Create(&ForgetPotionFaren);
      Send(Send(SYS,@GetLibrary),@AddToMobLib,#mob=self,
            #triggers=[Send(oObj,@GetName)],
            #action=[LIBACT_CONDITIONAL,oObj,2500,Faren_forget_potion_sale]);

      return;
   }

   SetForSale()
   {
      plFor_Sale = [
         $,$,
         [
            SID_LIGHT,
            SID_ZAP,
            SID_WINDS,
            SID_RESIST_FIRE,
            SID_RESIST_COLD,
            SID_RESIST_SHOCK,
            SID_TOUCH_OF_FLAME,
            SID_ICY_FINGERS,
            SID_MANA_FOCUS,
            SID_BRITTLE,
            SID_FIREBALL,
            SID_EARTHQUAKE,
            SID_SHATTER,
            SID_SAND_STORM,
            SID_SUMMON_FOG,
            SID_MYSTIC_TOUCH,
            SID_FLAME_DASH,
            SID_LIGHTNING_STRIKE
         ],
      $];

      return;
   }

   CanDoTeach(who=$,sid=0)
   {
      if sid = SID_FLAME_DASH
         OR sid = SID_LIGHTNING_STRIKE
      {
         if NOT Send(self,@SpecialTeachChecks,#report=TRUE,#who=who,#num=sid)
         {
            return FALSE;
         }
      }

      propagate;
   }

   SpecialTeachChecks(who=$,num=0,report=FALSE)
   {
      local i, oSpell, oSkill, iLevelRequired, bFound;

      if who = $ OR num = 0
      {
         Debug("Called SpecialTeachChecks with bad parameters!");

         return FALSE;
      }

      oSpell = Send(SYS,@FindSpellByNum,#num=num);

      if NOT Send(oSpell,@IsAccessible)
      {
         return FALSE;
      }

      if Send(who,@HasSpell,#num=num)
      {
         if report
         {
            Post(self,@SayToOne,#target=who,
                  #message_rsc=FarenPriestess_already_have_spell,
                  #parm1=Send(oSpell,@GetName));
         }

         return FALSE;
      }

      bFound = FALSE;
      iLevelRequired=0;
      
      if num = SID_FLAME_DASH
      {
         iLevelRequired = 4;
      }

      if num = SID_LIGHTNING_STRIKE
      {
         iLevelRequired = 6;
      }

      if iLevelRequired = 0
      {
         return TRUE;
      }

      % Special checks for high level skills: need a high level skill in 
      % a particular school.
      foreach i in Send(who,@GetSkillList)
      {
         oSkill = Send(SYS,@FindSkillByNum,
                        #num=Send(who,@DecodeSpellNum,#compound=i));
         if Send(oSkill,@GetLevel) >= iLevelRequired
         {
            bFound = TRUE;

            break;
         }
      }

      if bFound = FALSE
      {
         % Player doesn't have a high enough skill. Denied.
         if report
         {
            Post(self,@SayToOne,#target=who,#message_rsc=FarenPriestess_wc_needed);
         }

         return FALSE;
      }

      return TRUE;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
