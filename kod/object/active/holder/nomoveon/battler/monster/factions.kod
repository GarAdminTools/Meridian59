% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Factions is Monster

constants:

   include blakston.khd

resources:

   resign_command = \
      "resign"
   
   resign_response = \
      "You have resigned from your faction."

classvars:
   
   viDefinite = ARTICLE_NONE
   viIndefinite = ARTICLE_NONE

   % Mob doesn't move and cannot be attacked.
   viDefault_behavior = AI_NPC | AI_NOMOVE

   viSpeed = SPEED_SLOW
   viQuestID = 0
   viFaction = FACTION_NEUTRAL
   viHomeroom = RID_FOREST1
   viMyRow = 15
   viMyCol = 15
   viMyAngle = ANGLE_NORTH
   viMyFR = 32
   viMyFC = 32
   
   viCanSpawnAsChampion = FALSE

messages:

   InitPermQuest()
   {
      if viQuestID<> 0
      {
         Post(Send(SYS,@GetLibrary),@CreateQuest,#type=QST_PERM,#quester=self,
               #reward= [QST_REWARD_SERVICE,viQuestID]);
      }

      return;
   }

   Constructor()
   {
      Send(self,@InitPermQuest);
      
      propagate;
   }

   Delete()
   {
      Send(Send(SYS,@GetParliament),@LiegeDeleted,#what=self);

      propagate;
   }

   GetFaction()
   {
      return viFaction;
   }

   GotoHomeroom()
   {
      local room;
      
      room = Send(SYS,@FindRoomByNum,#num=viHomeroom);
      Send(room,@teleport,#what=self);
      Send(room,@SomethingMoved,#what=self,#new_row=viMyRow,
            #new_col=viMyCol,#fine_row=viMyFR,#fine_col=viMyFC);
      Send(room,@SomethingTurned,#what=self,#new_angle=viMyAngle);

      return;
   }

   NewHoldObject(what = $)
   {
      % Don't want them holding anything, so just delete it.
      Send(what,@Delete);

      return;
   }

   CanMorphTo()
   {
      return FALSE;
   }

   EnterStateWait()
   {
      % They shouldn't have acquired a target, but to be sure...
      if poTarget <> $
         AND Send(poTarget,@GetOwner) = poOwner
         AND IsClass(poTarget,&user)
      {
         Send(poTarget,@SubtractFromMonsterChasers,
               #level=Send(self,@GetLevel));
      }

      poTarget = $;
      piHatred = 0;

      % Leave them in the waiting state.
      Send(self,@SetState,#bit=STATE_WAIT);
      Send(self,@ClearBehavior);

      % We no longer set a move timer for NPCs.

      return;
   }

   SomeoneSaid(what=$,type=$,string=$)
   {
      if type = SAY_YELL OR NOT IsClass(what,&User)
      {
          propagate;
      }

      if StringContain(string,resign_command)
         AND what <> $
         AND IsClass(what,&User)
         AND Send(what,@GetFaction) <> FACTION_NEUTRAL
      {
         Send(what,@ResignFaction);
         Send(what,@MsgSendUser,#message_rsc=resign_response);
      }

      propagate;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
