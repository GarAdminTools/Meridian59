% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NeruElemental is Elemental

constants:

   include blakston.khd

resources:

   include neeleme.lkod
   
   neruelemental_name_rsc = "nerudite golem"
   neruelemental_icon_rsc = neeleme.bgf
   neruelemental_desc_rsc = \
      "The imposing stature of this beast speaks of raw power and strength.  "
      "Its body gleams with a green, metallic sheen.  A sound like drawn steel"
      " accompanies its every movement."
      
   neruelemental_koc_name_rsc = "atzmochner"

   neruelemental_dead_icon_rsc = neelemeX.bgf
   neruelemental_dead_name_rsc = "dead nerudite golem"

classvars:

   vrKocName = neruelemental_koc_name_rsc
   vrName = neruelemental_name_rsc
   vrIcon = neruelemental_icon_rsc
   vrDesc = neruelemental_desc_rsc
   vrDead_icon = neruelemental_dead_icon_rsc
   vrDead_name = neruelemental_dead_name_rsc

   viTreasure_type = TID_NERU_ELE

   viAttack_type = ATCK_WEAP_NERUDITE
   
properties:

   piAnimation = ANIM_NONE

   piMax_mana = 50
   piMeleeSpellChance = 0

messages:

   Constructed()
   {
      local iNum;
      plMeleeSpellBook = [ [SID_MANA_BOMB,5,100, Random(60,99)] ];
      
      iNum = Random(1,4);
      
      Switch(iNum)
      {
         case 1:
            plAllySpellBook = [[SID_RESIST_COLD,50,100, 99]];
            break;
         case 2:
            plAllySpellBook = [[SID_RESIST_ACID,50,100, 99]];
            break;
         case 3:
            plAllySpellBook = [[SID_RESIST_SHOCK,50,100, 99]];
            break;
         case 4:
            plAllySpellBook = [[SID_RESIST_FIRE,50,100, 99]];
            break;
      }

      if plResistances = $
      {
         plResistances = [ [-ATCK_SPELL_QUAKE, -70 ],
                           [-ATCK_SPELL_ALL, 50 ],
                           [ATCK_WEAP_PIERCE, -5],
                           [ATCK_WEAP_ALL, -5 ] ];
      }

      propagate;
   }

   WeightPrefixes()
   {
      return $;
   }
   
   WeightSuffixes()
   {
      return [[&FireResistanceMod,200],
              [&ColdResistanceMod,200],
              [&AcidResistanceMod,200],
              [&ShockResistanceMod,200]
             ];
   }

   EmpowerAffixes()
   {
      return [[&FireResistanceMod,3],
              [&ColdResistanceMod,3],
              [&AcidResistanceMod,3],
              [&ShockResistanceMod,3]
             ];
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
