% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NomadChest is StorageBox

constants:

   NOMADCHEST_ITEMS_MAX = 150

   include blakston.khd

resources:

   nomadchest_name_rsc = "ornate chest"
   nomadchest_icon_rsc = box2.bgf

   nomadchest_desc_rsc = \
      "A tribe of nomads has obviously taken great care of this generational "
      "heirloom. It may hold ancient treasures."

classvars:
   vrName = nomadchest_name_rsc
   vrIcon = nomadchest_icon_rsc
   vrDesc = nomadchest_desc_rsc

   viBulk_hold_max = $
   viWeight_hold_max = $

properties:

messages:

   ReqNewHold(what = $, who = $)
   {
      if NOT Send(self,@CanDepositItems,#lItems=[what])
      {
         return FALSE;
      }

      propagate;
   }

   CanDepositItems(lItems = $)
   {
      local plItemsStored;

      if lItems = $
      {
         return FALSE;
      }

      plItemsStored = Send(self,@GetHolderPassive);
      if plItemsStored <> $
         AND (Length(plItemsStored) + Length(lItems)) > NOMADCHEST_ITEMS_MAX
         AND NOT (Length(lItems) = 1
            AND IsClass(First(lItems),&NumberItem))
      {
         return FALSE;
      }

      return TRUE;
   }

   LockChest(bLocked=$,ladderID=0)
   {
      local i, each_obj;

      pbLocked = bLocked;

      if pbLocked
      {
         viObject_Flags = viObject_Flags & ~OF_CONTAINER;
      }

      if NOT pbLocked
      {
         viObject_Flags = viObject_Flags | OF_CONTAINER;
         
         foreach i in Send(self,@GetHolderActive)
         {
            each_obj = Send(self,@HolderExtractObject,#data=i);
            if IsClass(each_obj,&Item)
            {
               Send(each_obj,@SetLadderID,#value=ladderID);
            }
         }
         foreach i in Send(self,@GetHolderPassive)
         {
            each_obj = Send(self,@HolderExtractObject,#data=i);
            if IsClass(each_obj,&Item)
            {
               Send(each_obj,@SetLadderID,#value=ladderID);
            }
         }
      }
      
      Send(poOwner,@SomethingChanged,#what=self);

      return;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
