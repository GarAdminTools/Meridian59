% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
DefModSpellProc is DefModObjectAttribute 

constants:

   include blakston.khd

   SELF_CAST_TYPE = 1
   ATTACKER_CAST_TYPE = 2
   NO_TARGET_CAST_TYPE = 3
   
   MAZE_WEAPON_SPELL_PROC_PROFILE = 10

resources:

   include defmodspellproc.lkod

   defmod_proc = \
      "The %s worn by %s gives off a magical flare, casting %s on %s!"
   defmod_proc_you = "Your %s gives off a magical flare, casting %s on you!"
   defmod_proc_them = "Your %s gives off a magical flare, casting %s on %s!"
   defmod_proc_nobody = "Your %s gives off a magical flare, casting %s!"
   defmod_proc_no_target = \
      "The %s worn by %s gives off a magical flare, casting %s!"
   defspellproc_attribute_desc = \
      "\n\nWhen defending against a strike, the runes engraved on this %s "
      "will cast %s %s with %i spellpower %i%% of the time."
   def_attribute_self_rsc = "on you"
   def_attribute_target_rsc = "on the enemy"

classvars:

properties:

   piSpellNum = $
   piType = SELF_CAST_TYPE
   piSpellPower = 70
   piProcChance = 15

messages:

   Constructor(host_object=$,set_spell=$,set_type=1,set_spellpower=1,set_proc_chance=0,use_profile=MAZE_WEAPON_SPELL_PROC_PROFILE)
   {
      local iRandomRoll, lProfile, i;

      if set_spell <> $
      {
         piSpellNum = set_spell;
         piType = set_type;
         piSpellPower = set_spellpower;
         piProcChance = set_proc_chance;
         propagate;
      }

      if host_object = $
      {
         propagate;
      }

      % Profile of format [[chance roll >=, chance roll <=, SID, type, min power roll, max power roll, min proc chance roll, max proc chance roll], CLASS ...]
      lProfile = $;
      Switch(use_profile)
      {
         case MAZE_WEAPON_SPELL_PROC_PROFILE:
            lProfile = [[0,   25,  SID_MAGIC_SHIELD,        Random(1,2), 1, 99, 10, 20, &Shield],
                        [26,  50,  SID_DEFLECT,             Random(1,2), 1, 99, 5,  15, &Shield],
                        [51,  75,  SID_BLINK,                         3, 1, 99, 1,   5, &Shield],
                        [76, 100,  SID_CURE_POISON,                   1, 1, 99, 5,  15, &Shield],
                        
                        [0,   50,  SID_HASTE,               Random(1,2), 1, 99, 1,   3, &Pants],
                        [51,  99,  SID_REMOVE_CURSE,                  1, 1, 99, 1,   3, &Pants],
                        [100,100,  SID_SPIRITUAL_HAMMER,              1, 1, 99, 1,   1, &Pants],
                        
                        [0,   50,  SID_NIGHT_VISION,        Random(1,2), 1, 99, 1,   3, &Helmet],
                        [51,  75,  SID_EAGLE_EYES,          Random(1,2), 1, 99, 1,   3, &Helmet],
                        [76,  99,  SID_DETECT_INVISIBLE,    Random(1,2), 1, 99, 1,   3, &Helmet],
                        [100,100,  SID_DISPEL_ILLUSION,               3, 1, 99, 1,   3, &Helmet],
                        
                        [0,   45,  SID_SHADOW_FORM,         Random(1,2), 1, 99, 1,  10, &Armor],
                        [46,  55,  SID_RESIST_ACID,         Random(1,2), 1, 99, 1,  10, &Armor],
                        [56,  65,  SID_RESIST_COLD,         Random(1,2), 1, 99, 1,  10, &Armor],
                        [66,  75,  SID_RESIST_FIRE,         Random(1,2), 1, 99, 1,  10, &Armor],
                        [76,  85,  SID_RESIST_SHOCK,        Random(1,2), 1, 99, 1,  10, &Armor],
                        [86,  95,  SID_FREE_ACTION,         Random(1,2), 1, 99, 1,  15, &Armor],
                        [95, 100,  SID_ARMOR_OF_GORT,       Random(1,2), 1, 99, 1,   5, &Armor],
                        
                        [0,   33,  SID_SUPER_STRENGTH,      Random(1,2), 1, 99, 1,   6, &Shirt],
                        [34,  66,  SID_BLESS,               Random(1,2), 1, 99, 1,   6, &Shirt],
                        [67, 100,  SID_RESIST_POISON,                 1, 1, 99, 1,  10, &Shirt]
                        ];
                        
            break;
      }
      
      if lProfile = $
      {
         Post(self,@Delete);
         propagate;
      }
      
      iRandomRoll = Random(1,100);
      
      foreach i in lProfile
      {
         if host_object <> $
            AND IsClass(host_object,Nth(i,9))
         {
            if iRandomRoll >= Nth(i,1)
               AND iRandomRoll <= Nth(i,2)
            {
               piSpellNum = Nth(i,3);
               piType = Nth(i,4);
               piSpellPower = Random(Nth(i,5),Nth(i,6));
               piProcChance = Random(Nth(i,7),Nth(i,8));
               propagate;
            }
         }
      }

      propagate;
   }

   GetSpell()
   {
      return Send(SYS,@FindSpellByNum,#num=piSpellNum);
   }

   GetType()
   {
      return piType;
   }

   GetSpellpower()
   {
      return piSpellPower;
   }

   GetProcChance()
   {
      return piProcChance;
   }

   ModifyDefenseDamage(who = $,what = $,damage = $,atype = 0,aspell = 0)
   {
      local i, each_obj, oRoom, oSpell;

      if who = $
      {
         return damage;
      }

      oRoom = Send(who,@GetOwner);

      if piSpellNum <> $
         AND Random(1,100) <= piProcChance
      {
         oSpell = Send(SYS,@FindSpellByNum,#num=piSpellNum);
         if oSpell = $
         {
            return damage;
         }

         if piType = SELF_CAST_TYPE
            AND NOT Send(who,@IsEnchanted,#what=oSpell)
         {
            foreach i in Send(oRoom,@GetHolderActive)
            {
               each_obj = Send(oRoom,@HolderExtractObject,#data=i);
               if IsClass(each_obj,&Player)
                  AND each_obj <> who
               {
                  Post(each_obj,@MsgSendUser,#message_rsc=defmod_proc,
                        #parm1=Send(Send(self,@GetHostObject),@GetName),
                        #parm2=Send(who,@GetName),#parm3=Send(oSpell,@GetName),
                        #parm4=Send(who,@GetHimHer));
               }
               if IsClass(each_obj,&Player)
                  AND each_obj = who
               {
                  Post(each_obj,@MsgSendUser,#message_rsc=defmod_proc_you,
                        #parm1=Send(Send(self,@GetHostObject),@GetName),
                        #parm2=Send(oSpell,@GetName));
               }
            }
            Post(oSpell,@CastSpell,#who=who,#ltargets=[who],
                  #iSpellPower=piSpellPower,#bItemCast=TRUE);
         }

         % IsEnchanted check skipped so that the proc can replace enemy
         % buffs with weaker versions. For example, a Qor player may wish
         % to proc a weaker Eagle Eyes on an enemy that is hitting them.
         if piType = ATTACKER_CAST_TYPE
            AND what <> $
            AND IsClass(what,&Player)
         {
            foreach i in Send(oRoom,@GetHolderActive)
            {
               each_obj = Send(oRoom,@HolderExtractObject,#data=i);
               if IsClass(each_obj,&Player)
                  AND each_obj <> who
               {
                  Post(each_obj,@MsgSendUser,#message_rsc=defmod_proc,
                        #parm1=Send(Send(self,@GetHostObject),@GetName),
                        #parm2=Send(who,@GetName),#parm3=Send(oSpell,@GetName),
                        #parm4=Send(what,@GetName));
               }
               if IsClass(each_obj,&Player)
                  AND each_obj = who
               {
                  Post(each_obj,@MsgSendUser,#message_rsc=defmod_proc_them,
                        #parm1=Send(Send(self,@GetHostObject),@GetName),
                        #parm2=Send(oSpell,@GetName),
                        #parm3=Send(what,@GetName));
               }
            }
            Post(oSpell,@CastSpell,#who=who,#ltargets=[what],
                  #iSpellPower=piSpellPower,#bItemCast=TRUE);
         }

         if piType = NO_TARGET_CAST_TYPE
            AND NOT (aspell & ATCK_SPELL_QUAKE)
         {
            foreach i in Send(oRoom,@GetHolderActive)
            {
               each_obj = Send(oRoom,@HolderExtractObject,#data=i);
               If IsClass(each_obj,&Player)
                  AND each_obj <> who
               {
                  Post(each_obj,@MsgSendUser,#message_rsc=defmod_proc,
                        #parm1=Send(Send(self,@GetHostObject),@GetName),
                        #parm2=Send(who,@GetName),#parm3=Send(oSpell,@GetName));
               }
               if IsClass(each_obj,&Player)
                  AND each_obj = who
               {
                  Post(each_obj,@MsgSendUser,#message_rsc=defmod_proc_nobody,
                        #parm1=Send(Send(self,@GetHostObject),@GetName),
                        #parm2=Send(oSpell,@GetName));
               }
            }
            Post(oSpell,@CastSpell,#who=who,
                  #ltargets=Send(oSpell,@GetTargets,#who=who),
                  #iSpellPower=piSpellPower,#bItemCast=TRUE);
         }
      }

      return damage;
   }

   AttributeDesc()
   {
      local target_type;

      target_type = Send(self,@GetType);
      if target_type = 1
         OR target_type = 3
      {
         AddPacket(4,defspellproc_attribute_desc, 4,Send(poHostObject,@GetName),
                   4,Send(Send(self,@GetSpell),@GetName),4,def_attribute_self_rsc,
                   4,Send(self,@GetSpellPower),4,Send(self,@GetProcChance));
      }
      else if target_type = 2
      {
         AddPacket(4,defspellproc_attribute_desc, 4,Send(poHostObject,@GetName),
                   4,Send(Send(self,@GetSpell),@GetName),4,def_attribute_target_rsc,
                   4,Send(self,@GetSpellPower),4,Send(self,@GetProcChance));
      }

      return;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
