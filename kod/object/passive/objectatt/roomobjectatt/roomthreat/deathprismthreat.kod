% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
DeathPrismThreat is RoomThreat 

% Clinging darkness accumulates rapidly per tick if the player isn't moving.
% Make icon - unholy touch + darkness

constants:

   include blakston.khd

resources:

   grasping_darkness_threat_name_rsc = "grasping darkness"
   grasping_darkness_threat_icon_rsc = idarknes.bgf
   grasping_darkness_threat_desc_rsc = \
      "Death, negativity, darkness - call it what you will, but it is present "
      "here in a physical sense, clawing at you, grasping at your limbs. Don't stop "
      "moving for too long!"

   grasping_darkness_threat_begin_msg = \
      "Darkness closes in, grasping at you."
   grasping_darkness_threat_end_msg = \
      "The grasping darkness fades away."
   grasping_darkness_threat_damage_msg = \
      "Claws of shadow scratch at you from every angle!"

   grasping_darkness_good_item_use_msg = \
      "The shadows flee your light!"
   grasping_darkness_good_spell_use_msg = \
      "Your magic keeps the shadows at bay!"

   grasping_darkness_death_msg = \
      "~B~U~k[###]~n ~B~v%s was pulled away into infinite darkness in the Prism of Death."

classvars:

   vrName = grasping_darkness_threat_name_rsc
   vrIcon = grasping_darkness_threat_icon_rsc
   vrDesc = grasping_darkness_threat_desc_rsc

   viThreatBeginMsg = grasping_darkness_threat_begin_msg
   viThreatEndMsg = grasping_darkness_threat_end_msg
   viThreatDamageMsg = grasping_darkness_threat_damage_msg
   viGoodItemUseMsg = grasping_darkness_good_item_use_msg
   viGoodSpellUseMsg = grasping_darkness_good_spell_use_msg
   
   viDeathMsg = grasping_darkness_death_msg

properties:

   % What type of damage do we do?
   piDamageTypeAttack = 0
   piDamageTypeSpell = ATCK_SPELL_UNHOLY

   % How much damage do we do?
   piDamageMin = 1
   piDamageMax = 3
   
   % How often do we deal damage?
   piDamageTime = 1000
   ptDamageTimer = $
   
   % How long does the threat last?
   piThreatTime = 10 * 60 * 1000
   ptThreatTimer = $

   % Do we report the damage?
   piReport = FALSE

   % This threat drains vigor.
   piVigorDrop = 10000

messages:

   Constructor()
   {
%      plSpecialItemClasses = [&AcidRing,&SimpleHelm];
%      plSpecialExemptItemClasses = [&RingOfLethargy];
%      plSpecialSpellClasses = [&ResistAcid];

      propagate;
   }
   
   Constructed()
   {
      propagate;
   }

   ReqDealDamage(who=$)
   {
      local iSection;

      % A torch keeps the grasping darkness at bay
      if Send(who,@IsUsingA,#class=&Torch)
         OR Send(who,@GetPlayerRace) = RACE_HALF_ORC
%         OR Send(who,@IsEnchanted,#byClass=&ResistAcid)
%         OR Send(who,@IsUsingA,#class=&AcidRing)
      {
         return FALSE;
      }

      propagate;
   }

   ApplyDirectEffect(who=$)
   {
      Send(who,@AddExertion,#amount=piVigorDrop);
      propagate;
   }
   
   Delete()
   {
      propagate;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
