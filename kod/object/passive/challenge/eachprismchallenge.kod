% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
EachPrismChallenge is LadderChallenge

constants:

   include blakston.khd

resources:

   each_prism_challenge_name = "Defeat each Prism"
   each_prism_challenge_icon = iblfire.bgf
   each_prism_challenge_desc = \
      "Defeat each elemental Prism in Biskalane.\n"
      "\nPrism of Lightning: %s"
      "\nPrism of Ice: %s"
      "\nPrism of Acid: %s"
      "\nPrism of Fire: %s"
      "\nPrism of Death: %s"
      "\nPrism of Life: %s"

classvars:

   vrName = each_prism_challenge_name
   vrIcon = each_prism_challenge_icon
   vrDesc = each_prism_challenge_desc
   
   viChallengeNum = DEFEAT_EACH_PRISM

properties:


messages:

   ShowDesc(who=$)
   {
      local lChallengeData, lData, rOne, rTwo, rThree, rFour, rFive, rSix;

      lChallengeData = Send(who,@GetLadderChallengeData);
      
      lData = Nth(lChallengeData,DEFEAT_EACH_PRISM);
      
      if Nth(lData,1)
      {
         rOne = Send(self,@GetCompletedChallengeRsc);
      }
      else
      {
         rOne = Send(self,@GetNotCompletedChallengeRsc);
      }
      
      if Nth(lData,2)
      {
         rTwo = Send(self,@GetCompletedChallengeRsc);
      }
      else
      {
         rTwo = Send(self,@GetNotCompletedChallengeRsc);
      }
      
      if Nth(lData,3)
      {
         rThree = Send(self,@GetCompletedChallengeRsc);
      }
      else
      {
         rThree = Send(self,@GetNotCompletedChallengeRsc);
      }
      
      if Nth(lData,4)
      {
         rFour = Send(self,@GetCompletedChallengeRsc);
      }
      else
      {
         rFour = Send(self,@GetNotCompletedChallengeRsc);
      }
      
      if Nth(lData,5)
      {
         rFive = Send(self,@GetCompletedChallengeRsc);
      }
      else
      {
         rFive = Send(self,@GetNotCompletedChallengeRsc);
      }
      
      if Nth(lData,6)
      {
         rSix = Send(self,@GetCompletedChallengeRsc);
      }
      else
      {
         rSix = Send(self,@GetNotCompletedChallengeRsc);
      }

      AddPacket(4,vrDesc, 4,rOne,
                          4,rTwo,
                          4,rThree,
                          4,rFour,
                          4,rFive,
                          4,rSix);

      return;
   }

   GetCompleted(who=$)
   {
      local lChallengeData, lData;

      lChallengeData = Send(who,@GetLadderChallengeData);
      
      lData = Nth(lChallengeData,DEFEAT_EACH_PRISM);

      if lData <> $
         AND FindListElem(lData,0) = 0
      {
         return TRUE;
      }
      
      return FALSE;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
