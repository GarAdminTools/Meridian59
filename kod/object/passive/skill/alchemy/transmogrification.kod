% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Transmogrification is AlchemySkill

constants:

   include blakston.khd

resources:

   transmogrification_name_rsc = "transmogrification"
   transmogrification_icon_rsc = imend.bgf
   transmogrification_desc_rsc = \
      "Many alchemists are too caught up in the pursuit of science "
      "to waste time shopping for mundane supplies such as reagents. "
      "To that end, alchemists developed the ability to "
      "preserve the reagents used in a spell, thereby consuming a small bit of gold instead. "
      "This process only works for numbered reagents, not single major items."
      "\n\nAlchemical creation depends upon the essence of gold, "
      "so each process consumes some number of transmuted shillings. "
      "More skilled alchemists can consume less gold with each transmutation."
      "\n\nThe more reagents there are to stabilize the reaction, the better chance of resisting reagent loss. "
      "If your reagent count becomes too low, you will begin burning them more rapidly."

   not_enough_shillings_transmogrification = \
      "You don't have the %i shillings required to resist burning reagents!"
   transmute_shillings_transmogrification = \
      "You alchemically melt %i shillings to resist burning reagents."

classvars:

   vrName = transmogrification_name_rsc
   vrIcon = transmogrification_icon_rsc
   vrDesc = transmogrification_desc_rsc

   viIndefinite = ARTICLE_NONE
   viDefinite = ARTICLE_NONE

   viSkill_num = SKID_TRANSMOGRIFICATION
   viSchool = SKS_ALCHEMY
   viSkill_Level = 3
   viChance_to_Increase = 20
   viMeditate_ratio = 40

   viSkillExertion = 0
   vbCheck_exertion = FALSE
   
   viPrimaryStat = STAT_ID_INTELLECT
   viSecondaryStat = 0

properties:

messages:

   GetRequisiteStat(who=$)
   {
      return Send(who,@GetIntellect);
   }

   DoSkill(who=$, oReagent=$)
   {
      local iAbility, iStat, iReagentCount, iChance, oMoney, iCash, iFee;

      iAbility = Send(who,@GetSkillAbility,#Skill_num=viSkill_num);
      iStat = Send(self,@GetRequisiteStat,#who=who);
      iReagentCount = Send(oReagent,@GetNumber);
      
      if iReagentCount < 1
      {
         return FALSE;
      }

      % First: 1 in iReagentCount, incentivizing keeping high durability
      if Random(1,iReagentCount) = 1
      {
         return FALSE;
      }

      iChance = Bound(iAbility + iStat/5,10,100);
      if Random(1,100) > iChance
      {
         return FALSE;
      }
      
      % We succeeded! Or, rather, didn't fail. Shilling cost time.

      oMoney = Send(who,@GetMoneyObject);
      if oMoney = $
      {
         % No cash.
         iCash = 0;
      }
      else
      {
         iCash = Send(oMoney,@GetValue);
      }
      
      % Fee ranges from 2x down to 1x.
      iFee = Send(oReagent,@GetInitValue);
      iFee = (iFee*2) - (iFee*(iAbility+1))/100;

      if iCash < iFee AND iFee <> 0
      {
         %Send(who,@MsgSendUser,#message_rsc=not_enough_shillings_transmogrification,#parm1=iFee);
         return FALSE;
      }

      if iFee <> 0
      {
         Send(oMoney,@SubtractNumber,#number=iFee);
         %Send(who,@MsgSendUser,#message_rsc=transmute_shillings_transmogrification,#parm1=iFee);
      }

      propagate;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
