% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Hide is BanditrySkill

constants:

   include blakston.khd
   include protocol.khd   

resources:

   Hide_name_rsc = "hide"
   Hide_icon_rsc = ifade.bgf
   Hide_desc_rsc = "Allows the user to mask their presence, thereby avoiding general detection "
                   "on the map and minimap. To attempt to begin hiding, walk slowly while sneaking. "
                   "Once hidden, you will appear on the minimap again if you run or rest unless you "
                   "are using the 'light feet' stance. Fighting or casting will also reveal your "
                   "position."
   
   begin_hiding_rsc = "You blend in with the natural presence of the area."
   fail_hide_rsc = "You fail to hide."
   
   hide_stop = "You stop hiding."
   
   hide_you_revealed = "~BYou sight %s attempting to creep through the area!"
   hide_you_revealed_vrikshasana = "~BYou sense %s with the art of Vrikshasana!"
   hide_revealed = "~B%s sights you and makes your presence known!"
   hide_revealed_vrikshasana = "~B%s has sensed you with the art of Vrikshasana and made your presence known!"

classvars:

   vrName = Hide_name_rsc
   vrIcon = Hide_icon_rsc
   vrDesc = Hide_desc_rsc

   viIndefinite = ARTICLE_NONE
   viDefinite = ARTICLE_NONE

   viSkill_num = SKID_HIDE
   viSchool = SKS_BANDITRY
   viSkill_Level = 4
   viChance_to_Increase = 20
   viMeditate_ratio = 50

   viSkillExertion = 0
   vbCheck_exertion = FALSE

   vbAutomatic = TRUE
   viShow_enchantment_icon = 0x02
   
   viPrimaryStat = STAT_ID_AGILITY
   viSecondaryStat = 0

properties:

   plHiding = $

messages:

   GetRequisiteStat(who=$)
   {
      return Send(who,@GetAgility);
   }
   
   DoSkill(who=$)
   {
      local chance, iAgility, iAbility;
      
      if Send(self,@IsHiding,#who=who)
      {
         return;
      }
      
      iAgility = Send(self,@GetRequisiteStat,#who=who);
      iAbility = Send(who,@GetSkillAbility,#skill_num=viSkill_num);
      
      chance = (iAgility/2) + iAbility;
      chance = bound(chance,5,95);
      
      if chance > Random(1,100)
      {
         Send(self,@BeginHiding,#who=who);
      }
      else
      {
         Send(who,@MsgSendUser,#message_rsc=fail_hide_rsc);
         return;
      }
      
      propagate;
   }
   
   BeginHiding(who=$)
   {
      local oVoidstepTabi, oObject, lObjects;

      if who <> $
         AND IsClass(who,&Player)
         AND (plHiding = $ OR FindListElem(plHiding,who) = 0)
      {
         plHiding = Cons(who,plHiding);
         Send(who,@MsgSendUser,#message_rsc=begin_hiding_rsc);
         If Send(who,@GetOwner) <> $
         {
            lObjects = Send(Send(who,@GetOwner),@GetPlayersInRoom);
            foreach oObject in lObjects
            {
               if oObject <> who
               {
                  Send(oObject,@SomethingLeft,#what=who,#bHidingNow=TRUE);
               }
            }
            
            Post(Send(who,@GetOwner),@SomethingChanged,#what=who);
            Post(Send(who,@GetOwner),@SetContainsHider,#value=TRUE);
            Post(who,@ShowAddEnchantment,#what=self,#type=ENCHANTMENT_PLAYER);
            
            oVoidstepTabi = Send(who,@FindUsing,#class=&VoidstepTabi);
            if oVoidstepTabi <> $
            {
               Send(oVoidstepTabi,@EndHideTimer);
            }
         }
      }

      return;
   }
   
   StopHiding(who=$)
   {
      local oVoidstepTabi, oObject, lObjects, i;

      if plHiding <> $
         AND FindListElem(plHiding,who) <> 0
      {
         plHiding = DelListElem(plHiding,who);
         Send(who,@MsgSendUser,#message_rsc=hide_stop);
         If Send(who,@GetOwner) <> $
         {
            lObjects = Send(Send(who,@GetOwner),@GetHolderActive);
            foreach i in lObjects
            {
               oObject = Send(Send(who,@GetOwner),@HolderExtractObject,#data=i);
               if IsClass(oObject,&User)
                  AND oObject <> who
               {
                  Send(oObject,@SomethingEntered,#what=who);
               }
            }

            Post(Send(who,@GetOwner),@SomethingChanged,#what=who);
            Post(Send(who,@GetOwner),@CheckContainsHider);
            Post(who,@ShowRemoveEnchantment,#what=self,#type=ENCHANTMENT_PLAYER);
            
            oVoidstepTabi = Send(who,@FindUsing,#class=&VoidstepTabi);
            if oVoidstepTabi <> $
            {
               Send(oVoidstepTabi,@StartHideTimer);
            }
         }
      }

      return;
   }
   
   RevealHider(who=$,revealer=$,bVrikshasana=FALSE)
   {
      if bVrikshasana
      {
         Send(revealer,@MsgSendUser,#message_rsc=hide_you_revealed_vrikshasana,#parm1=Send(who,@GetName));
         Send(who,@MsgSendUser,#message_rsc=hide_revealed_vrikshasana,#parm1=Send(revealer,@GetName));
      }
      else
      {
         Send(revealer,@MsgSendUser,#message_rsc=hide_you_revealed,#parm1=Send(who,@GetName));
         Send(who,@MsgSendUser,#message_rsc=hide_revealed,#parm1=Send(revealer,@GetName));
      }
      Send(self,@StopHiding,#who=who);
      return;
   }
   
   RevealHiderVrikshasana(who=$,revealer=$)
   {
      return;
   }
   
   IsHiding(who=$)
   {
      local i;
      
      foreach i in plHiding
      {
         if i = who
         {
            return 1;
         }
      }
      
      return 0;
   }

   ShowEnchantmentIcon(type = $)
   {
      return viShow_enchantment_icon & 0x02;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
