% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
RoteMemorization is WitcherySkill

constants:

   include blakston.khd

resources:

   rote_memorization_name_rsc = "rote memorization"
   rote_memorization_icon_rsc = slashico.bgf
   rote_memorization_desc_rsc = \
      "The witches of Nequzon are often wild and quick to act, "
      "but that frenzy is backed up by dedicated practice. To cast before "
      "thought, one must have every aspect of a hex completely memorized, "
      "and that speed allows a witch to expend less mana in the magical process. "
      "The more of their hexes a witch has memorized, the less mana they spend."

   rote_memorization_reduction = \
      "You perform your memorized hex quickly, spending less mana in the process."

classvars:

   vrName = rote_memorization_name_rsc
   vrIcon = rote_memorization_icon_rsc
   vrDesc = rote_memorization_desc_rsc

   viIndefinite = ARTICLE_NONE
   viDefinite = ARTICLE_NONE

   viSkill_Num = SKID_ROTE_MEMORIZATION
   viSubSchool = SSS_WITCHERY_NEQUZON
   viSkill_level = 3
   viChance_to_increase = 16
   viMeditate_ratio = 45

properties:
   
   piCostReduction = 15

messages:

   GetRequisiteStat(who=$)
   "Varies from skill to skill and spell to spell."
   {
      return Send(who,@GetIntellect);
   }

   GetCostReduction(who=$)
   {
      local iAbility, iStat, iTotalReduction;
      
      iAbility = Send(who,@GetSkillAbility,#Skill_num=viSkill_num);
      iStat = Send(self,@GetRequisiteStat,#who=who);
      
      iTotalReduction = piCostReduction;
      
      iTotalReduction = iTotalReduction + iStat/10 + 
                        ((iTotalReduction * (iAbility+1))/100);

      return iTotalReduction;
   }

   DoSkill(who=$)
   {
      local iAbility, iStat;
      
      iAbility = Send(who,@GetSkillAbility,#Skill_num=viSkill_num);
      iStat = Send(self,@GetRequisiteStat,#who=who);

      if bound(iAbility-6,1,93) + iStat/10 <= Random(1,100)
      {
         return FALSE;
      }

      Send(who,@MsgSendUser,#message_rsc=rote_memorization_reduction);

      propagate;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
