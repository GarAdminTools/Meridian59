% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
ActiveParryingStance is Stance

constants:

   include blakston.khd
   include protocol.khd   

resources:

   ActiveParrying_name_rsc = "counterattack"
   ActiveParrying_icon_rsc = parryico.bgf
   ActiveParrying_desc_rsc = \
      "The honorable traditions of knightly combat have, for centuries, "
      "included the art of dueling. "
      "Controlling the flow of a duel is the key to success, "
      "so veteran knights learn to forego attacking in favor of "
      "waiting for an opportunity to turn the tide. "
      "While in this stance, "
      "a warrior will attempt to parry melee attacks coming from the front, but cannot himself attack. "
      "Successful parries open up the opponent to a counterattack which knocks back and stuns them. "
      "The counterattack motions then drop the stance so that the knight may press his advantage."
      "\n\nFocusing all one's attention on the front comes with a risk: "
      "attacks from behind are extremely difficult to avoid."
      "\n\nLastly, wielding a sword of any type is required to actively parry. "

   ActiveParrying_skill_intro = "Knightcraft Lv. 4: A stance that focuses on parrying."
   
   ActiveParrying_begin = "You lift your weapon vigilantly."
   ActiveParrying_end = "You lower your weapon."
   ActiveParrying_mantra = \
      "En garde!"

   ActiveParrying_intro = \
      "Knightcraft Lv. 4: Attempt to parry incoming attacks."
      
   ActiveParry_you = \
      "You fend off %s%s with your weapon!"
   ActiveParry_them = \
      "%s%s fends off your attack with %s weapon!"

classvars:

   vrName = ActiveParrying_name_rsc
   vrIcon = ActiveParrying_icon_rsc
   vrDesc = ActiveParrying_desc_rsc

   stance_begin_msg = ActiveParrying_begin
   stance_end_msg = ActiveParrying_end
   
   vsStanceMantra = ActiveParrying_mantra

   vrSkill_intro = ActiveParrying_skill_intro

   viIndefinite = ARTICLE_NONE
   viDefinite = ARTICLE_NONE

   viSkill_num = SKID_ACTIVE_PARRYING_STANCE
   viSchool = SKS_KNIGHTCRAFT
   viSkill_Level = 4
   viChance_to_Increase = 5
   viMeditate_ratio = 60

   viSkillExertion = 0
   vbCheck_exertion = FALSE

   vbAutomatic = TRUE
   
   viParryExertion = 6

properties:

   piBaseParryChance = 66

messages:

   GetRequisiteStat(who=$)
   {
      return Send(who,@GetAim);
   }

   AttemptActiveParry(who=$, what=$)
   {
      local iActiveParryingAbility, iStat, iParryChance;

      if who = $
         OR what = $
         OR NOT IsClass(who,&Player)
         OR NOT (Send(who,@IsUsingA,#class=&ShortSword)
            OR Send(who,@IsUsingA,#class=&NeruditeSword)
            OR Send(who,@IsUsingA,#class=&MysticSword)
            OR Send(who,@IsUsingA,#class=&LongSword)
            OR Send(who,@IsUsingA,#class=&GoldSword)
            OR Send(who,@IsUsingA,#class=&HunterSword))
         OR NOT Send(who,@GetInFrontOrBehindMe,#what=what,#iSide=SIDE_FRONT)
         %OR Send(who,@CheckPlayerFlag,#flag=PFLAG_NO_MOVE)
      {
         return FALSE;
      }

      iActiveParryingAbility = Send(who,@GetSkillAbility,#skill_num=viSkill_num);
      iStat = Send(self,@GetRequisiteStat,#who=who);

      % 66 chance base, up to 99 with 99%, then Aim adds up to 10% more for 109% max
      iParryChance = piBaseParryChance + iActiveParryingAbility/3 + iStat/10;

      if Random(1,100) <= iParryChance
      {
         Send(who,@MsgSendUser,#message_rsc=ActiveParry_you,#parm1=Send(what,@GetDef),#parm2=Send(what,@GetName));
         
         if IsClass(what,&Player)
         {
            Send(what,@MsgSendUser,#message_rsc=ActiveParry_them,#parm1=Send(who,@GetDef),#parm2=Send(who,@GetName),#parm3=Send(who,@GetHisHer));
         }
         Send(who,@AddExertion,#amount=10000*viParryExertion);
         Send(self,@ImproveAbility,#who=who);
         Send(what,@ApplyKnockback,#what=who,#knockback_power=Send(who,@GetKnockbackPower));
         Send(what,@ApplyStun,#what=who,#stun_power=Send(who,@GetStunPower));
         Send(who,@ClearStance);
         return TRUE;
      }

      return FALSE;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
