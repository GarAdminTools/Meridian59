% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
ForceSpike is SorcerySkill

constants:

   include blakston.khd

resources:

   force_spike_name_rsc = "force spike"
   force_spike_icon_rsc = isquishedlightning.bgf
   force_spike_desc_rsc = \
      "By expending a large amount of mana in a spike of force, a skilled "
      "mage can complete a spell that would have otherwise fizzled."
      
   not_enough_mana_force_msg = \
      "You don't have enough mana to force spike this spell."
   sacrifice_mana = \
      "You explosively expend %i mana to spike your spell through a fizzle!"

classvars:

   vrName = force_spike_name_rsc
   vrIcon = force_spike_icon_rsc
   vrDesc = force_spike_desc_rsc

   viIndefinite = ARTICLE_NONE
   viDefinite = ARTICLE_NONE

   viSkill_num = SKID_FORCE_SPIKE
   viSchool = SKS_SORCERY
   viSkill_Level = 3
   viChance_to_Increase = 20
   viMeditate_ratio = 80

   viSkillExertion = 0
   vbCheck_exertion = FALSE

properties:

messages:

   GetRequisiteStat(who=$)
   {
      return Send(who,@GetMysticism);
   }
   
   AttemptManaSacrifice(who=$,oSpell=$,iSpellPower=0)
   {
      local iAbility, iStat, iSpellAbility, iSacrifice, iCoefficient,
            iInitialCost;

      iAbility = Send(who,@GetSkillAbility,#Skill_num=viSkill_num);
      iSpellAbility = Send(who,@GetSpellAbility,
                               #spell_num=Send(oSpell,@GetSpellNum));
      iStat = Send(self,@GetRequisiteStat,#who=who);
      
      iInitialCost = Send(oSpell,@GetManaCost,
                                 #who=who,#iSpellPower=iSpellPower);
      iCoefficient = Bound(298 - iAbility - iSpellAbility,100,300);
      
      iSacrifice = (iInitialCost * iCoefficient)/100;
      
      % Remember, the player has to also cast this spell,
      % losing mana for the initial cost later.
      if iSacrifice + iInitialCost > Send(who,@GetMana)
      {
         Send(who,@MsgSendUser,#message_rsc=not_enough_mana_force_msg);
         return FALSE;
      }
      
      Send(self,@DoSkill,#who=who,#iSacrifice=iSacrifice);
      
      return TRUE;
   }

   DoSkill(who=$,iSacrifice=0)
   {
      Send(who,@LoseMana,#amount=iSacrifice);
      Send(who,@MsgSendUser,#message_rsc=sacrifice_mana,
                            #parm1=iSacrifice);
      
      propagate;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

