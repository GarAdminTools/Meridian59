% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
BloodMagic is SorcerySkill

constants:

   include blakston.khd

resources:

   blood_magic_name_rsc = "blood magic"
   blood_magic_icon_rsc = imajheal.bgf
   blood_magic_desc_rsc = \
      "By the sacrifice of some of one's own life essence, a mage can replace "
      "the need for physical reagents. Unfortunately, the pain involved "
      "makes it impossible to pay attention, so spells cast in such a manner "
      "cannot be improved."

   blood_magic_skill_intro = \
      "Sorcery Lv. 2: Sacrifice health to cast spells without the need for reagents."

   not_enough_health = \
      "You don't have enough health to cast this spell!"
   sacrifice_health = \
      "You spill your own blood in place of physical reagents, "
      "losing %i health."
   already_bleeding_sacrifice = \
      "In place of physical reagents, you catalyze some of the fluid from your bleeding wounds."

classvars:

   vrName = blood_magic_name_rsc
   vrIcon = blood_magic_icon_rsc
   vrDesc = blood_magic_desc_rsc

   vrSkill_intro = blood_magic_skill_intro

   viIndefinite = ARTICLE_NONE
   viDefinite = ARTICLE_NONE

   viSkill_num = SKID_BLOOD_MAGIC
   viSchool = SKS_SORCERY
   viSkill_Level = 2
   viChance_to_Increase = 8
   viMeditate_ratio = 40

   viSkillExertion = 0
   vbCheck_exertion = FALSE

properties:

messages:

   GetRequisiteStat(who=$)
   {
      return Send(who,@GetStamina);
   }
   
   AttemptBloodSacrifice(who=$,oSpell=$,iSpellPower=0)
   {
      local iAbility, iStat, iSpellAbility, iSacrifice, iCoefficient;

      iAbility = Send(who,@GetSkillAbility,#Skill_num=viSkill_num);
      iSpellAbility = Send(who,@GetSpellAbility,
                               #spell_num=Send(oSpell,@GetSpellNum));
      iStat = Send(self,@GetRequisiteStat,#who=who);
      
      iSacrifice = Send(oSpell,@GetManaCost,#who=who,#iSpellPower=iSpellPower);
      iCoefficient = Bound(298 - iAbility - iSpellAbility,100,300);
      
      iSacrifice = (iSacrifice * iCoefficient)/100;
      
      if iSacrifice >= Send(who,@GetHealth)
      {
         Send(who,@MsgSendUser,#message_rsc=not_enough_health);
         return FALSE;
      }
      
      Send(self,@DoSkill,#who=who,#iSacrifice=iSacrifice);
      
      return TRUE;
   }

   DoSkill(who=$,iSacrifice=0)
   {
      % Decay is true to avoid breaking focus immediately upon casting
      if NOT Send(who,@IsBleeding)
      {
         Send(who,@LoseHealth,#amount=iSacrifice,#decay=TRUE);
         Send(who,@MsgSendUser,#message_rsc=sacrifice_health,#parm1=iSacrifice);
      }
      else
      {
         Send(who,@MsgSendUser,#message_rsc=already_bleeding_sacrifice);
      }
      
      propagate;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
