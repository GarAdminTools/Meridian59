% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
ProfaneResonance is HinderSpell

constants:

   include blakston.khd

resources:

   include profnres.lkod

   ProfaneResonance_name_rsc = "profane resonance"
   ProfaneResonance_icon_rsc = iprofres.bgf
   ProfaneResonance_desc_rsc = \
      "The foreboding sound of this song hinders the casting the holy spells of Shal'ille "
      "and protects all who hear it from blinding and dazzling magics. "
      "A ruby and some herbs are required to begin performing this song."
      
   profane_resist_rsc = \
      "\n\nIn addition to hindering the magics of Shal'ille, the song of Profane Resonance currently affecting "
      "you adds %i\% holy resistance."

   ProfaneResonance_song = nec02.mp3

classvars:

   vrName = ProfaneResonance_name_rsc
   vrIcon = ProfaneResonance_icon_rsc
   vrDesc = ProfaneResonance_desc_rsc

   viMana = 5          % Mana is amount used upon inititiation
   viManaDrain = 3     % Drain is amount used every viDrainTime milliseconds
   viDrainTime = 5000    % Drain some mana every viDrainTime milliseconds
   viSpell_num = SID_PROFANE_RESONANCE

   viSchool = SS_JALA
   viSpell_level = 3

   viHinderedSchool = SS_SHALILLE

   viResistOne = -ATCK_SPELL_HOLY

   viDivisorOne = 3

properties:

   prMusic = ProfaneResonance_song

messages:

   ResetReagents()
   {
      plReagents = $;
      plReagents = Cons([&Ruby,1],plReagents);
      plReagents = Cons([&Herbs,1],plReagents);

      return;
   }

   AddBlindResistance(power=0,resistance=0)
   {
      return resistance + power/3;
   }

   SendStatsDesc(who=$)
   {
      if who <> $
         AND IsClass(who,&User)
         AND Send(who,@GetMostPowerfulRadiusEnchantmentState,#byClass=&ProfaneResonance) <> $
      {
         Send(self,@EffectDesc,#who=who);

         return;
      }

      propagate;
   }

   EffectDesc(who=$)
   {
      local lState, iDivisorOne;
      
      lState = Send(who,@GetMostPowerfulRadiusEnchantmentState,#byClass=&ProfaneResonance);

      if lState <> $
      {
         iDivisorOne = viDivisorOne;
         if iDivisorOne = 0
         {
            iDivisorOne = 1;
         }
         AddPacket(4,profane_resist_rsc, 4,Nth(lState,2)/iDivisorOne);
      }

      propagate;
   }

end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
