% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Hospice is Spell

constants:

   include blakston.khd

resources:

   include hospice.lkod

   hospice_name_rsc = "hospice"
   hospice_icon_rsc = ihospice.bgf
   hospice_desc_rsc = \
      "Rejuvenates the target of the spell with Shal'ille's healing energy.  "
      "Shal'ille gives a small reward toward the karma of the mage who heals "
      "another good soul.  "
      "Requires three herbs to cast."

   hospice_heal_harm_rsc = \
      "%s%s's corrupted spell harms you for ~r~B%i~B~n hitpoints!"
   hospice_heal_harm_self_rsc = \
      "Your corrupted spell harms you for ~r~B%i~B~n hitpoints!"
   hospice_heal_harm_other_rsc = \
      "Your corrupted heal harms %s%s for ~r~B%i~B~n hitpoints!"

   hospice_cast_rsc = \
      "%s%s's spell rejuvenates you, restoring ~g~B%i~B~n hitpoints."
   hospice_cast_self = \
      "Shal'ille's holy magic rejuvenates you, restoring ~g~B%i~B~n hitpoints."
   hospice_cast_on_other = "You heal %s%s for ~g~B%i~B~n hitpoints."
   hospice_unnecessary_rsc = "%s%s is perfectly healthy."

classvars:

   vrName = hospice_name_rsc
   vrIcon = hospice_icon_rsc
   vrDesc = hospice_desc_rsc

   viSchool = SS_SHALILLE
   viSpell_num = SID_HOSPICE
   viMana = 15
   viSpell_level = 3
   viChance_To_Increase = 20
   viMeditate_ratio = 40

   viFlash = FLASH_GOOD
   
   viPrimaryStat = STAT_ID_MYSTICISM
   viSecondaryStat = STAT_ID_KARMA

   viHealAttackType = 0
   viHealSpellType = ATCK_SPELL_HOLY

properties:

messages:

   ResetReagents()
   {
      % separate message so can change, then set from admin mode

      plReagents = $;
      plReagents = Cons([&Herbs,2],plReagents);

      return;
   }

   GetNumSpellTargets()
   {
      return 1;
   }

   CanPayCosts(who = $, lTargets = $, bItemCast = FALSE)
   {
      local target, i;

      % Can cast spell if the 1 target item is a user
      if Length(lTargets) <> 1
      {
         return FALSE;
      }

      target = First(lTargets);
      if NOT IsClass(target,&User)
      {
         if NOT bItemCast
         {
            Send(who,@MsgSendUser,#message_rsc=spell_bad_target, 
                  #parm1=vrName,#parm2=Send(target,@GetDef),
                  #parm3=Send(target,@GetName));
         }

         return FALSE;
      }

      if Send(target,@GetHealth) >= Send(target,@GetMaxHealth)
      {
         if NOT bItemCast
         {
            Send(who,@MsgSendUser,#message_rsc=hospice_unnecessary_rsc,
                  #parm1=Send(target,@GetCapDef),
                  #parm2=Send(target,@GetName));
         }

         return FALSE;
      }

      propagate;
   }

   CastSpell(who = $, lTargets = $, iSpellPower = 0)
   {
      local iHeal, oTarget, i, oRoom, iResult, lCasterEmpowerments, iEmpowermentPercentage;

      oTarget = First(lTargets);

      iHeal = Random(-300,300) + iSpellPower*20 + 10000*10;
      iHeal = Bound(iHeal,0,2500);
      
      lCasterEmpowerments = Send(who,@GetCurrentEmpowerments);
      iEmpowermentPercentage = 0;
      foreach i in lCasterEmpowerments
      {
         if Nth(i,1) > 0
         {
            % Weapon empowerment.
            if viHealAttackType & Nth(i,1)
               OR (viHealAttackType <> 0
                  AND (ATCK_WEAP_ALL & -Nth(i,1)))
            {
               iEmpowermentPercentage = iEmpowermentPercentage + Nth(i,2);
            }
         }
         else
         {
            % Spell empowerment.
            if viHealSpellType & -Nth(i,1)
               OR (viHealSpellType <> 0
                  AND (ATCK_SPELL_ALL & -Nth(i,1)))
            {
               iEmpowermentPercentage = iEmpowermentPercentage + Nth(i,2);
            }
         }
      }
      iHeal = (iHeal * (100+iEmpowermentPercentage))/100;

      foreach i in Send(oTarget,@GetEnchantmentsByClass,#enchClass=&Hex)
      {
         iHeal = Send(Nth(i,2),@ModifyHeal,#amount=iHeal,#state=Nth(i,3));
      }

      if iHeal < 0
         AND Send(who,@AllowPlayerAttack,#victim=oTarget)
      {
         iResult = 0;
         iResult = Send(oTarget,@AssessDamage,#what=who,
                                #damage=-iHeal,
                                #aspell=ATCK_SPELL_ALL+ATCK_SPELL_HOLY,
                                #precision=TRUE);

         if iResult = $
         {
            % The target died!
            if IsClass(who,&Battler)
            {
               Send(who,@KilledSomething,#what=oTarget,#use_weapon=self);
            }
         }
         else
         {
            if who <> oTarget
            {
               Send(who,@MsgSendUser,#message_rsc=hospice_heal_harm_other_rsc,
                                     #parm1=Send(oTarget,@GetDef),
                                     #parm2=Send(oTarget,@GetName),
                                     #parm3=iResult/100);
               Send(oTarget,@MsgSendUser,#message_rsc=hospice_heal_harm_rsc,
                                         #parm1=Send(who,@GetCapDef),
                                         #parm2=Send(who,@GetName),
                                         #parm3=iResult/100);
            }
            else
            {
               Send(who,@MsgSendUser,#message_rsc=hospice_heal_harm_self_rsc,
                                     #parm1=iResult/100);
            }
         }

         propagate;
      }
      else
      {
         iHeal = Send(oTarget,@GainHealthNormal,#amount=iHeal,#precision=TRUE);
         if IsClass(oTarget,&Player)
         {
            Send(oTarget,@RemoveEnchantmentClass,#class=&Bleed);
         }
      }

      if who <> oTarget 
      {
         Send(who,@MsgSendUser,#message_rsc=hospice_cast_on_other,
               #parm1=Send(oTarget,@GetDef),#parm2=Send(oTarget,@GetName),
               #parm3=iHeal/100);

         Send(oTarget,@MsgSendUser,#message_rsc=hospice_cast_rsc,
               #parm1=Send(who,@GetCapDef),#parm2=Send(who,@GetName),
               #parm3=iHeal/100);

         % Give them a little boost if they help someone of higher Karma.
         if Send(who,@GetKarma) < Send(oTarget,@GetKarma)
         {
            Send(who,@AddKarma,#amount=Send(who,@CalculateKarmaChangeFromAct,
                  #karma_doer=Send(who,@GetKarma),#karma_act=Send(oTarget,@GetKarma),
                  #Swing_factor=2));
         }
         
         oRoom = Send(oTarget,@GetOwner);
         if oRoom <> $
            AND Send(oRoom,@IsInBuilderGroup,#who=oTarget)
         {
            Send(who,@JoinBuilderGroup);
         }
         
         % Notify room we healed someone.
         if oRoom <> $
         {
            Send(oRoom,@PlayerHealedSomeone,#caster=who,#oTarget=oTarget,#iHealAmount=iHeal/100);
         }
      }
      else
      {
         Send(who,@MsgSendUser,#message_rsc=hospice_cast_self,#parm1=iHeal/100);
         
         oRoom = Send(oTarget,@GetOwner);
         % Notify room we healed someone.
         if oRoom <> $
         {
            Send(oRoom,@PlayerHealedSomeone,#caster=who,#oTarget=oTarget,#iHealAmount=iHeal/100);
         }
      }

      propagate;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
