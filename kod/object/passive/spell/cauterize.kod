% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Cauterize is Spell

constants:

   include blakston.khd

resources:

   cauterize_name_rsc = "cauterize"
   cauterize_icon_rsc = imajheal.bgf
   cauterize_desc_rsc = \
      "Faren's fire ignites the flame of life in his most fierce "
      "disciples when they need it most. By burning one's own "
      "wounds, the caster of this desperate magic can heal "
      "significantly and stop all bleeding, but at a great cost. "
      "Masters of Faren may also cauterize the wounds of others, "
      "though such an act is not always intended as aid. "
      "Requires red mushrooms, herbs, and elderberries to cast."

   cauterize_harm_rsc = \
      "%s%s's corrupted cauterization harms you for ~r~B%i~B~n hitpoints!"
   cauterize_harm_self_rsc = \
      "Your corrupted cauterization harms you for ~r~B%i~B~n hitpoints!"
   cauterize_harm_other_rsc = \
      "Your corrupted cauterization harms %s%s for ~r~B%i~B~n hitpoints!"

   cauterize_cast_rsc = \
      "%s%s's spell cauterizes your wounds, "
      "restoring ~g~B%i~B~n hitpoints."
   cauterize_cast_self = \
      "Faren's fire cauterizes your wounds, "
      "restoring ~g~B%i~B~n hitpoints."
   cauterize_cast_on_other = "You cauterize %s%s for ~g~B%i~B~n hitpoints."
   cauterize_unnecessary_rsc = "%s%s is perfectly healthy."

classvars:

   vrName = cauterize_name_rsc
   vrIcon = cauterize_icon_rsc
   vrDesc = cauterize_desc_rsc

   viSpell_num = SID_CAUTERIZE
   viMana = 27
   viSchool = SS_FAREN
   viSpell_level = 3
   viMeditate_ratio = 125
   viChance_To_Increase = 15

   viFlash = FLASH_GOOD
   
   viPrimaryStat = STAT_ID_MYSTICISM
   viSecondaryStat = 0

   viHealAttackType = 0
   viHealSpellType = ATCK_SPELL_FIRE

properties:

messages:

   ResetReagents()
   {
      plReagents = $;
      plReagents = Cons([&Herbs,2],plReagents);
      plReagents = Cons([&RedMushroom,2],plReagents);
      plReagents = Cons([&ElderBerry,2],plReagents);

      return;
   }

   GetNumSpellTargets()
   {
      return 1;
   }

   CanPayCosts(who = $, lTargets = $)
   {
      local target, i;

      % Can cast spell if the 1 target item is a user
      if Length(lTargets) <> 1
      {
         return FALSE;
      }

      target = First(lTargets);
      if NOT IsClass(target, &User)
      {
         Send(who,@MsgSendUser,#message_rsc=spell_bad_target,
               #parm1=vrName,#parm2=Send(target,@GetDef),
               #parm3=Send(target,@GetName));

         return FALSE;
      }

      if Send(target,@GetHealth) >= Send(target,@GetMaxHealth)
      {
         Send(who,@MsgSendUser,#message_rsc=cauterize_unnecessary_rsc,
               #parm1=Send(target,@GetCapDef),#parm2=Send(target,@GetName));

         return FALSE;
      }

      propagate;
   }

   CastSpell(who = $, lTargets = $, iSpellPower = 0)
   {
      local iHeal, oTarget, i, oRoom, iResult, lCasterEmpowerments, iEmpowermentPercentage, iBurnt;

      oTarget = First(lTargets);

      iHeal  = Random(700,1300) + iSpellPower*20 + 10000*20;
      iHeal = Bound(iHeal,0,5000);
      
      lCasterEmpowerments = Send(who,@GetCurrentEmpowerments);
      iEmpowermentPercentage = 0;
      foreach i in lCasterEmpowerments
      {
         if Nth(i,1) > 0
         {
            % Weapon empowerment.
            if viHealAttackType & Nth(i,1)
               OR (viHealAttackType <> 0
                  AND (ATCK_WEAP_ALL & -Nth(i,1)))
            {
               iEmpowermentPercentage = iEmpowermentPercentage + Nth(i,2);
            }
         }
         else
         {
            % Spell empowerment.
            if viHealSpellType & -Nth(i,1)
               OR (viHealSpellType <> 0
                  AND (ATCK_SPELL_ALL & -Nth(i,1)))
            {
               iEmpowermentPercentage = iEmpowermentPercentage + Nth(i,2);
            }
         }
      }
      iHeal = (iHeal * (100+iEmpowermentPercentage))/100;

      foreach i in Send(oTarget,@GetEnchantmentsByClass,#enchClass=&Hex)
      {
         iHeal = Send(Nth(i,2),@ModifyHeal,#amount=iHeal,#state=Nth(i,3));
      }

      if iHeal < 0
         AND Send(who,@AllowPlayerAttack,#victim=oTarget)
      {
         iResult = 0;
         iResult = Send(oTarget,@AssessDamage,#what=who,
                                #damage=-iHeal,
                                #aspell=ATCK_SPELL_ALL+viHealSpellType,
                                #precision=TRUE);

         if iResult = $
         {
            % The target died!
            if IsClass(who,&Battler)
            {
               Send(who,@KilledSomething,#what=oTarget,#use_weapon=self);
            }
         }
         else
         {
            if who <> oTarget
            {
               Send(who,@MsgSendUser,#message_rsc=cauterize_harm_other_rsc,
                                     #parm1=Send(oTarget,@GetDef),
                                     #parm2=Send(oTarget,@GetName),
                                     #parm3=iResult/100);
               Send(oTarget,@MsgSendUser,#message_rsc=cauterize_harm_rsc,
                                         #parm1=Send(who,@GetCapDef),
                                         #parm2=Send(who,@GetName),
                                         #parm3=iResult/100);
            }
            else
            {
               Send(who,@MsgSendUser,#message_rsc=cauterize_harm_self_rsc,
                                     #parm1=iResult/100);
            }
         }

         propagate;
      }
      else
      {
         iHeal = Send(oTarget,@GainHealthNormal,#amount=iHeal,#precision=TRUE);
         if IsClass(oTarget,&Player)
         {
            Send(oTarget,@RemoveEnchantmentClass,#class=&Bleed);
         }
         Send(oTarget,@AssessDamage,#what=who,
                          #damage=iHeal/2,
                          #atype=0,
                          #aspell=ATCK_SPELL_DRAIN,
                          #precision=TRUE,
                          #bSecondary=TRUE);
      }

      if who <> oTarget
      {
         Send(who,@MsgSendUser,#message_rsc=cauterize_cast_on_other,
               #parm1=Send(oTarget,@GetDef),#parm2=Send(oTarget,@GetName),
               #parm3=iHeal/200);

         Send(oTarget,@MsgSendUser,#message_rsc=cauterize_cast_rsc,
               #parm1=Send(who,@GetCapDef),#parm2=Send(who,@GetName),
               #parm3=iHeal/200);
         
         oRoom = Send(oTarget,@GetOwner);
         if oRoom <> $
            AND Send(oRoom,@IsInBuilderGroup,#who=oTarget)
         {
            Send(who,@JoinBuilderGroup);
         }
         
         % Notify room we healed someone.
         if oRoom <> $
         {
            Send(oRoom,@PlayerHealedSomeone,#caster=who,#oTarget=oTarget,#iHealAmount=iHeal/200);
         }
      }
      else
      {
         Send(who,@MsgSendUser,#message_rsc=cauterize_cast_self,
               #parm1=iHeal/200);
         
         oRoom = Send(oTarget,@GetOwner);
         % Notify room we healed someone.
         if oRoom <> $
         {
            Send(oRoom,@PlayerHealedSomeone,#caster=who,#oTarget=oTarget,#iHealAmount=iHeal/200);
         }
      }

      propagate;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
