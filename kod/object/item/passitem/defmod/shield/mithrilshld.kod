% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
MithrilShield is Shield

constants:

   include blakston.khd

resources:

   mithrilshield_name_rsc = "spiritual shield"
   mithrilshield_icon_rsc = newestshield.bgf
   mithrilshield_desc_rsc = \
      "Coalesced out of pure holy essences, this shield "
      "glows with the reflection of unseen spiritual light. It is far "
      "sturdier than its ethereal and thin span would seem to indicate. "
      "This shield draws its strength from the goodness of your soul, "
      "and will be weaker or stronger based on your karma. It can also "
      "be enchanted with magical modifications. Be wary; creating another "
      "spiritual shield will replace your current spiritual shield entirely."

   mithrilshield_window_overlay_rsc = povshldN2.bgf

classvars:

   vrName = mithrilshield_name_rsc
   vrIcon = mithrilshield_icon_rsc
   vrDesc = mithrilshield_desc_rsc

   viHits_init_min = 250
   viHits_init_max = 300

   viValue_average = 1
   viWeight = 0
   viBulk = 0

   vrShield_window_overlay = mithrilshield_window_overlay_rsc
   vrShield_overlay = mithrilshield_icon_rsc

   viGround_group = 3
   viInventory_group = 1
   viBroken_group = 4

   viDefense_base = 0
   viDamage_base = 0

properties:

   piCreatedSpellpower = 0

messages:

   Constructor(iCreatedSpellpower=0)
   {
      piCreatedSpellpower = iCreatedSpellpower;

      propagate;
   }

   Constructed()
   {
      % Spiritual shields have iLvl equal to spellpower+1 * 2.
      piItemLevel = (piCreatedSpellpower+1)*2;
      propagate;
   }

   GetDefenseBonus()
   {
      local iKarma, iRating;
      
      iKarma = 0;
      if poOwner <> $
         AND IsClass(poOwner,&Player)
      {
         iKarma = Send(poOwner,@GetKarma);
      }
      
      if iKarma = $
      {
         iKarma = 0;
      }

      return Bound(iKarma,0,piCreatedSpellpower+1);
   }

   GetBlockAbility(who = $)
   {
      local iKarma, iRating;
      
      iKarma = 0;
      if poOwner <> $
         AND IsClass(poOwner,&Player)
      {
         iKarma = Send(poOwner,@GetKarma);
      }
      
      if iKarma = $
      {
         iKarma = 0;
      }

      return Send(who,@GetSkillAbility,#skill_num=SKID_BLOCK) + Bound(iKarma,0,piCreatedSpellpower+1);
   }

   GetResistanceModifiers()
   {
      local iKarma, iRating;

      if Send(SETTINGS_OBJECT,@GetDirectArmorEnabled)
      { 
         return [ [ATCK_WEAP_SLASH,10],
                  [ATCK_WEAP_BLUDGEON,10],
                  [ATCK_WEAP_THRUST,10]
                ];
      }

      iKarma = 0;
      if poOwner <> $
         AND IsClass(poOwner,&Player)
      {
         iKarma = Send(poOwner,@GetKarma);
      }

      if iKarma = $
      {
         iKarma = 0;
      }

      iRating = Bound(iKarma/10,0,(piCreatedSpellpower+1)/10);

      return [ [ATCK_WEAP_ALL,iRating],
               [-ATCK_SPELL_ALL,iRating]
               ];
   }

   CanBeGivenToNPC()
   {
      return FALSE;
   }

   CanSwap()
   {
      return FALSE;
   }

   CanShatter()
   {
      return FALSE;
   }
   
   CanBeStoredInVault()
   {
      return FALSE;
   }

   DropOnDeath()
   {
      return FALSE;
   }

   ReqNewOwner(what=$)
   {
      % No dropping.
      return FALSE;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
