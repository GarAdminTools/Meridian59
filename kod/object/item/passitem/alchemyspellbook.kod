% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
AlchemySpellBook is PassiveItem

constants:

   include blakston.khd

resources:

   alchemy_spellbook_name_rsc = "technical tome"
   alchemy_spellbook_icon_rsc = book1.bgf
   alchemy_spellbook_desc_rsc = \
      "This massive book contains academic instructions on the topics of "
      "materials sciences and fundamental mystical forces. "
      "\n\nFrom the chapter headings, it is apparent that this tome will teach a level %i alchemy "
      "skill called %s. %s"

   alchemy_spell_book_generic_error_msg = \
      "This book is incomprehensible!"
   success_alchemy_spell_book = \
      "You read through the passages, studying the information within. "
      "It takes a great deal of thought, but you start to understand the workings of "
      "fundamental mystical forces a little bit more deeply."
   alchemy_spell_book_already_know_msg = \
      "You already have this knowledge."
   alchemy_spell_book_no_more_levels_msg = \
      "You've learned all you can. These concepts are beyond your grasp."
   alchemy_spell_book_no_previous_levels_msg = \
      "You don't know enough about the previous levels of alchemy to understand this tome."
   alchemy_spell_book_need_more_percents = \
      "You need %i more percentage points in the previous level of alchemy before you can understand this tome."

classvars:

   vrIcon = alchemy_spellbook_icon_rsc
   vrDesc = alchemy_spellbook_desc_rsc

   viUse_type = ITEM_SINGLE_USE
   viUse_amount = 1
   viBulk = 1
   viWeight = 1

properties:

   piAlchemySpellID = SID_CREATURE_SPEAK
   vrName = alchemy_spellbook_name_rsc
   viInventory_group = 3

messages:

   Constructed()
   {
      local lSkillsOne, lSkillsTwo,
            lSkillsThree, lSkillsFour, lSkillsFive, lSkillsSix,
            iRandomSkill, iRandomLevel;

      lSkillsOne = [SID_CREATE_HELMET,
                    SID_CREATE_SHIELD];

      lSkillsTwo = [SID_DOUSE];
      
      lSkillsThree = [SID_IMBUE_RING,
                      SID_CREATE_FIRE_BOMB,
                      SID_DETONATE_BOMBS];

      lSkillsFour = [SKID_RECONSTRUCT,
                     SID_CREATE_SHOCK_BOMB];

      lSkillsFive = [SID_CREATE_SPELL_BOMB];

%      lSkillsSix = [SID_CHARM_ELEMENTAL];

      iRandomLevel = 1;
      if Random(1,2) = 2
      {
         iRandomLevel = 2;
         if Random(1,2) = 2
         {
            iRandomLevel = 3;
            if Random(1,2) = 2
            {
               iRandomLevel = 4;
               if Random(1,2) = 2
               {
                  iRandomLevel = 5;
               }
            }
         }
      }
      
      switch(iRandomLevel)
      {
         case 1:
            piAlchemySpellID = Nth(lSkillsOne,Random(1,Length(lSkillsOne)));
            break;
         case 2:
            piAlchemySpellID = Nth(lSkillsTwo,Random(1,Length(lSkillsTwo)));
            break;
         case 3:
            piAlchemySpellID = Nth(lSkillsThree,Random(1,Length(lSkillsThree)));
            break;
         case 4:
            piAlchemySpellID = Nth(lSkillsFour,Random(1,Length(lSkillsFour)));
            break;
         case 5:
            piAlchemySpellID = Nth(lSkillsFive,Random(1,Length(lSkillsFive)));
            break;
         case 6:
            piAlchemySpellID = Nth(lSkillsSix,Random(1,Length(lSkillsSix)));
            break;
      }
      
      propagate;
   }

   ReqNewApply(what=$,apply_on=$)
   {
      local oSpell, iLearnAttempt;

      if what <> apply_on
      {
         return FALSE;
      }

      oSpell = Send(SYS,@FindSpellByNum,#num=piAlchemySpellID);
      if oSpell = $
      {
         return FALSE;
      }

      if Send(apply_on,@HasSpell,#num=piAlchemySpellID)
      {
         Send(apply_on,@MsgSendUser,#message_rsc=alchemy_spell_book_already_know_msg);
         return FALSE;
      }

      iLearnAttempt = Send(apply_on,@PlayerCanLearn,#spell_num=piAlchemySpellID);

      if iLearnAttempt mod 10 = PLAYER_LEARN_BASE
      {
         Send(what,@MsgSendUser,#message_rsc=alchemy_spell_book_need_more_percents,#parm1=iLearnAttempt/10);
         return FALSE;
      }

      switch(iLearnAttempt)
      {
         case PLAYER_LEARN_SUCCESS:
            Send(what,@MsgSendUser,#message_rsc=success_alchemy_spell_book);
            return TRUE;
         case PLAYER_LEARN_ALREADY:
            Send(what,@MsgSendUser,#message_rsc=alchemy_spell_book_already_know_msg);
            return FALSE;
         case PLAYER_LEARN_IMPOSSIBLE:
            Send(what,@MsgSendUser,#message_rsc=alchemy_spell_book_no_more_levels_msg);
            return FALSE;
         case PLAYER_LEARN_NOBASE:
            Send(what,@MsgSendUser,#message_rsc=alchemy_spell_book_no_previous_levels_msg);
            return FALSE;
      }

      Send(what,@MsgSendUser,#message_rsc=alchemy_spell_book_generic_error_msg);

      return FALSE;
   }

   NewApplied(what = $,apply_on = $)  
   {
      Send(apply_on,@AddSpell,#num=piAlchemySpellID);
%      Post(self,@Delete);
      return;
   }

   ShowDesc()
   {
      local oSpell;
      
      oSpell=Send(SYS,@FindSpellByNum,#num=piAlchemySpellID);
      AddPacket(4, alchemy_spellbook_desc_rsc, 4,Send(oSpell,@GetLevel), 4,Send(oSpell,@GetName), 4,Send(oSpell,@GetDesc));

      return;
   }

   NewOwner(what=$)
   {
      local oSpell;
      
      if what = $
      {
         propagate;
      }
      else
      {
         if IsClass(what,&Room)
         {
            vrName = alchemy_spellbook_name_rsc;
            Post(what,@SomethingChanged,#what=self);
            propagate;
         }
      }

      oSpell=Send(SYS,@FindSpellByNum,#num=piAlchemySpellID);
      if oSpell <> $
         AND Send(oSpell,@GetName) <> $
      {
         vrName = Send(oSpell,@GetName);
         Post(what,@SomethingChanged,#what=self);
      }

      propagate;
   }

   DestroyDisposable()
   {
      return FALSE;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
