% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
SeaPalaceRune is PassiveItem

%
% Sea Palace Runes:
% 
% Death: Contains undead monsters, graveyard room
% Jungle: contains plant/fungus monsters and insects, forest room
% Sky: contains avar/feathered winged monsters, mountain/hilly room
% Fractured: contains golems, strip mine room
% Hexed: contains elementals, “ritual” room
% Serpent: contains worms/snakes, muddy field room
% Sea: water level, contains aquatic monsters (maybe)
% Chained: dungeon arena, contains rats and slimes and possibly humanoid "prisoners"?
% Sword: contains bandits, bandit camp area
% Hammer: contains orcs, cave camp area
% Mountain: mountainous rocky area with giants/trolls
% Scaled: contains Draconians, half shallow water/half rocky field
%
% 

constants:

   include blakston.khd

resources:

   Sea_Palace_Rune_icon_rsc = runebase.bgf
   Sea_Palace_Rune_name_rsc = "oceanic rune"
   Sea_Palace_Rune_desc_base_rsc = \
      "This delicate metal carving is all that survived "
      "centuries of sea currents."
      
   rune_base_rsc = runebase.bgf
   rune_chained_rsc = runechained.bgf
   rune_death_rsc = runedeath.bgf
   rune_feather_rsc = runefeather.bgf
   rune_fractured_rsc = runefractured.bgf
   rune_hammer_rsc = runehammer.bgf
   rune_hexed_rsc = runehexed.bgf
   rune_jungle_rsc = runejungle.bgf
   rune_mountain_rsc = runemountain.bgf
   rune_scaled_rsc = runescaled.bgf
   rune_sea_rsc = runesea.bgf
   rune_serpent_rsc = runeserpent.bgf
   rune_sword_rsc = runesword.bgf

classvars:
   
   vrName = Sea_Palace_Rune_name_rsc
   vrDesc = Sea_Palace_Rune_desc_base_rsc

   viValue_average = 1500
   viWeight = 50
   viBulk = 50

properties:

   vrIcon = Sea_Palace_Rune_icon_rsc

   piRuneNumber = OCEANIC_RUNE_DEATH

messages:

   Constructor()
   {
      piRuneNumber = Random(OCEANIC_RUNE_DEATH,OCEANIC_RUNE_SCALED);
      
      Switch(piRuneNumber)
      {
         case OCEANIC_RUNE_DEATH:
            vrIcon = rune_death_rsc;
            break;
         case OCEANIC_RUNE_CHAINED:
            vrIcon = rune_chained_rsc;
            break;
         case OCEANIC_RUNE_SKY:
            vrIcon = rune_feather_rsc;
            break;
         case OCEANIC_RUNE_FRACTURED:
            vrIcon = rune_fractured_rsc;
            break;
         case OCEANIC_RUNE_HAMMER:
            vrIcon = rune_hammer_rsc;
            break;
         case OCEANIC_RUNE_HEXED:
            vrIcon = rune_hexed_rsc;
            break;
         case OCEANIC_RUNE_JUNGLE:
            vrIcon = rune_jungle_rsc;
            break;
         case OCEANIC_RUNE_MOUNTAIN:
            vrIcon = rune_mountain_rsc;
            break;
         case OCEANIC_RUNE_SCALED:
            vrIcon = rune_scaled_rsc;
            break;
         case OCEANIC_RUNE_SEA:
            vrIcon = rune_sea_rsc;
            break;
         case OCEANIC_RUNE_SERPENT:
            vrIcon = rune_serpent_rsc;
            break;
         case OCEANIC_RUNE_SWORD:
            vrIcon = rune_sword_rsc;
            break;
      }
      
      propagate;
   }

   GetMinimapDotFlags()
   {
      % Special item, add minimap dot.
      return MM_RARE_ITEM;
   }
   
   DestroyDisposable()
   {
      return FALSE;
   }
   
   GetRuneNumber()
   {
      return piRuneNumber;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

