% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
ThrowingDagger is Ammo

constants:

   include blakston.khd

resources:

   throwing_dagger_name_rsc = "throwing daggers"
   throwing_dagger_icon_rsc = throwingdaggers.bgf
   throwing_dagger_desc_rsc = \
      "These wicked blades are elegantly carved to be throwable at range."

   throwing_dagger_proj_rsc = \
      throwknifeproj.bgf

classvars:

   vrName = throwing_dagger_name_rsc
   vrIcon = throwing_dagger_icon_rsc
   vrDesc = throwing_dagger_desc_rsc
   
   vrProjectile = throwing_dagger_proj_rsc

   viProficiency_needed = SKID_PROFICIENCY_THROW

   viUse_type = ITEM_USE_THROWING_DAGGERS
   viAmmo_type = AMMO_DAGGER
   viValue_average = 4

   viGround_group = 2
   viInventory_group = 1
   viBroken_group = 3

   viBulk = 5
   viWeight = 5

   viMinDamage = 1
   viMaxDamage = 4

properties:

   piNumber = 5
   piAttack_type = ATCK_WEAP_PIERCE + ATCK_WEAP_NONMAGIC

messages:

   SendProjectileAnimation()
   {
      AddPacket(1,ANIMATE_CYCLE, 4,30, 2,1, 2,6);

      return;
   }

   GetProjectileSpeed()
   {
      return 6;
   }

   GetProjectileLightColor()
   {
      return 0;
   }

   GetProjectileIcon()
   {
      return vrProjectile;
   }
   
   GetMinDamage()
   {
      return viMinDamage;
   }
   
   GetMaxDamage()
   {
      return viMaxDamage;
   }

   GetStroke(who=$)
   {
      send(who,@FlipSkillAtrophyFlag,#SKID=SKID_THROW);
      
      return send(who,@GetSkillAbility,#skill_num=SKID_THROW);
   }

   GetProf(who=$)
   {
      send(who,@FlipSkillAtrophyFlag,#SKID=viProficiency_needed);
      
      return send(who,@GetSkillAbility,#skill_num=viProficiency_needed);
   }
   
   GetDamageType()
   {
      return piAttack_type;
   }
   
   GetSpellType()
   {
      return 0;
   }

   GetProfNumber()
   {
      return viProficiency_needed;
   }

   ImproveProficiency(who=$,target=$,bonus=0)
   {
      Send(Send(SYS,@findSkillbynum,#num=viProficiency_needed),@ImproveAbility,
            #who=who,#target=target,#bonus=bonus);

      return;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
